// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.26.0
// 	protoc        v3.12.2
// source: proto/user/user.proto

package user

import (
	timestamp "github.com/golang/protobuf/ptypes/timestamp"
	wrappers "github.com/golang/protobuf/ptypes/wrappers"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type EmptyRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *EmptyRequest) Reset() {
	*x = EmptyRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_user_user_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *EmptyRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*EmptyRequest) ProtoMessage() {}

func (x *EmptyRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_user_user_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use EmptyRequest.ProtoReflect.Descriptor instead.
func (*EmptyRequest) Descriptor() ([]byte, []int) {
	return file_proto_user_user_proto_rawDescGZIP(), []int{0}
}

type UpdateProfileRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Email                  string             `protobuf:"bytes,1,opt,name=email,proto3" json:"email,omitempty"`
	Name                   string             `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	Lastname               string             `protobuf:"bytes,3,opt,name=lastname,proto3" json:"lastname,omitempty"`
	Birthdate              string             `protobuf:"bytes,4,opt,name=birthdate,proto3" json:"birthdate,omitempty"`
	Sex                    string             `protobuf:"bytes,5,opt,name=sex,proto3" json:"sex,omitempty"`
	Tel                    string             `protobuf:"bytes,6,opt,name=tel,proto3" json:"tel,omitempty"`
	FavoriteArtists        []int32            `protobuf:"varint,7,rep,packed,name=favoriteArtists,json=favorite_artists,proto3" json:"favoriteArtists,omitempty"`
	FavoriteArtistsType    string             `protobuf:"bytes,8,opt,name=favoriteArtistsType,json=favorite_artists_type,proto3" json:"favoriteArtistsType,omitempty"`
	UserAddress            *UserAddressDetail `protobuf:"bytes,9,opt,name=userAddress,json=user_address,proto3" json:"userAddress,omitempty"`
	EmailContact           string             `protobuf:"bytes,10,opt,name=emailContact,json=email_contact,proto3" json:"emailContact,omitempty"`
	LiveInThailand         int32              `protobuf:"varint,11,opt,name=liveInThailand,json=live_in_thailand,proto3" json:"liveInThailand,omitempty"`
	PartnerReferenceNumber string             `protobuf:"bytes,12,opt,name=partnerReferenceNumber,json=partner_reference_number,proto3" json:"partnerReferenceNumber,omitempty"`
	TelContact             string             `protobuf:"bytes,13,opt,name=telContact,json=tel_contact,proto3" json:"telContact,omitempty"`
}

func (x *UpdateProfileRequest) Reset() {
	*x = UpdateProfileRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_user_user_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateProfileRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateProfileRequest) ProtoMessage() {}

func (x *UpdateProfileRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_user_user_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateProfileRequest.ProtoReflect.Descriptor instead.
func (*UpdateProfileRequest) Descriptor() ([]byte, []int) {
	return file_proto_user_user_proto_rawDescGZIP(), []int{1}
}

func (x *UpdateProfileRequest) GetEmail() string {
	if x != nil {
		return x.Email
	}
	return ""
}

func (x *UpdateProfileRequest) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *UpdateProfileRequest) GetLastname() string {
	if x != nil {
		return x.Lastname
	}
	return ""
}

func (x *UpdateProfileRequest) GetBirthdate() string {
	if x != nil {
		return x.Birthdate
	}
	return ""
}

func (x *UpdateProfileRequest) GetSex() string {
	if x != nil {
		return x.Sex
	}
	return ""
}

func (x *UpdateProfileRequest) GetTel() string {
	if x != nil {
		return x.Tel
	}
	return ""
}

func (x *UpdateProfileRequest) GetFavoriteArtists() []int32 {
	if x != nil {
		return x.FavoriteArtists
	}
	return nil
}

func (x *UpdateProfileRequest) GetFavoriteArtistsType() string {
	if x != nil {
		return x.FavoriteArtistsType
	}
	return ""
}

func (x *UpdateProfileRequest) GetUserAddress() *UserAddressDetail {
	if x != nil {
		return x.UserAddress
	}
	return nil
}

func (x *UpdateProfileRequest) GetEmailContact() string {
	if x != nil {
		return x.EmailContact
	}
	return ""
}

func (x *UpdateProfileRequest) GetLiveInThailand() int32 {
	if x != nil {
		return x.LiveInThailand
	}
	return 0
}

func (x *UpdateProfileRequest) GetPartnerReferenceNumber() string {
	if x != nil {
		return x.PartnerReferenceNumber
	}
	return ""
}

func (x *UpdateProfileRequest) GetTelContact() string {
	if x != nil {
		return x.TelContact
	}
	return ""
}

type ResetPasswordTokenRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Token string `protobuf:"bytes,1,opt,name=token,proto3" json:"token,omitempty"`
}

func (x *ResetPasswordTokenRequest) Reset() {
	*x = ResetPasswordTokenRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_user_user_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ResetPasswordTokenRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ResetPasswordTokenRequest) ProtoMessage() {}

func (x *ResetPasswordTokenRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_user_user_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ResetPasswordTokenRequest.ProtoReflect.Descriptor instead.
func (*ResetPasswordTokenRequest) Descriptor() ([]byte, []int) {
	return file_proto_user_user_proto_rawDescGZIP(), []int{2}
}

func (x *ResetPasswordTokenRequest) GetToken() string {
	if x != nil {
		return x.Token
	}
	return ""
}

type ResetPasswordTokenResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Token     string               `protobuf:"bytes,1,opt,name=token,proto3" json:"token,omitempty"`
	ExpiredAt *timestamp.Timestamp `protobuf:"bytes,2,opt,name=expiredAt,json=expired_at,proto3" json:"expiredAt,omitempty"`
}

func (x *ResetPasswordTokenResponse) Reset() {
	*x = ResetPasswordTokenResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_user_user_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ResetPasswordTokenResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ResetPasswordTokenResponse) ProtoMessage() {}

func (x *ResetPasswordTokenResponse) ProtoReflect() protoreflect.Message {
	mi := &file_proto_user_user_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ResetPasswordTokenResponse.ProtoReflect.Descriptor instead.
func (*ResetPasswordTokenResponse) Descriptor() ([]byte, []int) {
	return file_proto_user_user_proto_rawDescGZIP(), []int{3}
}

func (x *ResetPasswordTokenResponse) GetToken() string {
	if x != nil {
		return x.Token
	}
	return ""
}

func (x *ResetPasswordTokenResponse) GetExpiredAt() *timestamp.Timestamp {
	if x != nil {
		return x.ExpiredAt
	}
	return nil
}

type ResetPasswordRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Email string `protobuf:"bytes,1,opt,name=email,proto3" json:"email,omitempty"`
	Tel   string `protobuf:"bytes,2,opt,name=tel,proto3" json:"tel,omitempty"`
}

func (x *ResetPasswordRequest) Reset() {
	*x = ResetPasswordRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_user_user_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ResetPasswordRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ResetPasswordRequest) ProtoMessage() {}

func (x *ResetPasswordRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_user_user_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ResetPasswordRequest.ProtoReflect.Descriptor instead.
func (*ResetPasswordRequest) Descriptor() ([]byte, []int) {
	return file_proto_user_user_proto_rawDescGZIP(), []int{4}
}

func (x *ResetPasswordRequest) GetEmail() string {
	if x != nil {
		return x.Email
	}
	return ""
}

func (x *ResetPasswordRequest) GetTel() string {
	if x != nil {
		return x.Tel
	}
	return ""
}

type UpdateResetPasswordRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Token    string `protobuf:"bytes,1,opt,name=token,proto3" json:"token,omitempty"`
	Password string `protobuf:"bytes,2,opt,name=password,proto3" json:"password,omitempty"`
}

func (x *UpdateResetPasswordRequest) Reset() {
	*x = UpdateResetPasswordRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_user_user_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateResetPasswordRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateResetPasswordRequest) ProtoMessage() {}

func (x *UpdateResetPasswordRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_user_user_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateResetPasswordRequest.ProtoReflect.Descriptor instead.
func (*UpdateResetPasswordRequest) Descriptor() ([]byte, []int) {
	return file_proto_user_user_proto_rawDescGZIP(), []int{5}
}

func (x *UpdateResetPasswordRequest) GetToken() string {
	if x != nil {
		return x.Token
	}
	return ""
}

func (x *UpdateResetPasswordRequest) GetPassword() string {
	if x != nil {
		return x.Password
	}
	return ""
}

type RegisterRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Email            string `protobuf:"bytes,1,opt,name=email,proto3" json:"email,omitempty"`
	Password         string `protobuf:"bytes,2,opt,name=password,proto3" json:"password,omitempty"`
	CaptchaToken     string `protobuf:"bytes,3,opt,name=captchaToken,json=captcha_token,proto3" json:"captchaToken,omitempty"`
	RedirectUrl      string `protobuf:"bytes,4,opt,name=redirectUrl,json=redirect_url,proto3" json:"redirectUrl,omitempty"`
	ClientId         string `protobuf:"bytes,5,opt,name=clientId,json=client_id,proto3" json:"clientId,omitempty"`
	WithTermsConsent string `protobuf:"bytes,6,opt,name=withTermsConsent,json=with_terms_consent,proto3" json:"withTermsConsent,omitempty"`
	WithPPConsent    string `protobuf:"bytes,7,opt,name=withPPConsent,json=with_pp_consent,proto3" json:"withPPConsent,omitempty"`
	EmailContact     string `protobuf:"bytes,8,opt,name=emailContact,json=email_contact,proto3" json:"emailContact,omitempty"`
	Birthdate        string `protobuf:"bytes,9,opt,name=birthdate,proto3" json:"birthdate,omitempty"`
	Sex              string `protobuf:"bytes,10,opt,name=sex,proto3" json:"sex,omitempty"`
	TelContact       string `protobuf:"bytes,11,opt,name=telContact,json=tel_contact,proto3" json:"telContact,omitempty"`
}

func (x *RegisterRequest) Reset() {
	*x = RegisterRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_user_user_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RegisterRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RegisterRequest) ProtoMessage() {}

func (x *RegisterRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_user_user_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RegisterRequest.ProtoReflect.Descriptor instead.
func (*RegisterRequest) Descriptor() ([]byte, []int) {
	return file_proto_user_user_proto_rawDescGZIP(), []int{6}
}

func (x *RegisterRequest) GetEmail() string {
	if x != nil {
		return x.Email
	}
	return ""
}

func (x *RegisterRequest) GetPassword() string {
	if x != nil {
		return x.Password
	}
	return ""
}

func (x *RegisterRequest) GetCaptchaToken() string {
	if x != nil {
		return x.CaptchaToken
	}
	return ""
}

func (x *RegisterRequest) GetRedirectUrl() string {
	if x != nil {
		return x.RedirectUrl
	}
	return ""
}

func (x *RegisterRequest) GetClientId() string {
	if x != nil {
		return x.ClientId
	}
	return ""
}

func (x *RegisterRequest) GetWithTermsConsent() string {
	if x != nil {
		return x.WithTermsConsent
	}
	return ""
}

func (x *RegisterRequest) GetWithPPConsent() string {
	if x != nil {
		return x.WithPPConsent
	}
	return ""
}

func (x *RegisterRequest) GetEmailContact() string {
	if x != nil {
		return x.EmailContact
	}
	return ""
}

func (x *RegisterRequest) GetBirthdate() string {
	if x != nil {
		return x.Birthdate
	}
	return ""
}

func (x *RegisterRequest) GetSex() string {
	if x != nil {
		return x.Sex
	}
	return ""
}

func (x *RegisterRequest) GetTelContact() string {
	if x != nil {
		return x.TelContact
	}
	return ""
}

type RegisterWithMobileNumberRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Tel              string `protobuf:"bytes,1,opt,name=tel,proto3" json:"tel,omitempty"`
	Password         string `protobuf:"bytes,2,opt,name=password,proto3" json:"password,omitempty"`
	CaptchaToken     string `protobuf:"bytes,3,opt,name=captchaToken,json=captcha_token,proto3" json:"captchaToken,omitempty"`
	RedirectUrl      string `protobuf:"bytes,4,opt,name=redirectUrl,json=redirect_url,proto3" json:"redirectUrl,omitempty"`
	ClientId         string `protobuf:"bytes,5,opt,name=clientId,json=client_id,proto3" json:"clientId,omitempty"`
	WithTermsConsent string `protobuf:"bytes,6,opt,name=withTermsConsent,json=with_terms_consent,proto3" json:"withTermsConsent,omitempty"`
	WithPPConsent    string `protobuf:"bytes,7,opt,name=withPPConsent,json=with_pp_consent,proto3" json:"withPPConsent,omitempty"`
	EmailContact     string `protobuf:"bytes,8,opt,name=emailContact,json=email_contact,proto3" json:"emailContact,omitempty"`
	Birthdate        string `protobuf:"bytes,9,opt,name=birthdate,proto3" json:"birthdate,omitempty"`
	Sex              string `protobuf:"bytes,10,opt,name=sex,proto3" json:"sex,omitempty"`
	TelContact       string `protobuf:"bytes,11,opt,name=telContact,json=tel_contact,proto3" json:"telContact,omitempty"`
}

func (x *RegisterWithMobileNumberRequest) Reset() {
	*x = RegisterWithMobileNumberRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_user_user_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RegisterWithMobileNumberRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RegisterWithMobileNumberRequest) ProtoMessage() {}

func (x *RegisterWithMobileNumberRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_user_user_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RegisterWithMobileNumberRequest.ProtoReflect.Descriptor instead.
func (*RegisterWithMobileNumberRequest) Descriptor() ([]byte, []int) {
	return file_proto_user_user_proto_rawDescGZIP(), []int{7}
}

func (x *RegisterWithMobileNumberRequest) GetTel() string {
	if x != nil {
		return x.Tel
	}
	return ""
}

func (x *RegisterWithMobileNumberRequest) GetPassword() string {
	if x != nil {
		return x.Password
	}
	return ""
}

func (x *RegisterWithMobileNumberRequest) GetCaptchaToken() string {
	if x != nil {
		return x.CaptchaToken
	}
	return ""
}

func (x *RegisterWithMobileNumberRequest) GetRedirectUrl() string {
	if x != nil {
		return x.RedirectUrl
	}
	return ""
}

func (x *RegisterWithMobileNumberRequest) GetClientId() string {
	if x != nil {
		return x.ClientId
	}
	return ""
}

func (x *RegisterWithMobileNumberRequest) GetWithTermsConsent() string {
	if x != nil {
		return x.WithTermsConsent
	}
	return ""
}

func (x *RegisterWithMobileNumberRequest) GetWithPPConsent() string {
	if x != nil {
		return x.WithPPConsent
	}
	return ""
}

func (x *RegisterWithMobileNumberRequest) GetEmailContact() string {
	if x != nil {
		return x.EmailContact
	}
	return ""
}

func (x *RegisterWithMobileNumberRequest) GetBirthdate() string {
	if x != nil {
		return x.Birthdate
	}
	return ""
}

func (x *RegisterWithMobileNumberRequest) GetSex() string {
	if x != nil {
		return x.Sex
	}
	return ""
}

func (x *RegisterWithMobileNumberRequest) GetTelContact() string {
	if x != nil {
		return x.TelContact
	}
	return ""
}

type RegisterWithMobileNumberAisRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Username         string `protobuf:"bytes,1,opt,name=username,proto3" json:"username,omitempty"`
	Password         string `protobuf:"bytes,2,opt,name=password,proto3" json:"password,omitempty"`
	CaptchaToken     string `protobuf:"bytes,3,opt,name=captchaToken,json=captcha_token,proto3" json:"captchaToken,omitempty"`
	RedirectUrl      string `protobuf:"bytes,4,opt,name=redirectUrl,json=redirect_url,proto3" json:"redirectUrl,omitempty"`
	ClientId         string `protobuf:"bytes,5,opt,name=clientId,json=client_id,proto3" json:"clientId,omitempty"`
	WithTermsConsent string `protobuf:"bytes,6,opt,name=withTermsConsent,json=with_terms_consent,proto3" json:"withTermsConsent,omitempty"`
	WithPPConsent    string `protobuf:"bytes,7,opt,name=withPPConsent,json=with_pp_consent,proto3" json:"withPPConsent,omitempty"`
	EmailContact     string `protobuf:"bytes,8,opt,name=emailContact,json=email_contact,proto3" json:"emailContact,omitempty"`
	Birthdate        string `protobuf:"bytes,9,opt,name=birthdate,proto3" json:"birthdate,omitempty"`
	Sex              string `protobuf:"bytes,10,opt,name=sex,proto3" json:"sex,omitempty"`
	TelContact       string `protobuf:"bytes,11,opt,name=telContact,json=tel_contact,proto3" json:"telContact,omitempty"`
}

func (x *RegisterWithMobileNumberAisRequest) Reset() {
	*x = RegisterWithMobileNumberAisRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_user_user_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RegisterWithMobileNumberAisRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RegisterWithMobileNumberAisRequest) ProtoMessage() {}

func (x *RegisterWithMobileNumberAisRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_user_user_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RegisterWithMobileNumberAisRequest.ProtoReflect.Descriptor instead.
func (*RegisterWithMobileNumberAisRequest) Descriptor() ([]byte, []int) {
	return file_proto_user_user_proto_rawDescGZIP(), []int{8}
}

func (x *RegisterWithMobileNumberAisRequest) GetUsername() string {
	if x != nil {
		return x.Username
	}
	return ""
}

func (x *RegisterWithMobileNumberAisRequest) GetPassword() string {
	if x != nil {
		return x.Password
	}
	return ""
}

func (x *RegisterWithMobileNumberAisRequest) GetCaptchaToken() string {
	if x != nil {
		return x.CaptchaToken
	}
	return ""
}

func (x *RegisterWithMobileNumberAisRequest) GetRedirectUrl() string {
	if x != nil {
		return x.RedirectUrl
	}
	return ""
}

func (x *RegisterWithMobileNumberAisRequest) GetClientId() string {
	if x != nil {
		return x.ClientId
	}
	return ""
}

func (x *RegisterWithMobileNumberAisRequest) GetWithTermsConsent() string {
	if x != nil {
		return x.WithTermsConsent
	}
	return ""
}

func (x *RegisterWithMobileNumberAisRequest) GetWithPPConsent() string {
	if x != nil {
		return x.WithPPConsent
	}
	return ""
}

func (x *RegisterWithMobileNumberAisRequest) GetEmailContact() string {
	if x != nil {
		return x.EmailContact
	}
	return ""
}

func (x *RegisterWithMobileNumberAisRequest) GetBirthdate() string {
	if x != nil {
		return x.Birthdate
	}
	return ""
}

func (x *RegisterWithMobileNumberAisRequest) GetSex() string {
	if x != nil {
		return x.Sex
	}
	return ""
}

func (x *RegisterWithMobileNumberAisRequest) GetTelContact() string {
	if x != nil {
		return x.TelContact
	}
	return ""
}

type SuccessResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Message string         `protobuf:"bytes,1,opt,name=message,proto3" json:"message,omitempty"`
	Result  *SuccessResult `protobuf:"bytes,2,opt,name=result,proto3" json:"result,omitempty"`
}

func (x *SuccessResponse) Reset() {
	*x = SuccessResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_user_user_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SuccessResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SuccessResponse) ProtoMessage() {}

func (x *SuccessResponse) ProtoReflect() protoreflect.Message {
	mi := &file_proto_user_user_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SuccessResponse.ProtoReflect.Descriptor instead.
func (*SuccessResponse) Descriptor() ([]byte, []int) {
	return file_proto_user_user_proto_rawDescGZIP(), []int{9}
}

func (x *SuccessResponse) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

func (x *SuccessResponse) GetResult() *SuccessResult {
	if x != nil {
		return x.Result
	}
	return nil
}

type SuccessResult struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id string `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
}

func (x *SuccessResult) Reset() {
	*x = SuccessResult{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_user_user_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SuccessResult) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SuccessResult) ProtoMessage() {}

func (x *SuccessResult) ProtoReflect() protoreflect.Message {
	mi := &file_proto_user_user_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SuccessResult.ProtoReflect.Descriptor instead.
func (*SuccessResult) Descriptor() ([]byte, []int) {
	return file_proto_user_user_proto_rawDescGZIP(), []int{10}
}

func (x *SuccessResult) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

type VerifyUserRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Token string `protobuf:"bytes,1,opt,name=token,proto3" json:"token,omitempty"`
}

func (x *VerifyUserRequest) Reset() {
	*x = VerifyUserRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_user_user_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *VerifyUserRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*VerifyUserRequest) ProtoMessage() {}

func (x *VerifyUserRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_user_user_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use VerifyUserRequest.ProtoReflect.Descriptor instead.
func (*VerifyUserRequest) Descriptor() ([]byte, []int) {
	return file_proto_user_user_proto_rawDescGZIP(), []int{11}
}

func (x *VerifyUserRequest) GetToken() string {
	if x != nil {
		return x.Token
	}
	return ""
}

type VerifyUserResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Message string `protobuf:"bytes,1,opt,name=message,proto3" json:"message,omitempty"`
}

func (x *VerifyUserResponse) Reset() {
	*x = VerifyUserResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_user_user_proto_msgTypes[12]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *VerifyUserResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*VerifyUserResponse) ProtoMessage() {}

func (x *VerifyUserResponse) ProtoReflect() protoreflect.Message {
	mi := &file_proto_user_user_proto_msgTypes[12]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use VerifyUserResponse.ProtoReflect.Descriptor instead.
func (*VerifyUserResponse) Descriptor() ([]byte, []int) {
	return file_proto_user_user_proto_rawDescGZIP(), []int{12}
}

func (x *VerifyUserResponse) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

type UserEvent struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Event      string      `protobuf:"bytes,1,opt,name=event,proto3" json:"event,omitempty"`
	Userdetail *UserDetail `protobuf:"bytes,2,opt,name=userdetail,proto3" json:"userdetail,omitempty"`
}

func (x *UserEvent) Reset() {
	*x = UserEvent{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_user_user_proto_msgTypes[13]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UserEvent) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UserEvent) ProtoMessage() {}

func (x *UserEvent) ProtoReflect() protoreflect.Message {
	mi := &file_proto_user_user_proto_msgTypes[13]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UserEvent.ProtoReflect.Descriptor instead.
func (*UserEvent) Descriptor() ([]byte, []int) {
	return file_proto_user_user_proto_rawDescGZIP(), []int{13}
}

func (x *UserEvent) GetEvent() string {
	if x != nil {
		return x.Event
	}
	return ""
}

func (x *UserEvent) GetUserdetail() *UserDetail {
	if x != nil {
		return x.Userdetail
	}
	return nil
}

type MailEvent struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Sender        string `protobuf:"bytes,1,opt,name=sender,proto3" json:"sender,omitempty"`
	From          string `protobuf:"bytes,2,opt,name=from,proto3" json:"from,omitempty"`
	Receiver      string `protobuf:"bytes,3,opt,name=receiver,proto3" json:"receiver,omitempty"`
	To            string `protobuf:"bytes,4,opt,name=to,proto3" json:"to,omitempty"`
	Subject       string `protobuf:"bytes,5,opt,name=subject,proto3" json:"subject,omitempty"`
	Link          string `protobuf:"bytes,6,opt,name=link,proto3" json:"link,omitempty"`
	Body          string `protobuf:"bytes,7,opt,name=body,proto3" json:"body,omitempty"`
	Template      string `protobuf:"bytes,8,opt,name=template,proto3" json:"template,omitempty"`
	Emailcustomer string `protobuf:"bytes,9,opt,name=emailcustomer,proto3" json:"emailcustomer,omitempty"`
}

func (x *MailEvent) Reset() {
	*x = MailEvent{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_user_user_proto_msgTypes[14]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MailEvent) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MailEvent) ProtoMessage() {}

func (x *MailEvent) ProtoReflect() protoreflect.Message {
	mi := &file_proto_user_user_proto_msgTypes[14]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MailEvent.ProtoReflect.Descriptor instead.
func (*MailEvent) Descriptor() ([]byte, []int) {
	return file_proto_user_user_proto_rawDescGZIP(), []int{14}
}

func (x *MailEvent) GetSender() string {
	if x != nil {
		return x.Sender
	}
	return ""
}

func (x *MailEvent) GetFrom() string {
	if x != nil {
		return x.From
	}
	return ""
}

func (x *MailEvent) GetReceiver() string {
	if x != nil {
		return x.Receiver
	}
	return ""
}

func (x *MailEvent) GetTo() string {
	if x != nil {
		return x.To
	}
	return ""
}

func (x *MailEvent) GetSubject() string {
	if x != nil {
		return x.Subject
	}
	return ""
}

func (x *MailEvent) GetLink() string {
	if x != nil {
		return x.Link
	}
	return ""
}

func (x *MailEvent) GetBody() string {
	if x != nil {
		return x.Body
	}
	return ""
}

func (x *MailEvent) GetTemplate() string {
	if x != nil {
		return x.Template
	}
	return ""
}

func (x *MailEvent) GetEmailcustomer() string {
	if x != nil {
		return x.Emailcustomer
	}
	return ""
}

type S3Event struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	File   string `protobuf:"bytes,1,opt,name=file,proto3" json:"file,omitempty"`
	Action string `protobuf:"bytes,2,opt,name=action,proto3" json:"action,omitempty"`
	Bucket string `protobuf:"bytes,3,opt,name=bucket,proto3" json:"bucket,omitempty"`
}

func (x *S3Event) Reset() {
	*x = S3Event{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_user_user_proto_msgTypes[15]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *S3Event) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*S3Event) ProtoMessage() {}

func (x *S3Event) ProtoReflect() protoreflect.Message {
	mi := &file_proto_user_user_proto_msgTypes[15]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use S3Event.ProtoReflect.Descriptor instead.
func (*S3Event) Descriptor() ([]byte, []int) {
	return file_proto_user_user_proto_rawDescGZIP(), []int{15}
}

func (x *S3Event) GetFile() string {
	if x != nil {
		return x.File
	}
	return ""
}

func (x *S3Event) GetAction() string {
	if x != nil {
		return x.Action
	}
	return ""
}

func (x *S3Event) GetBucket() string {
	if x != nil {
		return x.Bucket
	}
	return ""
}

type PointTopicEvent struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	EventType string                `protobuf:"bytes,1,opt,name=eventType,proto3" json:"eventType,omitempty"`
	UserId    string                `protobuf:"bytes,2,opt,name=userId,proto3" json:"userId,omitempty"`
	RefId     string                `protobuf:"bytes,3,opt,name=refId,proto3" json:"refId,omitempty"`
	CreatedAt string                `protobuf:"bytes,4,opt,name=createdAt,proto3" json:"createdAt,omitempty"`
	Data      *wrappers.StringValue `protobuf:"bytes,5,opt,name=data,proto3" json:"data,omitempty"`
}

func (x *PointTopicEvent) Reset() {
	*x = PointTopicEvent{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_user_user_proto_msgTypes[16]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PointTopicEvent) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PointTopicEvent) ProtoMessage() {}

func (x *PointTopicEvent) ProtoReflect() protoreflect.Message {
	mi := &file_proto_user_user_proto_msgTypes[16]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PointTopicEvent.ProtoReflect.Descriptor instead.
func (*PointTopicEvent) Descriptor() ([]byte, []int) {
	return file_proto_user_user_proto_rawDescGZIP(), []int{16}
}

func (x *PointTopicEvent) GetEventType() string {
	if x != nil {
		return x.EventType
	}
	return ""
}

func (x *PointTopicEvent) GetUserId() string {
	if x != nil {
		return x.UserId
	}
	return ""
}

func (x *PointTopicEvent) GetRefId() string {
	if x != nil {
		return x.RefId
	}
	return ""
}

func (x *PointTopicEvent) GetCreatedAt() string {
	if x != nil {
		return x.CreatedAt
	}
	return ""
}

func (x *PointTopicEvent) GetData() *wrappers.StringValue {
	if x != nil {
		return x.Data
	}
	return nil
}

type UserDetail struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id                     string                  `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	Email                  string                  `protobuf:"bytes,2,opt,name=email,proto3" json:"email,omitempty"`
	Password               string                  `protobuf:"bytes,3,opt,name=password,proto3" json:"password,omitempty"`
	Name                   string                  `protobuf:"bytes,4,opt,name=name,proto3" json:"name,omitempty"`
	Lastname               string                  `protobuf:"bytes,5,opt,name=lastname,proto3" json:"lastname,omitempty"`
	Birthdate              string                  `protobuf:"bytes,6,opt,name=birthdate,proto3" json:"birthdate,omitempty"`
	Sex                    string                  `protobuf:"bytes,7,opt,name=sex,proto3" json:"sex,omitempty"`
	Tel                    string                  `protobuf:"bytes,8,opt,name=tel,proto3" json:"tel,omitempty"`
	CreatedAt              *timestamp.Timestamp    `protobuf:"bytes,9,opt,name=created_at,proto3" json:"created_at,omitempty"`
	UpdatedAt              *timestamp.Timestamp    `protobuf:"bytes,10,opt,name=updated_at,proto3" json:"updated_at,omitempty"`
	RedirectUrl            string                  `protobuf:"bytes,11,opt,name=redirectUrl,json=redirect_url,proto3" json:"redirectUrl,omitempty"`
	ClientID               string                  `protobuf:"bytes,12,opt,name=clientID,json=client_id,proto3" json:"clientID,omitempty"`
	UserStatus             string                  `protobuf:"bytes,13,opt,name=userStatus,json=user_status,proto3" json:"userStatus,omitempty"`
	Source                 string                  `protobuf:"bytes,14,opt,name=source,proto3" json:"source,omitempty"`
	FacebookID             string                  `protobuf:"bytes,15,opt,name=facebookID,json=facebook_id,proto3" json:"facebookID,omitempty"`
	GoogleID               string                  `protobuf:"bytes,16,opt,name=googleID,json=google_id,proto3" json:"googleID,omitempty"`
	LineID                 string                  `protobuf:"bytes,17,opt,name=lineID,json=line_id,proto3" json:"lineID,omitempty"`
	AppleID                string                  `protobuf:"bytes,18,opt,name=appleID,json=apple_id,proto3" json:"appleID,omitempty"`
	ImageURL               string                  `protobuf:"bytes,19,opt,name=imageURL,json=image_url,proto3" json:"imageURL,omitempty"`
	FavoriteArtists        []*FavoriteArtistItem   `protobuf:"bytes,20,rep,name=favoriteArtists,json=favorite_artists,proto3" json:"favoriteArtists,omitempty"`
	FavoriteArtistsType    string                  `protobuf:"bytes,21,opt,name=favoriteArtistsType,json=favorite_artists_type,proto3" json:"favoriteArtistsType,omitempty"`
	UserAddress            *UserAddressDetail      `protobuf:"bytes,22,opt,name=userAddress,json=user_address,proto3" json:"userAddress,omitempty"`
	EmailContact           string                  `protobuf:"bytes,23,opt,name=emailContact,json=email_contact,proto3" json:"emailContact,omitempty"`
	LiveInThailand         int32                   `protobuf:"varint,24,opt,name=liveInThailand,json=live_in_thailand,proto3" json:"liveInThailand,omitempty"`
	PartnerReferenceNumber string                  `protobuf:"bytes,25,opt,name=partnerReferenceNumber,json=partner_reference_number,proto3" json:"partnerReferenceNumber,omitempty"`
	TelContact             string                  `protobuf:"bytes,26,opt,name=telContact,json=tel_contact,proto3" json:"telContact,omitempty"`
	UserInterestResponse   []*UserInterestResponse `protobuf:"bytes,27,rep,name=userInterestResponse,json=users_interest_list,proto3" json:"userInterestResponse,omitempty"`
	IsNewUser              bool                    `protobuf:"varint,28,opt,name=isNewUser,json=is_new_user,proto3" json:"isNewUser,omitempty"`
}

func (x *UserDetail) Reset() {
	*x = UserDetail{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_user_user_proto_msgTypes[17]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UserDetail) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UserDetail) ProtoMessage() {}

func (x *UserDetail) ProtoReflect() protoreflect.Message {
	mi := &file_proto_user_user_proto_msgTypes[17]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UserDetail.ProtoReflect.Descriptor instead.
func (*UserDetail) Descriptor() ([]byte, []int) {
	return file_proto_user_user_proto_rawDescGZIP(), []int{17}
}

func (x *UserDetail) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *UserDetail) GetEmail() string {
	if x != nil {
		return x.Email
	}
	return ""
}

func (x *UserDetail) GetPassword() string {
	if x != nil {
		return x.Password
	}
	return ""
}

func (x *UserDetail) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *UserDetail) GetLastname() string {
	if x != nil {
		return x.Lastname
	}
	return ""
}

func (x *UserDetail) GetBirthdate() string {
	if x != nil {
		return x.Birthdate
	}
	return ""
}

func (x *UserDetail) GetSex() string {
	if x != nil {
		return x.Sex
	}
	return ""
}

func (x *UserDetail) GetTel() string {
	if x != nil {
		return x.Tel
	}
	return ""
}

func (x *UserDetail) GetCreatedAt() *timestamp.Timestamp {
	if x != nil {
		return x.CreatedAt
	}
	return nil
}

func (x *UserDetail) GetUpdatedAt() *timestamp.Timestamp {
	if x != nil {
		return x.UpdatedAt
	}
	return nil
}

func (x *UserDetail) GetRedirectUrl() string {
	if x != nil {
		return x.RedirectUrl
	}
	return ""
}

func (x *UserDetail) GetClientID() string {
	if x != nil {
		return x.ClientID
	}
	return ""
}

func (x *UserDetail) GetUserStatus() string {
	if x != nil {
		return x.UserStatus
	}
	return ""
}

func (x *UserDetail) GetSource() string {
	if x != nil {
		return x.Source
	}
	return ""
}

func (x *UserDetail) GetFacebookID() string {
	if x != nil {
		return x.FacebookID
	}
	return ""
}

func (x *UserDetail) GetGoogleID() string {
	if x != nil {
		return x.GoogleID
	}
	return ""
}

func (x *UserDetail) GetLineID() string {
	if x != nil {
		return x.LineID
	}
	return ""
}

func (x *UserDetail) GetAppleID() string {
	if x != nil {
		return x.AppleID
	}
	return ""
}

func (x *UserDetail) GetImageURL() string {
	if x != nil {
		return x.ImageURL
	}
	return ""
}

func (x *UserDetail) GetFavoriteArtists() []*FavoriteArtistItem {
	if x != nil {
		return x.FavoriteArtists
	}
	return nil
}

func (x *UserDetail) GetFavoriteArtistsType() string {
	if x != nil {
		return x.FavoriteArtistsType
	}
	return ""
}

func (x *UserDetail) GetUserAddress() *UserAddressDetail {
	if x != nil {
		return x.UserAddress
	}
	return nil
}

func (x *UserDetail) GetEmailContact() string {
	if x != nil {
		return x.EmailContact
	}
	return ""
}

func (x *UserDetail) GetLiveInThailand() int32 {
	if x != nil {
		return x.LiveInThailand
	}
	return 0
}

func (x *UserDetail) GetPartnerReferenceNumber() string {
	if x != nil {
		return x.PartnerReferenceNumber
	}
	return ""
}

func (x *UserDetail) GetTelContact() string {
	if x != nil {
		return x.TelContact
	}
	return ""
}

func (x *UserDetail) GetUserInterestResponse() []*UserInterestResponse {
	if x != nil {
		return x.UserInterestResponse
	}
	return nil
}

func (x *UserDetail) GetIsNewUser() bool {
	if x != nil {
		return x.IsNewUser
	}
	return false
}

type FavoriteArtistItem struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	DaraID              *wrappers.Int32Value  `protobuf:"bytes,1,opt,name=daraID,json=dara_id,proto3" json:"daraID,omitempty"`
	FullName            *wrappers.StringValue `protobuf:"bytes,2,opt,name=fullName,json=full_name,proto3" json:"fullName,omitempty"`
	NickName            *wrappers.StringValue `protobuf:"bytes,3,opt,name=nickName,json=nick_name,proto3" json:"nickName,omitempty"`
	Gender              *wrappers.StringValue `protobuf:"bytes,4,opt,name=gender,proto3" json:"gender,omitempty"`
	ImageSmall          *wrappers.StringValue `protobuf:"bytes,5,opt,name=imageSmall,json=image_small,proto3" json:"imageSmall,omitempty"`
	ImageMedium         *wrappers.StringValue `protobuf:"bytes,6,opt,name=imageMedium,json=image_medium,proto3" json:"imageMedium,omitempty"`
	ImageLarge          *wrappers.StringValue `protobuf:"bytes,7,opt,name=imageLarge,json=image_large,proto3" json:"imageLarge,omitempty"`
	FavoriteArtistsType *wrappers.StringValue `protobuf:"bytes,8,opt,name=favoriteArtistsType,json=favorite_artists_type,proto3" json:"favoriteArtistsType,omitempty"`
}

func (x *FavoriteArtistItem) Reset() {
	*x = FavoriteArtistItem{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_user_user_proto_msgTypes[18]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *FavoriteArtistItem) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FavoriteArtistItem) ProtoMessage() {}

func (x *FavoriteArtistItem) ProtoReflect() protoreflect.Message {
	mi := &file_proto_user_user_proto_msgTypes[18]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FavoriteArtistItem.ProtoReflect.Descriptor instead.
func (*FavoriteArtistItem) Descriptor() ([]byte, []int) {
	return file_proto_user_user_proto_rawDescGZIP(), []int{18}
}

func (x *FavoriteArtistItem) GetDaraID() *wrappers.Int32Value {
	if x != nil {
		return x.DaraID
	}
	return nil
}

func (x *FavoriteArtistItem) GetFullName() *wrappers.StringValue {
	if x != nil {
		return x.FullName
	}
	return nil
}

func (x *FavoriteArtistItem) GetNickName() *wrappers.StringValue {
	if x != nil {
		return x.NickName
	}
	return nil
}

func (x *FavoriteArtistItem) GetGender() *wrappers.StringValue {
	if x != nil {
		return x.Gender
	}
	return nil
}

func (x *FavoriteArtistItem) GetImageSmall() *wrappers.StringValue {
	if x != nil {
		return x.ImageSmall
	}
	return nil
}

func (x *FavoriteArtistItem) GetImageMedium() *wrappers.StringValue {
	if x != nil {
		return x.ImageMedium
	}
	return nil
}

func (x *FavoriteArtistItem) GetImageLarge() *wrappers.StringValue {
	if x != nil {
		return x.ImageLarge
	}
	return nil
}

func (x *FavoriteArtistItem) GetFavoriteArtistsType() *wrappers.StringValue {
	if x != nil {
		return x.FavoriteArtistsType
	}
	return nil
}

type UserAddressDetail struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	AddressNumber   *wrappers.StringValue `protobuf:"bytes,1,opt,name=addressNumber,json=address_number,proto3" json:"addressNumber,omitempty"`
	VillageName     *wrappers.StringValue `protobuf:"bytes,2,opt,name=villageName,json=village_name,proto3" json:"villageName,omitempty"`
	VillageNumber   *wrappers.StringValue `protobuf:"bytes,3,opt,name=villageNumber,json=village_number,proto3" json:"villageNumber,omitempty"`
	Lane            *wrappers.StringValue `protobuf:"bytes,4,opt,name=lane,proto3" json:"lane,omitempty"`
	Road            *wrappers.StringValue `protobuf:"bytes,5,opt,name=road,proto3" json:"road,omitempty"`
	SubDistrict     *wrappers.Int32Value  `protobuf:"bytes,6,opt,name=subDistrict,json=sub_district,proto3" json:"subDistrict,omitempty"`
	District        *wrappers.Int32Value  `protobuf:"bytes,7,opt,name=district,proto3" json:"district,omitempty"`
	Province        *wrappers.Int32Value  `protobuf:"bytes,8,opt,name=province,proto3" json:"province,omitempty"`
	PostalCode      *wrappers.StringValue `protobuf:"bytes,9,opt,name=postalCode,json=postal_code,proto3" json:"postalCode,omitempty"`
	Occupation      *wrappers.StringValue `protobuf:"bytes,10,opt,name=occupation,proto3" json:"occupation,omitempty"`
	Salary          *wrappers.Int32Value  `protobuf:"bytes,11,opt,name=salary,proto3" json:"salary,omitempty"`
	SubDistrictName *wrappers.StringValue `protobuf:"bytes,12,opt,name=subDistrictName,json=sub_district_name,proto3" json:"subDistrictName,omitempty"`
	DistrictName    *wrappers.StringValue `protobuf:"bytes,13,opt,name=districtName,json=district_name,proto3" json:"districtName,omitempty"`
	ProvinceName    *wrappers.StringValue `protobuf:"bytes,14,opt,name=provinceName,json=province_name,proto3" json:"provinceName,omitempty"`
}

func (x *UserAddressDetail) Reset() {
	*x = UserAddressDetail{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_user_user_proto_msgTypes[19]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UserAddressDetail) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UserAddressDetail) ProtoMessage() {}

func (x *UserAddressDetail) ProtoReflect() protoreflect.Message {
	mi := &file_proto_user_user_proto_msgTypes[19]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UserAddressDetail.ProtoReflect.Descriptor instead.
func (*UserAddressDetail) Descriptor() ([]byte, []int) {
	return file_proto_user_user_proto_rawDescGZIP(), []int{19}
}

func (x *UserAddressDetail) GetAddressNumber() *wrappers.StringValue {
	if x != nil {
		return x.AddressNumber
	}
	return nil
}

func (x *UserAddressDetail) GetVillageName() *wrappers.StringValue {
	if x != nil {
		return x.VillageName
	}
	return nil
}

func (x *UserAddressDetail) GetVillageNumber() *wrappers.StringValue {
	if x != nil {
		return x.VillageNumber
	}
	return nil
}

func (x *UserAddressDetail) GetLane() *wrappers.StringValue {
	if x != nil {
		return x.Lane
	}
	return nil
}

func (x *UserAddressDetail) GetRoad() *wrappers.StringValue {
	if x != nil {
		return x.Road
	}
	return nil
}

func (x *UserAddressDetail) GetSubDistrict() *wrappers.Int32Value {
	if x != nil {
		return x.SubDistrict
	}
	return nil
}

func (x *UserAddressDetail) GetDistrict() *wrappers.Int32Value {
	if x != nil {
		return x.District
	}
	return nil
}

func (x *UserAddressDetail) GetProvince() *wrappers.Int32Value {
	if x != nil {
		return x.Province
	}
	return nil
}

func (x *UserAddressDetail) GetPostalCode() *wrappers.StringValue {
	if x != nil {
		return x.PostalCode
	}
	return nil
}

func (x *UserAddressDetail) GetOccupation() *wrappers.StringValue {
	if x != nil {
		return x.Occupation
	}
	return nil
}

func (x *UserAddressDetail) GetSalary() *wrappers.Int32Value {
	if x != nil {
		return x.Salary
	}
	return nil
}

func (x *UserAddressDetail) GetSubDistrictName() *wrappers.StringValue {
	if x != nil {
		return x.SubDistrictName
	}
	return nil
}

func (x *UserAddressDetail) GetDistrictName() *wrappers.StringValue {
	if x != nil {
		return x.DistrictName
	}
	return nil
}

func (x *UserAddressDetail) GetProvinceName() *wrappers.StringValue {
	if x != nil {
		return x.ProvinceName
	}
	return nil
}

type SocialRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	FacebookID       string `protobuf:"bytes,1,opt,name=facebookID,json=facebook_id,proto3" json:"facebookID,omitempty"`
	GoogleID         string `protobuf:"bytes,2,opt,name=googleID,json=google_id,proto3" json:"googleID,omitempty"`
	LineID           string `protobuf:"bytes,3,opt,name=lineID,json=line_id,proto3" json:"lineID,omitempty"`
	AppleID          string `protobuf:"bytes,4,opt,name=appleID,json=apple_id,proto3" json:"appleID,omitempty"`
	Email            string `protobuf:"bytes,5,opt,name=email,proto3" json:"email,omitempty"`
	Name             string `protobuf:"bytes,6,opt,name=name,proto3" json:"name,omitempty"`
	Lastname         string `protobuf:"bytes,7,opt,name=lastname,proto3" json:"lastname,omitempty"`
	ClientID         string `protobuf:"bytes,8,opt,name=clientID,json=client_id,proto3" json:"clientID,omitempty"`
	ImageURL         string `protobuf:"bytes,9,opt,name=imageURL,json=image_url,proto3" json:"imageURL,omitempty"`
	Source           string `protobuf:"bytes,10,opt,name=source,proto3" json:"source,omitempty"`
	Sex              string `protobuf:"bytes,11,opt,name=sex,proto3" json:"sex,omitempty"`
	Tel              string `protobuf:"bytes,12,opt,name=tel,proto3" json:"tel,omitempty"`
	Birthdate        string `protobuf:"bytes,13,opt,name=birthdate,proto3" json:"birthdate,omitempty"`
	WithTermsConsent string `protobuf:"bytes,14,opt,name=withTermsConsent,json=with_terms_consent,proto3" json:"withTermsConsent,omitempty"`
	WithPPConsent    string `protobuf:"bytes,15,opt,name=withPPConsent,json=with_pp_consent,proto3" json:"withPPConsent,omitempty"`
}

func (x *SocialRequest) Reset() {
	*x = SocialRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_user_user_proto_msgTypes[20]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SocialRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SocialRequest) ProtoMessage() {}

func (x *SocialRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_user_user_proto_msgTypes[20]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SocialRequest.ProtoReflect.Descriptor instead.
func (*SocialRequest) Descriptor() ([]byte, []int) {
	return file_proto_user_user_proto_rawDescGZIP(), []int{20}
}

func (x *SocialRequest) GetFacebookID() string {
	if x != nil {
		return x.FacebookID
	}
	return ""
}

func (x *SocialRequest) GetGoogleID() string {
	if x != nil {
		return x.GoogleID
	}
	return ""
}

func (x *SocialRequest) GetLineID() string {
	if x != nil {
		return x.LineID
	}
	return ""
}

func (x *SocialRequest) GetAppleID() string {
	if x != nil {
		return x.AppleID
	}
	return ""
}

func (x *SocialRequest) GetEmail() string {
	if x != nil {
		return x.Email
	}
	return ""
}

func (x *SocialRequest) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *SocialRequest) GetLastname() string {
	if x != nil {
		return x.Lastname
	}
	return ""
}

func (x *SocialRequest) GetClientID() string {
	if x != nil {
		return x.ClientID
	}
	return ""
}

func (x *SocialRequest) GetImageURL() string {
	if x != nil {
		return x.ImageURL
	}
	return ""
}

func (x *SocialRequest) GetSource() string {
	if x != nil {
		return x.Source
	}
	return ""
}

func (x *SocialRequest) GetSex() string {
	if x != nil {
		return x.Sex
	}
	return ""
}

func (x *SocialRequest) GetTel() string {
	if x != nil {
		return x.Tel
	}
	return ""
}

func (x *SocialRequest) GetBirthdate() string {
	if x != nil {
		return x.Birthdate
	}
	return ""
}

func (x *SocialRequest) GetWithTermsConsent() string {
	if x != nil {
		return x.WithTermsConsent
	}
	return ""
}

func (x *SocialRequest) GetWithPPConsent() string {
	if x != nil {
		return x.WithPPConsent
	}
	return ""
}

type SocialResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Message    string               `protobuf:"bytes,1,opt,name=message,proto3" json:"message,omitempty"`
	Id         string               `protobuf:"bytes,2,opt,name=id,proto3" json:"id,omitempty"`
	FacebookID string               `protobuf:"bytes,3,opt,name=facebookID,json=facebook_id,proto3" json:"facebookID,omitempty"`
	GoogleID   string               `protobuf:"bytes,4,opt,name=googleID,json=google_id,proto3" json:"googleID,omitempty"`
	LineID     string               `protobuf:"bytes,5,opt,name=lineID,json=line_id,proto3" json:"lineID,omitempty"`
	AppleID    string               `protobuf:"bytes,6,opt,name=appleID,json=apple_id,proto3" json:"appleID,omitempty"`
	Email      string               `protobuf:"bytes,7,opt,name=email,proto3" json:"email,omitempty"`
	Name       string               `protobuf:"bytes,8,opt,name=name,proto3" json:"name,omitempty"`
	Lastname   string               `protobuf:"bytes,9,opt,name=lastname,proto3" json:"lastname,omitempty"`
	ClientID   string               `protobuf:"bytes,10,opt,name=clientID,json=client_id,proto3" json:"clientID,omitempty"`
	ImageURL   string               `protobuf:"bytes,11,opt,name=imageURL,json=image_url,proto3" json:"imageURL,omitempty"`
	Source     string               `protobuf:"bytes,12,opt,name=source,proto3" json:"source,omitempty"`
	UserStatus string               `protobuf:"bytes,13,opt,name=userStatus,json=user_status,proto3" json:"userStatus,omitempty"`
	CreatedAt  *timestamp.Timestamp `protobuf:"bytes,14,opt,name=created_at,proto3" json:"created_at,omitempty"`
	UpdatedAt  *timestamp.Timestamp `protobuf:"bytes,15,opt,name=updated_at,proto3" json:"updated_at,omitempty"`
}

func (x *SocialResponse) Reset() {
	*x = SocialResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_user_user_proto_msgTypes[21]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SocialResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SocialResponse) ProtoMessage() {}

func (x *SocialResponse) ProtoReflect() protoreflect.Message {
	mi := &file_proto_user_user_proto_msgTypes[21]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SocialResponse.ProtoReflect.Descriptor instead.
func (*SocialResponse) Descriptor() ([]byte, []int) {
	return file_proto_user_user_proto_rawDescGZIP(), []int{21}
}

func (x *SocialResponse) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

func (x *SocialResponse) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *SocialResponse) GetFacebookID() string {
	if x != nil {
		return x.FacebookID
	}
	return ""
}

func (x *SocialResponse) GetGoogleID() string {
	if x != nil {
		return x.GoogleID
	}
	return ""
}

func (x *SocialResponse) GetLineID() string {
	if x != nil {
		return x.LineID
	}
	return ""
}

func (x *SocialResponse) GetAppleID() string {
	if x != nil {
		return x.AppleID
	}
	return ""
}

func (x *SocialResponse) GetEmail() string {
	if x != nil {
		return x.Email
	}
	return ""
}

func (x *SocialResponse) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *SocialResponse) GetLastname() string {
	if x != nil {
		return x.Lastname
	}
	return ""
}

func (x *SocialResponse) GetClientID() string {
	if x != nil {
		return x.ClientID
	}
	return ""
}

func (x *SocialResponse) GetImageURL() string {
	if x != nil {
		return x.ImageURL
	}
	return ""
}

func (x *SocialResponse) GetSource() string {
	if x != nil {
		return x.Source
	}
	return ""
}

func (x *SocialResponse) GetUserStatus() string {
	if x != nil {
		return x.UserStatus
	}
	return ""
}

func (x *SocialResponse) GetCreatedAt() *timestamp.Timestamp {
	if x != nil {
		return x.CreatedAt
	}
	return nil
}

func (x *SocialResponse) GetUpdatedAt() *timestamp.Timestamp {
	if x != nil {
		return x.UpdatedAt
	}
	return nil
}

type UpdateSocialIDRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UserID     string `protobuf:"bytes,1,opt,name=userID,json=user_id,proto3" json:"userID,omitempty"`
	FacebookID string `protobuf:"bytes,2,opt,name=facebookID,json=facebook_id,proto3" json:"facebookID,omitempty"`
	GoogleID   string `protobuf:"bytes,3,opt,name=googleID,json=google_id,proto3" json:"googleID,omitempty"`
	LineID     string `protobuf:"bytes,4,opt,name=lineID,json=line_id,proto3" json:"lineID,omitempty"`
	AppleID    string `protobuf:"bytes,5,opt,name=appleID,json=apple_id,proto3" json:"appleID,omitempty"`
}

func (x *UpdateSocialIDRequest) Reset() {
	*x = UpdateSocialIDRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_user_user_proto_msgTypes[22]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateSocialIDRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateSocialIDRequest) ProtoMessage() {}

func (x *UpdateSocialIDRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_user_user_proto_msgTypes[22]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateSocialIDRequest.ProtoReflect.Descriptor instead.
func (*UpdateSocialIDRequest) Descriptor() ([]byte, []int) {
	return file_proto_user_user_proto_rawDescGZIP(), []int{22}
}

func (x *UpdateSocialIDRequest) GetUserID() string {
	if x != nil {
		return x.UserID
	}
	return ""
}

func (x *UpdateSocialIDRequest) GetFacebookID() string {
	if x != nil {
		return x.FacebookID
	}
	return ""
}

func (x *UpdateSocialIDRequest) GetGoogleID() string {
	if x != nil {
		return x.GoogleID
	}
	return ""
}

func (x *UpdateSocialIDRequest) GetLineID() string {
	if x != nil {
		return x.LineID
	}
	return ""
}

func (x *UpdateSocialIDRequest) GetAppleID() string {
	if x != nil {
		return x.AppleID
	}
	return ""
}

type UpdateSocialIDRespose struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Message string `protobuf:"bytes,1,opt,name=message,proto3" json:"message,omitempty"`
}

func (x *UpdateSocialIDRespose) Reset() {
	*x = UpdateSocialIDRespose{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_user_user_proto_msgTypes[23]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateSocialIDRespose) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateSocialIDRespose) ProtoMessage() {}

func (x *UpdateSocialIDRespose) ProtoReflect() protoreflect.Message {
	mi := &file_proto_user_user_proto_msgTypes[23]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateSocialIDRespose.ProtoReflect.Descriptor instead.
func (*UpdateSocialIDRespose) Descriptor() ([]byte, []int) {
	return file_proto_user_user_proto_rawDescGZIP(), []int{23}
}

func (x *UpdateSocialIDRespose) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

type UploadProfilePictureRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ImageData string `protobuf:"bytes,1,opt,name=imageData,json=image_data,proto3" json:"imageData,omitempty"`
}

func (x *UploadProfilePictureRequest) Reset() {
	*x = UploadProfilePictureRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_user_user_proto_msgTypes[24]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UploadProfilePictureRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UploadProfilePictureRequest) ProtoMessage() {}

func (x *UploadProfilePictureRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_user_user_proto_msgTypes[24]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UploadProfilePictureRequest.ProtoReflect.Descriptor instead.
func (*UploadProfilePictureRequest) Descriptor() ([]byte, []int) {
	return file_proto_user_user_proto_rawDescGZIP(), []int{24}
}

func (x *UploadProfilePictureRequest) GetImageData() string {
	if x != nil {
		return x.ImageData
	}
	return ""
}

type AcceptTermRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UserID string `protobuf:"bytes,1,opt,name=userID,json=user_id,proto3" json:"userID,omitempty"`
}

func (x *AcceptTermRequest) Reset() {
	*x = AcceptTermRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_user_user_proto_msgTypes[25]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AcceptTermRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AcceptTermRequest) ProtoMessage() {}

func (x *AcceptTermRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_user_user_proto_msgTypes[25]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AcceptTermRequest.ProtoReflect.Descriptor instead.
func (*AcceptTermRequest) Descriptor() ([]byte, []int) {
	return file_proto_user_user_proto_rawDescGZIP(), []int{25}
}

func (x *AcceptTermRequest) GetUserID() string {
	if x != nil {
		return x.UserID
	}
	return ""
}

type CheckTermResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	IsLatest *wrappers.BoolValue `protobuf:"bytes,1,opt,name=isLatest,json=is_latest,proto3" json:"isLatest,omitempty"`
}

func (x *CheckTermResponse) Reset() {
	*x = CheckTermResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_user_user_proto_msgTypes[26]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CheckTermResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CheckTermResponse) ProtoMessage() {}

func (x *CheckTermResponse) ProtoReflect() protoreflect.Message {
	mi := &file_proto_user_user_proto_msgTypes[26]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CheckTermResponse.ProtoReflect.Descriptor instead.
func (*CheckTermResponse) Descriptor() ([]byte, []int) {
	return file_proto_user_user_proto_rawDescGZIP(), []int{26}
}

func (x *CheckTermResponse) GetIsLatest() *wrappers.BoolValue {
	if x != nil {
		return x.IsLatest
	}
	return nil
}

type PDPAResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	TermLatestVersion              *wrappers.StringValue `protobuf:"bytes,1,opt,name=term_latest_version,proto3" json:"term_latest_version,omitempty"`
	PrivacyPolicyLatestVersion     *wrappers.StringValue `protobuf:"bytes,2,opt,name=privacy_policy_latest_version,proto3" json:"privacy_policy_latest_version,omitempty"`
	UserTermVersion                *wrappers.StringValue `protobuf:"bytes,3,opt,name=user_term_version,proto3" json:"user_term_version,omitempty"`
	UserTermAcceptDate             *timestamp.Timestamp  `protobuf:"bytes,4,opt,name=user_term_accept_date,proto3" json:"user_term_accept_date,omitempty"`
	UserPrivacyPolicyVersion       *wrappers.StringValue `protobuf:"bytes,5,opt,name=user_privacy_policy_version,proto3" json:"user_privacy_policy_version,omitempty"`
	UserPrivacyPolicyAccept        *wrappers.BoolValue   `protobuf:"bytes,6,opt,name=user_privacy_policy_accept,proto3" json:"user_privacy_policy_accept,omitempty"`
	UserPrivacyPolicyDate          *timestamp.Timestamp  `protobuf:"bytes,7,opt,name=user_privacy_policy_date,proto3" json:"user_privacy_policy_date,omitempty"`
	TermDetails                    *wrappers.StringValue `protobuf:"bytes,8,opt,name=term_details,proto3" json:"term_details,omitempty"`
	PrivacyPolicyDetails           *wrappers.StringValue `protobuf:"bytes,9,opt,name=privacy_policy_details,proto3" json:"privacy_policy_details,omitempty"`
	TermLatestUpdateDate           *timestamp.Timestamp  `protobuf:"bytes,10,opt,name=term_latest_update_date,proto3" json:"term_latest_update_date,omitempty"`
	PrivacyPolicyLastestUpdateDate *timestamp.Timestamp  `protobuf:"bytes,11,opt,name=privacy_policy_lastest_update_date,proto3" json:"privacy_policy_lastest_update_date,omitempty"`
}

func (x *PDPAResponse) Reset() {
	*x = PDPAResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_user_user_proto_msgTypes[27]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PDPAResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PDPAResponse) ProtoMessage() {}

func (x *PDPAResponse) ProtoReflect() protoreflect.Message {
	mi := &file_proto_user_user_proto_msgTypes[27]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PDPAResponse.ProtoReflect.Descriptor instead.
func (*PDPAResponse) Descriptor() ([]byte, []int) {
	return file_proto_user_user_proto_rawDescGZIP(), []int{27}
}

func (x *PDPAResponse) GetTermLatestVersion() *wrappers.StringValue {
	if x != nil {
		return x.TermLatestVersion
	}
	return nil
}

func (x *PDPAResponse) GetPrivacyPolicyLatestVersion() *wrappers.StringValue {
	if x != nil {
		return x.PrivacyPolicyLatestVersion
	}
	return nil
}

func (x *PDPAResponse) GetUserTermVersion() *wrappers.StringValue {
	if x != nil {
		return x.UserTermVersion
	}
	return nil
}

func (x *PDPAResponse) GetUserTermAcceptDate() *timestamp.Timestamp {
	if x != nil {
		return x.UserTermAcceptDate
	}
	return nil
}

func (x *PDPAResponse) GetUserPrivacyPolicyVersion() *wrappers.StringValue {
	if x != nil {
		return x.UserPrivacyPolicyVersion
	}
	return nil
}

func (x *PDPAResponse) GetUserPrivacyPolicyAccept() *wrappers.BoolValue {
	if x != nil {
		return x.UserPrivacyPolicyAccept
	}
	return nil
}

func (x *PDPAResponse) GetUserPrivacyPolicyDate() *timestamp.Timestamp {
	if x != nil {
		return x.UserPrivacyPolicyDate
	}
	return nil
}

func (x *PDPAResponse) GetTermDetails() *wrappers.StringValue {
	if x != nil {
		return x.TermDetails
	}
	return nil
}

func (x *PDPAResponse) GetPrivacyPolicyDetails() *wrappers.StringValue {
	if x != nil {
		return x.PrivacyPolicyDetails
	}
	return nil
}

func (x *PDPAResponse) GetTermLatestUpdateDate() *timestamp.Timestamp {
	if x != nil {
		return x.TermLatestUpdateDate
	}
	return nil
}

func (x *PDPAResponse) GetPrivacyPolicyLastestUpdateDate() *timestamp.Timestamp {
	if x != nil {
		return x.PrivacyPolicyLastestUpdateDate
	}
	return nil
}

type PrivacyPolicyRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Accept *wrappers.BoolValue `protobuf:"bytes,1,opt,name=accept,proto3" json:"accept,omitempty"`
	UserID string              `protobuf:"bytes,2,opt,name=userID,json=user_id,proto3" json:"userID,omitempty"`
}

func (x *PrivacyPolicyRequest) Reset() {
	*x = PrivacyPolicyRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_user_user_proto_msgTypes[28]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PrivacyPolicyRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PrivacyPolicyRequest) ProtoMessage() {}

func (x *PrivacyPolicyRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_user_user_proto_msgTypes[28]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PrivacyPolicyRequest.ProtoReflect.Descriptor instead.
func (*PrivacyPolicyRequest) Descriptor() ([]byte, []int) {
	return file_proto_user_user_proto_rawDescGZIP(), []int{28}
}

func (x *PrivacyPolicyRequest) GetAccept() *wrappers.BoolValue {
	if x != nil {
		return x.Accept
	}
	return nil
}

func (x *PrivacyPolicyRequest) GetUserID() string {
	if x != nil {
		return x.UserID
	}
	return ""
}

type CheckEmailHasAddressResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Message *wrappers.StringValue `protobuf:"bytes,1,opt,name=message,proto3" json:"message,omitempty"`
	Result  *wrappers.BoolValue   `protobuf:"bytes,2,opt,name=result,proto3" json:"result,omitempty"`
}

func (x *CheckEmailHasAddressResponse) Reset() {
	*x = CheckEmailHasAddressResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_user_user_proto_msgTypes[29]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CheckEmailHasAddressResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CheckEmailHasAddressResponse) ProtoMessage() {}

func (x *CheckEmailHasAddressResponse) ProtoReflect() protoreflect.Message {
	mi := &file_proto_user_user_proto_msgTypes[29]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CheckEmailHasAddressResponse.ProtoReflect.Descriptor instead.
func (*CheckEmailHasAddressResponse) Descriptor() ([]byte, []int) {
	return file_proto_user_user_proto_rawDescGZIP(), []int{29}
}

func (x *CheckEmailHasAddressResponse) GetMessage() *wrappers.StringValue {
	if x != nil {
		return x.Message
	}
	return nil
}

func (x *CheckEmailHasAddressResponse) GetResult() *wrappers.BoolValue {
	if x != nil {
		return x.Result
	}
	return nil
}

type EventCalendarLimitExceedResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Message *wrappers.StringValue                 `protobuf:"bytes,1,opt,name=message,proto3" json:"message,omitempty"`
	Result  *EventCalendarLimitExceedResponseBody `protobuf:"bytes,2,opt,name=result,proto3" json:"result,omitempty"`
}

func (x *EventCalendarLimitExceedResponse) Reset() {
	*x = EventCalendarLimitExceedResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_user_user_proto_msgTypes[30]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *EventCalendarLimitExceedResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*EventCalendarLimitExceedResponse) ProtoMessage() {}

func (x *EventCalendarLimitExceedResponse) ProtoReflect() protoreflect.Message {
	mi := &file_proto_user_user_proto_msgTypes[30]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use EventCalendarLimitExceedResponse.ProtoReflect.Descriptor instead.
func (*EventCalendarLimitExceedResponse) Descriptor() ([]byte, []int) {
	return file_proto_user_user_proto_rawDescGZIP(), []int{30}
}

func (x *EventCalendarLimitExceedResponse) GetMessage() *wrappers.StringValue {
	if x != nil {
		return x.Message
	}
	return nil
}

func (x *EventCalendarLimitExceedResponse) GetResult() *EventCalendarLimitExceedResponseBody {
	if x != nil {
		return x.Result
	}
	return nil
}

type EventCalendarLimitExceedResponseBody struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Exceed *wrappers.BoolValue  `protobuf:"bytes,1,opt,name=exceed,proto3" json:"exceed,omitempty"`
	Amount *wrappers.Int32Value `protobuf:"bytes,2,opt,name=amount,proto3" json:"amount,omitempty"`
}

func (x *EventCalendarLimitExceedResponseBody) Reset() {
	*x = EventCalendarLimitExceedResponseBody{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_user_user_proto_msgTypes[31]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *EventCalendarLimitExceedResponseBody) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*EventCalendarLimitExceedResponseBody) ProtoMessage() {}

func (x *EventCalendarLimitExceedResponseBody) ProtoReflect() protoreflect.Message {
	mi := &file_proto_user_user_proto_msgTypes[31]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use EventCalendarLimitExceedResponseBody.ProtoReflect.Descriptor instead.
func (*EventCalendarLimitExceedResponseBody) Descriptor() ([]byte, []int) {
	return file_proto_user_user_proto_rawDescGZIP(), []int{31}
}

func (x *EventCalendarLimitExceedResponseBody) GetExceed() *wrappers.BoolValue {
	if x != nil {
		return x.Exceed
	}
	return nil
}

func (x *EventCalendarLimitExceedResponseBody) GetAmount() *wrappers.Int32Value {
	if x != nil {
		return x.Amount
	}
	return nil
}

type RequestOtpRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Tel  string `protobuf:"bytes,1,opt,name=tel,proto3" json:"tel,omitempty"`
	Type string `protobuf:"bytes,2,opt,name=type,proto3" json:"type,omitempty"`
}

func (x *RequestOtpRequest) Reset() {
	*x = RequestOtpRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_user_user_proto_msgTypes[32]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RequestOtpRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RequestOtpRequest) ProtoMessage() {}

func (x *RequestOtpRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_user_user_proto_msgTypes[32]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RequestOtpRequest.ProtoReflect.Descriptor instead.
func (*RequestOtpRequest) Descriptor() ([]byte, []int) {
	return file_proto_user_user_proto_rawDescGZIP(), []int{32}
}

func (x *RequestOtpRequest) GetTel() string {
	if x != nil {
		return x.Tel
	}
	return ""
}

func (x *RequestOtpRequest) GetType() string {
	if x != nil {
		return x.Type
	}
	return ""
}

type RequestOtpData struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Reference      *wrappers.StringValue `protobuf:"bytes,1,opt,name=reference,proto3" json:"reference,omitempty"`
	RequestedTimes *wrappers.Int32Value  `protobuf:"bytes,2,opt,name=requestedTimes,json=requested_times,proto3" json:"requestedTimes,omitempty"`
	CreatedAt      *wrappers.StringValue `protobuf:"bytes,3,opt,name=createdAt,json=created_at,proto3" json:"createdAt,omitempty"`
}

func (x *RequestOtpData) Reset() {
	*x = RequestOtpData{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_user_user_proto_msgTypes[33]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RequestOtpData) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RequestOtpData) ProtoMessage() {}

func (x *RequestOtpData) ProtoReflect() protoreflect.Message {
	mi := &file_proto_user_user_proto_msgTypes[33]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RequestOtpData.ProtoReflect.Descriptor instead.
func (*RequestOtpData) Descriptor() ([]byte, []int) {
	return file_proto_user_user_proto_rawDescGZIP(), []int{33}
}

func (x *RequestOtpData) GetReference() *wrappers.StringValue {
	if x != nil {
		return x.Reference
	}
	return nil
}

func (x *RequestOtpData) GetRequestedTimes() *wrappers.Int32Value {
	if x != nil {
		return x.RequestedTimes
	}
	return nil
}

func (x *RequestOtpData) GetCreatedAt() *wrappers.StringValue {
	if x != nil {
		return x.CreatedAt
	}
	return nil
}

type VerifyOtpData struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	IsValid *wrappers.BoolValue `protobuf:"bytes,1,opt,name=isValid,json=is_valid,proto3" json:"isValid,omitempty"`
}

func (x *VerifyOtpData) Reset() {
	*x = VerifyOtpData{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_user_user_proto_msgTypes[34]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *VerifyOtpData) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*VerifyOtpData) ProtoMessage() {}

func (x *VerifyOtpData) ProtoReflect() protoreflect.Message {
	mi := &file_proto_user_user_proto_msgTypes[34]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use VerifyOtpData.ProtoReflect.Descriptor instead.
func (*VerifyOtpData) Descriptor() ([]byte, []int) {
	return file_proto_user_user_proto_rawDescGZIP(), []int{34}
}

func (x *VerifyOtpData) GetIsValid() *wrappers.BoolValue {
	if x != nil {
		return x.IsValid
	}
	return nil
}

type RequestOtpResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Message string          `protobuf:"bytes,1,opt,name=message,proto3" json:"message,omitempty"`
	Data    *RequestOtpData `protobuf:"bytes,2,opt,name=data,proto3" json:"data,omitempty"`
}

func (x *RequestOtpResponse) Reset() {
	*x = RequestOtpResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_user_user_proto_msgTypes[35]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RequestOtpResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RequestOtpResponse) ProtoMessage() {}

func (x *RequestOtpResponse) ProtoReflect() protoreflect.Message {
	mi := &file_proto_user_user_proto_msgTypes[35]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RequestOtpResponse.ProtoReflect.Descriptor instead.
func (*RequestOtpResponse) Descriptor() ([]byte, []int) {
	return file_proto_user_user_proto_rawDescGZIP(), []int{35}
}

func (x *RequestOtpResponse) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

func (x *RequestOtpResponse) GetData() *RequestOtpData {
	if x != nil {
		return x.Data
	}
	return nil
}

type VerifyOtpRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Tel       string `protobuf:"bytes,1,opt,name=tel,proto3" json:"tel,omitempty"`
	Type      string `protobuf:"bytes,2,opt,name=type,proto3" json:"type,omitempty"`
	Reference string `protobuf:"bytes,3,opt,name=reference,proto3" json:"reference,omitempty"`
	Otp       string `protobuf:"bytes,4,opt,name=otp,proto3" json:"otp,omitempty"`
}

func (x *VerifyOtpRequest) Reset() {
	*x = VerifyOtpRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_user_user_proto_msgTypes[36]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *VerifyOtpRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*VerifyOtpRequest) ProtoMessage() {}

func (x *VerifyOtpRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_user_user_proto_msgTypes[36]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use VerifyOtpRequest.ProtoReflect.Descriptor instead.
func (*VerifyOtpRequest) Descriptor() ([]byte, []int) {
	return file_proto_user_user_proto_rawDescGZIP(), []int{36}
}

func (x *VerifyOtpRequest) GetTel() string {
	if x != nil {
		return x.Tel
	}
	return ""
}

func (x *VerifyOtpRequest) GetType() string {
	if x != nil {
		return x.Type
	}
	return ""
}

func (x *VerifyOtpRequest) GetReference() string {
	if x != nil {
		return x.Reference
	}
	return ""
}

func (x *VerifyOtpRequest) GetOtp() string {
	if x != nil {
		return x.Otp
	}
	return ""
}

type VerifyOtpResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Message string         `protobuf:"bytes,1,opt,name=message,proto3" json:"message,omitempty"`
	Result  *VerifyOtpData `protobuf:"bytes,2,opt,name=result,proto3" json:"result,omitempty"`
}

func (x *VerifyOtpResponse) Reset() {
	*x = VerifyOtpResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_user_user_proto_msgTypes[37]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *VerifyOtpResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*VerifyOtpResponse) ProtoMessage() {}

func (x *VerifyOtpResponse) ProtoReflect() protoreflect.Message {
	mi := &file_proto_user_user_proto_msgTypes[37]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use VerifyOtpResponse.ProtoReflect.Descriptor instead.
func (*VerifyOtpResponse) Descriptor() ([]byte, []int) {
	return file_proto_user_user_proto_rawDescGZIP(), []int{37}
}

func (x *VerifyOtpResponse) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

func (x *VerifyOtpResponse) GetResult() *VerifyOtpData {
	if x != nil {
		return x.Result
	}
	return nil
}

type RequestOtpOperationToolResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Message string                       `protobuf:"bytes,1,opt,name=message,proto3" json:"message,omitempty"`
	Data    *RequestOtpDataOperationTool `protobuf:"bytes,2,opt,name=data,proto3" json:"data,omitempty"`
}

func (x *RequestOtpOperationToolResponse) Reset() {
	*x = RequestOtpOperationToolResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_user_user_proto_msgTypes[38]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RequestOtpOperationToolResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RequestOtpOperationToolResponse) ProtoMessage() {}

func (x *RequestOtpOperationToolResponse) ProtoReflect() protoreflect.Message {
	mi := &file_proto_user_user_proto_msgTypes[38]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RequestOtpOperationToolResponse.ProtoReflect.Descriptor instead.
func (*RequestOtpOperationToolResponse) Descriptor() ([]byte, []int) {
	return file_proto_user_user_proto_rawDescGZIP(), []int{38}
}

func (x *RequestOtpOperationToolResponse) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

func (x *RequestOtpOperationToolResponse) GetData() *RequestOtpDataOperationTool {
	if x != nil {
		return x.Data
	}
	return nil
}

type RequestOtpDataOperationTool struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Reference *wrappers.StringValue `protobuf:"bytes,1,opt,name=reference,proto3" json:"reference,omitempty"`
	Otp       *wrappers.StringValue `protobuf:"bytes,2,opt,name=otp,proto3" json:"otp,omitempty"`
	CreatedAt *wrappers.StringValue `protobuf:"bytes,3,opt,name=createdAt,json=created_at,proto3" json:"createdAt,omitempty"`
}

func (x *RequestOtpDataOperationTool) Reset() {
	*x = RequestOtpDataOperationTool{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_user_user_proto_msgTypes[39]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RequestOtpDataOperationTool) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RequestOtpDataOperationTool) ProtoMessage() {}

func (x *RequestOtpDataOperationTool) ProtoReflect() protoreflect.Message {
	mi := &file_proto_user_user_proto_msgTypes[39]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RequestOtpDataOperationTool.ProtoReflect.Descriptor instead.
func (*RequestOtpDataOperationTool) Descriptor() ([]byte, []int) {
	return file_proto_user_user_proto_rawDescGZIP(), []int{39}
}

func (x *RequestOtpDataOperationTool) GetReference() *wrappers.StringValue {
	if x != nil {
		return x.Reference
	}
	return nil
}

func (x *RequestOtpDataOperationTool) GetOtp() *wrappers.StringValue {
	if x != nil {
		return x.Otp
	}
	return nil
}

func (x *RequestOtpDataOperationTool) GetCreatedAt() *wrappers.StringValue {
	if x != nil {
		return x.CreatedAt
	}
	return nil
}

type DeleteUserTempRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *DeleteUserTempRequest) Reset() {
	*x = DeleteUserTempRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_user_user_proto_msgTypes[40]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeleteUserTempRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteUserTempRequest) ProtoMessage() {}

func (x *DeleteUserTempRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_user_user_proto_msgTypes[40]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteUserTempRequest.ProtoReflect.Descriptor instead.
func (*DeleteUserTempRequest) Descriptor() ([]byte, []int) {
	return file_proto_user_user_proto_rawDescGZIP(), []int{40}
}

type DeleteUserTempResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Message string `protobuf:"bytes,1,opt,name=message,proto3" json:"message,omitempty"`
}

func (x *DeleteUserTempResponse) Reset() {
	*x = DeleteUserTempResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_user_user_proto_msgTypes[41]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeleteUserTempResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteUserTempResponse) ProtoMessage() {}

func (x *DeleteUserTempResponse) ProtoReflect() protoreflect.Message {
	mi := &file_proto_user_user_proto_msgTypes[41]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteUserTempResponse.ProtoReflect.Descriptor instead.
func (*DeleteUserTempResponse) Descriptor() ([]byte, []int) {
	return file_proto_user_user_proto_rawDescGZIP(), []int{41}
}

func (x *DeleteUserTempResponse) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

type VerifyPartnerIDRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id    string `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	Token string `protobuf:"bytes,2,opt,name=token,proto3" json:"token,omitempty"`
}

func (x *VerifyPartnerIDRequest) Reset() {
	*x = VerifyPartnerIDRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_user_user_proto_msgTypes[42]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *VerifyPartnerIDRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*VerifyPartnerIDRequest) ProtoMessage() {}

func (x *VerifyPartnerIDRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_user_user_proto_msgTypes[42]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use VerifyPartnerIDRequest.ProtoReflect.Descriptor instead.
func (*VerifyPartnerIDRequest) Descriptor() ([]byte, []int) {
	return file_proto_user_user_proto_rawDescGZIP(), []int{42}
}

func (x *VerifyPartnerIDRequest) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *VerifyPartnerIDRequest) GetToken() string {
	if x != nil {
		return x.Token
	}
	return ""
}

type VerifyPartnerIDResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Code    string           `protobuf:"bytes,1,opt,name=code,proto3" json:"code,omitempty"`
	Message string           `protobuf:"bytes,2,opt,name=message,proto3" json:"message,omitempty"`
	Allowed string           `protobuf:"bytes,3,opt,name=allowed,proto3" json:"allowed,omitempty"`
	Result  *UserSubscripted `protobuf:"bytes,4,opt,name=result,proto3" json:"result,omitempty"`
}

func (x *VerifyPartnerIDResponse) Reset() {
	*x = VerifyPartnerIDResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_user_user_proto_msgTypes[43]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *VerifyPartnerIDResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*VerifyPartnerIDResponse) ProtoMessage() {}

func (x *VerifyPartnerIDResponse) ProtoReflect() protoreflect.Message {
	mi := &file_proto_user_user_proto_msgTypes[43]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use VerifyPartnerIDResponse.ProtoReflect.Descriptor instead.
func (*VerifyPartnerIDResponse) Descriptor() ([]byte, []int) {
	return file_proto_user_user_proto_rawDescGZIP(), []int{43}
}

func (x *VerifyPartnerIDResponse) GetCode() string {
	if x != nil {
		return x.Code
	}
	return ""
}

func (x *VerifyPartnerIDResponse) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

func (x *VerifyPartnerIDResponse) GetAllowed() string {
	if x != nil {
		return x.Allowed
	}
	return ""
}

func (x *VerifyPartnerIDResponse) GetResult() *UserSubscripted {
	if x != nil {
		return x.Result
	}
	return nil
}

type UserSubscripted struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Reference              string `protobuf:"bytes,1,opt,name=Reference,json=ref,proto3" json:"Reference,omitempty"`
	Name                   string `protobuf:"bytes,2,opt,name=Name,json=first_name,proto3" json:"Name,omitempty"`
	Lastname               string `protobuf:"bytes,3,opt,name=Lastname,json=last_name,proto3" json:"Lastname,omitempty"`
	Email                  string `protobuf:"bytes,4,opt,name=Email,json=email,proto3" json:"Email,omitempty"`
	Tel                    string `protobuf:"bytes,5,opt,name=Tel,json=mobile_no,proto3" json:"Tel,omitempty"`
	Source                 string `protobuf:"bytes,6,opt,name=Source,json=register_by,proto3" json:"Source,omitempty"`
	ImageURL               string `protobuf:"bytes,7,opt,name=ImageURL,json=profile_image,proto3" json:"ImageURL,omitempty"`
	PartnerReferenceNumber string `protobuf:"bytes,8,opt,name=PartnerReferenceNumber,json=partner_reference_number,proto3" json:"PartnerReferenceNumber,omitempty"`
}

func (x *UserSubscripted) Reset() {
	*x = UserSubscripted{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_user_user_proto_msgTypes[44]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UserSubscripted) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UserSubscripted) ProtoMessage() {}

func (x *UserSubscripted) ProtoReflect() protoreflect.Message {
	mi := &file_proto_user_user_proto_msgTypes[44]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UserSubscripted.ProtoReflect.Descriptor instead.
func (*UserSubscripted) Descriptor() ([]byte, []int) {
	return file_proto_user_user_proto_rawDescGZIP(), []int{44}
}

func (x *UserSubscripted) GetReference() string {
	if x != nil {
		return x.Reference
	}
	return ""
}

func (x *UserSubscripted) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *UserSubscripted) GetLastname() string {
	if x != nil {
		return x.Lastname
	}
	return ""
}

func (x *UserSubscripted) GetEmail() string {
	if x != nil {
		return x.Email
	}
	return ""
}

func (x *UserSubscripted) GetTel() string {
	if x != nil {
		return x.Tel
	}
	return ""
}

func (x *UserSubscripted) GetSource() string {
	if x != nil {
		return x.Source
	}
	return ""
}

func (x *UserSubscripted) GetImageURL() string {
	if x != nil {
		return x.ImageURL
	}
	return ""
}

func (x *UserSubscripted) GetPartnerReferenceNumber() string {
	if x != nil {
		return x.PartnerReferenceNumber
	}
	return ""
}

type Error struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Code    string `protobuf:"bytes,1,opt,name=code,proto3" json:"code,omitempty"`
	Message string `protobuf:"bytes,2,opt,name=message,proto3" json:"message,omitempty"`
}

func (x *Error) Reset() {
	*x = Error{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_user_user_proto_msgTypes[45]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Error) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Error) ProtoMessage() {}

func (x *Error) ProtoReflect() protoreflect.Message {
	mi := &file_proto_user_user_proto_msgTypes[45]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Error.ProtoReflect.Descriptor instead.
func (*Error) Descriptor() ([]byte, []int) {
	return file_proto_user_user_proto_rawDescGZIP(), []int{45}
}

func (x *Error) GetCode() string {
	if x != nil {
		return x.Code
	}
	return ""
}

func (x *Error) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

type GetByTelRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Tel string `protobuf:"bytes,1,opt,name=tel,proto3" json:"tel,omitempty"`
}

func (x *GetByTelRequest) Reset() {
	*x = GetByTelRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_user_user_proto_msgTypes[46]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetByTelRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetByTelRequest) ProtoMessage() {}

func (x *GetByTelRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_user_user_proto_msgTypes[46]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetByTelRequest.ProtoReflect.Descriptor instead.
func (*GetByTelRequest) Descriptor() ([]byte, []int) {
	return file_proto_user_user_proto_rawDescGZIP(), []int{46}
}

func (x *GetByTelRequest) GetTel() string {
	if x != nil {
		return x.Tel
	}
	return ""
}

type UserDetailResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Data  *UserDetail `protobuf:"bytes,1,opt,name=data,proto3" json:"data,omitempty"`
	Error *Error      `protobuf:"bytes,2,opt,name=error,proto3" json:"error,omitempty"`
}

func (x *UserDetailResponse) Reset() {
	*x = UserDetailResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_user_user_proto_msgTypes[47]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UserDetailResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UserDetailResponse) ProtoMessage() {}

func (x *UserDetailResponse) ProtoReflect() protoreflect.Message {
	mi := &file_proto_user_user_proto_msgTypes[47]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UserDetailResponse.ProtoReflect.Descriptor instead.
func (*UserDetailResponse) Descriptor() ([]byte, []int) {
	return file_proto_user_user_proto_rawDescGZIP(), []int{47}
}

func (x *UserDetailResponse) GetData() *UserDetail {
	if x != nil {
		return x.Data
	}
	return nil
}

func (x *UserDetailResponse) GetError() *Error {
	if x != nil {
		return x.Error
	}
	return nil
}

type UsersInterestReqList struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UsersInterestList []*UserInterestRequest `protobuf:"bytes,1,rep,name=usersInterestList,proto3" json:"usersInterestList,omitempty"`
}

func (x *UsersInterestReqList) Reset() {
	*x = UsersInterestReqList{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_user_user_proto_msgTypes[48]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UsersInterestReqList) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UsersInterestReqList) ProtoMessage() {}

func (x *UsersInterestReqList) ProtoReflect() protoreflect.Message {
	mi := &file_proto_user_user_proto_msgTypes[48]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UsersInterestReqList.ProtoReflect.Descriptor instead.
func (*UsersInterestReqList) Descriptor() ([]byte, []int) {
	return file_proto_user_user_proto_rawDescGZIP(), []int{48}
}

func (x *UsersInterestReqList) GetUsersInterestList() []*UserInterestRequest {
	if x != nil {
		return x.UsersInterestList
	}
	return nil
}

type UsersInterestUpdateReqList struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UsersInterestUpdateReqList []*UserInterestUpdateRequest `protobuf:"bytes,1,rep,name=usersInterestUpdateReqList,proto3" json:"usersInterestUpdateReqList,omitempty"`
}

func (x *UsersInterestUpdateReqList) Reset() {
	*x = UsersInterestUpdateReqList{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_user_user_proto_msgTypes[49]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UsersInterestUpdateReqList) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UsersInterestUpdateReqList) ProtoMessage() {}

func (x *UsersInterestUpdateReqList) ProtoReflect() protoreflect.Message {
	mi := &file_proto_user_user_proto_msgTypes[49]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UsersInterestUpdateReqList.ProtoReflect.Descriptor instead.
func (*UsersInterestUpdateReqList) Descriptor() ([]byte, []int) {
	return file_proto_user_user_proto_rawDescGZIP(), []int{49}
}

func (x *UsersInterestUpdateReqList) GetUsersInterestUpdateReqList() []*UserInterestUpdateRequest {
	if x != nil {
		return x.UsersInterestUpdateReqList
	}
	return nil
}

type UsersInterestResList struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UsersInterestResList []*UserInterestResponse `protobuf:"bytes,1,rep,name=usersInterestResList,proto3" json:"usersInterestResList,omitempty"`
}

func (x *UsersInterestResList) Reset() {
	*x = UsersInterestResList{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_user_user_proto_msgTypes[50]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UsersInterestResList) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UsersInterestResList) ProtoMessage() {}

func (x *UsersInterestResList) ProtoReflect() protoreflect.Message {
	mi := &file_proto_user_user_proto_msgTypes[50]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UsersInterestResList.ProtoReflect.Descriptor instead.
func (*UsersInterestResList) Descriptor() ([]byte, []int) {
	return file_proto_user_user_proto_rawDescGZIP(), []int{50}
}

func (x *UsersInterestResList) GetUsersInterestResList() []*UserInterestResponse {
	if x != nil {
		return x.UsersInterestResList
	}
	return nil
}

type UserInterestRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	TypeUserInterest string   `protobuf:"bytes,1,opt,name=typeUserInterest,json=type_user_interest,proto3" json:"typeUserInterest,omitempty"`
	CampaignId       string   `protobuf:"bytes,2,opt,name=campaignId,json=campaign_id,proto3" json:"campaignId,omitempty"`
	UserId           string   `protobuf:"bytes,3,opt,name=userId,json=user_id,proto3" json:"userId,omitempty"`
	InterestIds      []string `protobuf:"bytes,4,rep,name=interest_ids,json=interestIds,proto3" json:"interest_ids,omitempty"`
}

func (x *UserInterestRequest) Reset() {
	*x = UserInterestRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_user_user_proto_msgTypes[51]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UserInterestRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UserInterestRequest) ProtoMessage() {}

func (x *UserInterestRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_user_user_proto_msgTypes[51]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UserInterestRequest.ProtoReflect.Descriptor instead.
func (*UserInterestRequest) Descriptor() ([]byte, []int) {
	return file_proto_user_user_proto_rawDescGZIP(), []int{51}
}

func (x *UserInterestRequest) GetTypeUserInterest() string {
	if x != nil {
		return x.TypeUserInterest
	}
	return ""
}

func (x *UserInterestRequest) GetCampaignId() string {
	if x != nil {
		return x.CampaignId
	}
	return ""
}

func (x *UserInterestRequest) GetUserId() string {
	if x != nil {
		return x.UserId
	}
	return ""
}

func (x *UserInterestRequest) GetInterestIds() []string {
	if x != nil {
		return x.InterestIds
	}
	return nil
}

type UserInterestUpdateRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id               string   `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	TypeUserInterest string   `protobuf:"bytes,2,opt,name=typeUserInterest,json=type_user_interest,proto3" json:"typeUserInterest,omitempty"`
	CampaignId       string   `protobuf:"bytes,3,opt,name=campaignId,json=campaign_id,proto3" json:"campaignId,omitempty"`
	UserId           string   `protobuf:"bytes,4,opt,name=userId,json=user_id,proto3" json:"userId,omitempty"`
	InterestIds      []string `protobuf:"bytes,5,rep,name=interest_ids,json=interestIds,proto3" json:"interest_ids,omitempty"`
}

func (x *UserInterestUpdateRequest) Reset() {
	*x = UserInterestUpdateRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_user_user_proto_msgTypes[52]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UserInterestUpdateRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UserInterestUpdateRequest) ProtoMessage() {}

func (x *UserInterestUpdateRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_user_user_proto_msgTypes[52]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UserInterestUpdateRequest.ProtoReflect.Descriptor instead.
func (*UserInterestUpdateRequest) Descriptor() ([]byte, []int) {
	return file_proto_user_user_proto_rawDescGZIP(), []int{52}
}

func (x *UserInterestUpdateRequest) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *UserInterestUpdateRequest) GetTypeUserInterest() string {
	if x != nil {
		return x.TypeUserInterest
	}
	return ""
}

func (x *UserInterestUpdateRequest) GetCampaignId() string {
	if x != nil {
		return x.CampaignId
	}
	return ""
}

func (x *UserInterestUpdateRequest) GetUserId() string {
	if x != nil {
		return x.UserId
	}
	return ""
}

func (x *UserInterestUpdateRequest) GetInterestIds() []string {
	if x != nil {
		return x.InterestIds
	}
	return nil
}

type InterestList struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Ids string `protobuf:"bytes,1,opt,name=ids,proto3" json:"ids,omitempty"`
}

func (x *InterestList) Reset() {
	*x = InterestList{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_user_user_proto_msgTypes[53]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *InterestList) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*InterestList) ProtoMessage() {}

func (x *InterestList) ProtoReflect() protoreflect.Message {
	mi := &file_proto_user_user_proto_msgTypes[53]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use InterestList.ProtoReflect.Descriptor instead.
func (*InterestList) Descriptor() ([]byte, []int) {
	return file_proto_user_user_proto_rawDescGZIP(), []int{53}
}

func (x *InterestList) GetIds() string {
	if x != nil {
		return x.Ids
	}
	return ""
}

type UserInterestResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id               string               `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	TypeUserInterest string               `protobuf:"bytes,2,opt,name=typeUserInterest,json=type_user_interest,proto3" json:"typeUserInterest,omitempty"`
	CampaignId       string               `protobuf:"bytes,3,opt,name=campaignId,json=campaign_id,proto3" json:"campaignId,omitempty"`
	UserId           string               `protobuf:"bytes,4,opt,name=userId,json=user_id,proto3" json:"userId,omitempty"`
	CreatedAt        *timestamp.Timestamp `protobuf:"bytes,5,opt,name=created_at,proto3" json:"created_at,omitempty"`
	UpdatedAt        *timestamp.Timestamp `protobuf:"bytes,6,opt,name=updated_at,proto3" json:"updated_at,omitempty"`
	Items            []*Item              `protobuf:"bytes,7,rep,name=items,proto3" json:"items,omitempty"`
}

func (x *UserInterestResponse) Reset() {
	*x = UserInterestResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_user_user_proto_msgTypes[54]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UserInterestResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UserInterestResponse) ProtoMessage() {}

func (x *UserInterestResponse) ProtoReflect() protoreflect.Message {
	mi := &file_proto_user_user_proto_msgTypes[54]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UserInterestResponse.ProtoReflect.Descriptor instead.
func (*UserInterestResponse) Descriptor() ([]byte, []int) {
	return file_proto_user_user_proto_rawDescGZIP(), []int{54}
}

func (x *UserInterestResponse) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *UserInterestResponse) GetTypeUserInterest() string {
	if x != nil {
		return x.TypeUserInterest
	}
	return ""
}

func (x *UserInterestResponse) GetCampaignId() string {
	if x != nil {
		return x.CampaignId
	}
	return ""
}

func (x *UserInterestResponse) GetUserId() string {
	if x != nil {
		return x.UserId
	}
	return ""
}

func (x *UserInterestResponse) GetCreatedAt() *timestamp.Timestamp {
	if x != nil {
		return x.CreatedAt
	}
	return nil
}

func (x *UserInterestResponse) GetUpdatedAt() *timestamp.Timestamp {
	if x != nil {
		return x.UpdatedAt
	}
	return nil
}

func (x *UserInterestResponse) GetItems() []*Item {
	if x != nil {
		return x.Items
	}
	return nil
}

type InterestItem struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id     string `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	Name   string `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	NameEn string `protobuf:"bytes,3,opt,name=nameEn,json=name_en,proto3" json:"nameEn,omitempty"`
	GaId   string `protobuf:"bytes,4,opt,name=gaId,json=ga_id,proto3" json:"gaId,omitempty"`
}

func (x *InterestItem) Reset() {
	*x = InterestItem{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_user_user_proto_msgTypes[55]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *InterestItem) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*InterestItem) ProtoMessage() {}

func (x *InterestItem) ProtoReflect() protoreflect.Message {
	mi := &file_proto_user_user_proto_msgTypes[55]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use InterestItem.ProtoReflect.Descriptor instead.
func (*InterestItem) Descriptor() ([]byte, []int) {
	return file_proto_user_user_proto_rawDescGZIP(), []int{55}
}

func (x *InterestItem) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *InterestItem) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *InterestItem) GetNameEn() string {
	if x != nil {
		return x.NameEn
	}
	return ""
}

func (x *InterestItem) GetGaId() string {
	if x != nil {
		return x.GaId
	}
	return ""
}

type InterestItemList struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Items []*InterestItem `protobuf:"bytes,1,rep,name=items,proto3" json:"items,omitempty"`
}

func (x *InterestItemList) Reset() {
	*x = InterestItemList{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_user_user_proto_msgTypes[56]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *InterestItemList) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*InterestItemList) ProtoMessage() {}

func (x *InterestItemList) ProtoReflect() protoreflect.Message {
	mi := &file_proto_user_user_proto_msgTypes[56]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use InterestItemList.ProtoReflect.Descriptor instead.
func (*InterestItemList) Descriptor() ([]byte, []int) {
	return file_proto_user_user_proto_rawDescGZIP(), []int{56}
}

func (x *InterestItemList) GetItems() []*InterestItem {
	if x != nil {
		return x.Items
	}
	return nil
}

type Item struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id     int32  `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	Name   string `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	NameEn string `protobuf:"bytes,3,opt,name=name_en,json=nameEn,proto3" json:"name_en,omitempty"`
	GaId   string `protobuf:"bytes,4,opt,name=ga_id,json=gaId,proto3" json:"ga_id,omitempty"`
}

func (x *Item) Reset() {
	*x = Item{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_user_user_proto_msgTypes[57]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Item) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Item) ProtoMessage() {}

func (x *Item) ProtoReflect() protoreflect.Message {
	mi := &file_proto_user_user_proto_msgTypes[57]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Item.ProtoReflect.Descriptor instead.
func (*Item) Descriptor() ([]byte, []int) {
	return file_proto_user_user_proto_rawDescGZIP(), []int{57}
}

func (x *Item) GetId() int32 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *Item) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *Item) GetNameEn() string {
	if x != nil {
		return x.NameEn
	}
	return ""
}

func (x *Item) GetGaId() string {
	if x != nil {
		return x.GaId
	}
	return ""
}

type UserInterestRequestResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Data  *UserInterestResponse `protobuf:"bytes,1,opt,name=data,proto3" json:"data,omitempty"`
	Error *Error                `protobuf:"bytes,2,opt,name=error,proto3" json:"error,omitempty"`
}

func (x *UserInterestRequestResponse) Reset() {
	*x = UserInterestRequestResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_user_user_proto_msgTypes[58]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UserInterestRequestResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UserInterestRequestResponse) ProtoMessage() {}

func (x *UserInterestRequestResponse) ProtoReflect() protoreflect.Message {
	mi := &file_proto_user_user_proto_msgTypes[58]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UserInterestRequestResponse.ProtoReflect.Descriptor instead.
func (*UserInterestRequestResponse) Descriptor() ([]byte, []int) {
	return file_proto_user_user_proto_rawDescGZIP(), []int{58}
}

func (x *UserInterestRequestResponse) GetData() *UserInterestResponse {
	if x != nil {
		return x.Data
	}
	return nil
}

func (x *UserInterestRequestResponse) GetError() *Error {
	if x != nil {
		return x.Error
	}
	return nil
}

var File_proto_user_user_proto protoreflect.FileDescriptor

var file_proto_user_user_proto_rawDesc = []byte{
	0x0a, 0x15, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2f, 0x75, 0x73, 0x65, 0x72, 0x2f, 0x75, 0x73, 0x65,
	0x72, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x1f, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2f, 0x74, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61,
	0x6d, 0x70, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x1e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65,
	0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2f, 0x77, 0x72, 0x61, 0x70, 0x70, 0x65,
	0x72, 0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0x0e, 0x0a, 0x0c, 0x45, 0x6d, 0x70, 0x74,
	0x79, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x22, 0xde, 0x03, 0x0a, 0x14, 0x55, 0x70, 0x64,
	0x61, 0x74, 0x65, 0x50, 0x72, 0x6f, 0x66, 0x69, 0x6c, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x12, 0x14, 0x0a, 0x05, 0x65, 0x6d, 0x61, 0x69, 0x6c, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x05, 0x65, 0x6d, 0x61, 0x69, 0x6c, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x1a, 0x0a, 0x08, 0x6c,
	0x61, 0x73, 0x74, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x6c,
	0x61, 0x73, 0x74, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x1c, 0x0a, 0x09, 0x62, 0x69, 0x72, 0x74, 0x68,
	0x64, 0x61, 0x74, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x62, 0x69, 0x72, 0x74,
	0x68, 0x64, 0x61, 0x74, 0x65, 0x12, 0x10, 0x0a, 0x03, 0x73, 0x65, 0x78, 0x18, 0x05, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x03, 0x73, 0x65, 0x78, 0x12, 0x10, 0x0a, 0x03, 0x74, 0x65, 0x6c, 0x18, 0x06,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x74, 0x65, 0x6c, 0x12, 0x29, 0x0a, 0x0f, 0x66, 0x61, 0x76,
	0x6f, 0x72, 0x69, 0x74, 0x65, 0x41, 0x72, 0x74, 0x69, 0x73, 0x74, 0x73, 0x18, 0x07, 0x20, 0x03,
	0x28, 0x05, 0x52, 0x10, 0x66, 0x61, 0x76, 0x6f, 0x72, 0x69, 0x74, 0x65, 0x5f, 0x61, 0x72, 0x74,
	0x69, 0x73, 0x74, 0x73, 0x12, 0x32, 0x0a, 0x13, 0x66, 0x61, 0x76, 0x6f, 0x72, 0x69, 0x74, 0x65,
	0x41, 0x72, 0x74, 0x69, 0x73, 0x74, 0x73, 0x54, 0x79, 0x70, 0x65, 0x18, 0x08, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x15, 0x66, 0x61, 0x76, 0x6f, 0x72, 0x69, 0x74, 0x65, 0x5f, 0x61, 0x72, 0x74, 0x69,
	0x73, 0x74, 0x73, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x12, 0x35, 0x0a, 0x0b, 0x75, 0x73, 0x65, 0x72,
	0x41, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x18, 0x09, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x12, 0x2e,
	0x75, 0x73, 0x65, 0x72, 0x41, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x44, 0x65, 0x74, 0x61, 0x69,
	0x6c, 0x52, 0x0c, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x61, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x12,
	0x23, 0x0a, 0x0c, 0x65, 0x6d, 0x61, 0x69, 0x6c, 0x43, 0x6f, 0x6e, 0x74, 0x61, 0x63, 0x74, 0x18,
	0x0a, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0d, 0x65, 0x6d, 0x61, 0x69, 0x6c, 0x5f, 0x63, 0x6f, 0x6e,
	0x74, 0x61, 0x63, 0x74, 0x12, 0x28, 0x0a, 0x0e, 0x6c, 0x69, 0x76, 0x65, 0x49, 0x6e, 0x54, 0x68,
	0x61, 0x69, 0x6c, 0x61, 0x6e, 0x64, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x05, 0x52, 0x10, 0x6c, 0x69,
	0x76, 0x65, 0x5f, 0x69, 0x6e, 0x5f, 0x74, 0x68, 0x61, 0x69, 0x6c, 0x61, 0x6e, 0x64, 0x12, 0x38,
	0x0a, 0x16, 0x70, 0x61, 0x72, 0x74, 0x6e, 0x65, 0x72, 0x52, 0x65, 0x66, 0x65, 0x72, 0x65, 0x6e,
	0x63, 0x65, 0x4e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x18, 0x0c, 0x20, 0x01, 0x28, 0x09, 0x52, 0x18,
	0x70, 0x61, 0x72, 0x74, 0x6e, 0x65, 0x72, 0x5f, 0x72, 0x65, 0x66, 0x65, 0x72, 0x65, 0x6e, 0x63,
	0x65, 0x5f, 0x6e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x12, 0x1f, 0x0a, 0x0a, 0x74, 0x65, 0x6c, 0x43,
	0x6f, 0x6e, 0x74, 0x61, 0x63, 0x74, 0x18, 0x0d, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x74, 0x65,
	0x6c, 0x5f, 0x63, 0x6f, 0x6e, 0x74, 0x61, 0x63, 0x74, 0x22, 0x31, 0x0a, 0x19, 0x52, 0x65, 0x73,
	0x65, 0x74, 0x50, 0x61, 0x73, 0x73, 0x77, 0x6f, 0x72, 0x64, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x14, 0x0a, 0x05, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x22, 0x6d, 0x0a, 0x1a,
	0x52, 0x65, 0x73, 0x65, 0x74, 0x50, 0x61, 0x73, 0x73, 0x77, 0x6f, 0x72, 0x64, 0x54, 0x6f, 0x6b,
	0x65, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x74, 0x6f,
	0x6b, 0x65, 0x6e, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x74, 0x6f, 0x6b, 0x65, 0x6e,
	0x12, 0x39, 0x0a, 0x09, 0x65, 0x78, 0x70, 0x69, 0x72, 0x65, 0x64, 0x41, 0x74, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52,
	0x0a, 0x65, 0x78, 0x70, 0x69, 0x72, 0x65, 0x64, 0x5f, 0x61, 0x74, 0x22, 0x3e, 0x0a, 0x14, 0x52,
	0x65, 0x73, 0x65, 0x74, 0x50, 0x61, 0x73, 0x73, 0x77, 0x6f, 0x72, 0x64, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x12, 0x14, 0x0a, 0x05, 0x65, 0x6d, 0x61, 0x69, 0x6c, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x05, 0x65, 0x6d, 0x61, 0x69, 0x6c, 0x12, 0x10, 0x0a, 0x03, 0x74, 0x65, 0x6c,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x74, 0x65, 0x6c, 0x22, 0x4e, 0x0a, 0x1a, 0x55,
	0x70, 0x64, 0x61, 0x74, 0x65, 0x52, 0x65, 0x73, 0x65, 0x74, 0x50, 0x61, 0x73, 0x73, 0x77, 0x6f,
	0x72, 0x64, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x14, 0x0a, 0x05, 0x74, 0x6f, 0x6b,
	0x65, 0x6e, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x12,
	0x1a, 0x0a, 0x08, 0x70, 0x61, 0x73, 0x73, 0x77, 0x6f, 0x72, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x08, 0x70, 0x61, 0x73, 0x73, 0x77, 0x6f, 0x72, 0x64, 0x22, 0xf4, 0x02, 0x0a, 0x0f,
	0x52, 0x65, 0x67, 0x69, 0x73, 0x74, 0x65, 0x72, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12,
	0x14, 0x0a, 0x05, 0x65, 0x6d, 0x61, 0x69, 0x6c, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05,
	0x65, 0x6d, 0x61, 0x69, 0x6c, 0x12, 0x1a, 0x0a, 0x08, 0x70, 0x61, 0x73, 0x73, 0x77, 0x6f, 0x72,
	0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x70, 0x61, 0x73, 0x73, 0x77, 0x6f, 0x72,
	0x64, 0x12, 0x23, 0x0a, 0x0c, 0x63, 0x61, 0x70, 0x74, 0x63, 0x68, 0x61, 0x54, 0x6f, 0x6b, 0x65,
	0x6e, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0d, 0x63, 0x61, 0x70, 0x74, 0x63, 0x68, 0x61,
	0x5f, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x12, 0x21, 0x0a, 0x0b, 0x72, 0x65, 0x64, 0x69, 0x72, 0x65,
	0x63, 0x74, 0x55, 0x72, 0x6c, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x72, 0x65, 0x64,
	0x69, 0x72, 0x65, 0x63, 0x74, 0x5f, 0x75, 0x72, 0x6c, 0x12, 0x1b, 0x0a, 0x08, 0x63, 0x6c, 0x69,
	0x65, 0x6e, 0x74, 0x49, 0x64, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x63, 0x6c, 0x69,
	0x65, 0x6e, 0x74, 0x5f, 0x69, 0x64, 0x12, 0x2c, 0x0a, 0x10, 0x77, 0x69, 0x74, 0x68, 0x54, 0x65,
	0x72, 0x6d, 0x73, 0x43, 0x6f, 0x6e, 0x73, 0x65, 0x6e, 0x74, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x12, 0x77, 0x69, 0x74, 0x68, 0x5f, 0x74, 0x65, 0x72, 0x6d, 0x73, 0x5f, 0x63, 0x6f, 0x6e,
	0x73, 0x65, 0x6e, 0x74, 0x12, 0x26, 0x0a, 0x0d, 0x77, 0x69, 0x74, 0x68, 0x50, 0x50, 0x43, 0x6f,
	0x6e, 0x73, 0x65, 0x6e, 0x74, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0f, 0x77, 0x69, 0x74,
	0x68, 0x5f, 0x70, 0x70, 0x5f, 0x63, 0x6f, 0x6e, 0x73, 0x65, 0x6e, 0x74, 0x12, 0x23, 0x0a, 0x0c,
	0x65, 0x6d, 0x61, 0x69, 0x6c, 0x43, 0x6f, 0x6e, 0x74, 0x61, 0x63, 0x74, 0x18, 0x08, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x0d, 0x65, 0x6d, 0x61, 0x69, 0x6c, 0x5f, 0x63, 0x6f, 0x6e, 0x74, 0x61, 0x63,
	0x74, 0x12, 0x1c, 0x0a, 0x09, 0x62, 0x69, 0x72, 0x74, 0x68, 0x64, 0x61, 0x74, 0x65, 0x18, 0x09,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x62, 0x69, 0x72, 0x74, 0x68, 0x64, 0x61, 0x74, 0x65, 0x12,
	0x10, 0x0a, 0x03, 0x73, 0x65, 0x78, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x73, 0x65,
	0x78, 0x12, 0x1f, 0x0a, 0x0a, 0x74, 0x65, 0x6c, 0x43, 0x6f, 0x6e, 0x74, 0x61, 0x63, 0x74, 0x18,
	0x0b, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x74, 0x65, 0x6c, 0x5f, 0x63, 0x6f, 0x6e, 0x74, 0x61,
	0x63, 0x74, 0x22, 0x80, 0x03, 0x0a, 0x1f, 0x52, 0x65, 0x67, 0x69, 0x73, 0x74, 0x65, 0x72, 0x57,
	0x69, 0x74, 0x68, 0x4d, 0x6f, 0x62, 0x69, 0x6c, 0x65, 0x4e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x10, 0x0a, 0x03, 0x74, 0x65, 0x6c, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x03, 0x74, 0x65, 0x6c, 0x12, 0x1a, 0x0a, 0x08, 0x70, 0x61, 0x73, 0x73,
	0x77, 0x6f, 0x72, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x70, 0x61, 0x73, 0x73,
	0x77, 0x6f, 0x72, 0x64, 0x12, 0x23, 0x0a, 0x0c, 0x63, 0x61, 0x70, 0x74, 0x63, 0x68, 0x61, 0x54,
	0x6f, 0x6b, 0x65, 0x6e, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0d, 0x63, 0x61, 0x70, 0x74,
	0x63, 0x68, 0x61, 0x5f, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x12, 0x21, 0x0a, 0x0b, 0x72, 0x65, 0x64,
	0x69, 0x72, 0x65, 0x63, 0x74, 0x55, 0x72, 0x6c, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c,
	0x72, 0x65, 0x64, 0x69, 0x72, 0x65, 0x63, 0x74, 0x5f, 0x75, 0x72, 0x6c, 0x12, 0x1b, 0x0a, 0x08,
	0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x49, 0x64, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09,
	0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x5f, 0x69, 0x64, 0x12, 0x2c, 0x0a, 0x10, 0x77, 0x69, 0x74,
	0x68, 0x54, 0x65, 0x72, 0x6d, 0x73, 0x43, 0x6f, 0x6e, 0x73, 0x65, 0x6e, 0x74, 0x18, 0x06, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x12, 0x77, 0x69, 0x74, 0x68, 0x5f, 0x74, 0x65, 0x72, 0x6d, 0x73, 0x5f,
	0x63, 0x6f, 0x6e, 0x73, 0x65, 0x6e, 0x74, 0x12, 0x26, 0x0a, 0x0d, 0x77, 0x69, 0x74, 0x68, 0x50,
	0x50, 0x43, 0x6f, 0x6e, 0x73, 0x65, 0x6e, 0x74, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0f,
	0x77, 0x69, 0x74, 0x68, 0x5f, 0x70, 0x70, 0x5f, 0x63, 0x6f, 0x6e, 0x73, 0x65, 0x6e, 0x74, 0x12,
	0x23, 0x0a, 0x0c, 0x65, 0x6d, 0x61, 0x69, 0x6c, 0x43, 0x6f, 0x6e, 0x74, 0x61, 0x63, 0x74, 0x18,
	0x08, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0d, 0x65, 0x6d, 0x61, 0x69, 0x6c, 0x5f, 0x63, 0x6f, 0x6e,
	0x74, 0x61, 0x63, 0x74, 0x12, 0x1c, 0x0a, 0x09, 0x62, 0x69, 0x72, 0x74, 0x68, 0x64, 0x61, 0x74,
	0x65, 0x18, 0x09, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x62, 0x69, 0x72, 0x74, 0x68, 0x64, 0x61,
	0x74, 0x65, 0x12, 0x10, 0x0a, 0x03, 0x73, 0x65, 0x78, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x03, 0x73, 0x65, 0x78, 0x12, 0x1f, 0x0a, 0x0a, 0x74, 0x65, 0x6c, 0x43, 0x6f, 0x6e, 0x74, 0x61,
	0x63, 0x74, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x74, 0x65, 0x6c, 0x5f, 0x63, 0x6f,
	0x6e, 0x74, 0x61, 0x63, 0x74, 0x22, 0x8d, 0x03, 0x0a, 0x22, 0x52, 0x65, 0x67, 0x69, 0x73, 0x74,
	0x65, 0x72, 0x57, 0x69, 0x74, 0x68, 0x4d, 0x6f, 0x62, 0x69, 0x6c, 0x65, 0x4e, 0x75, 0x6d, 0x62,
	0x65, 0x72, 0x41, 0x69, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1a, 0x0a, 0x08,
	0x75, 0x73, 0x65, 0x72, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08,
	0x75, 0x73, 0x65, 0x72, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x1a, 0x0a, 0x08, 0x70, 0x61, 0x73, 0x73,
	0x77, 0x6f, 0x72, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x70, 0x61, 0x73, 0x73,
	0x77, 0x6f, 0x72, 0x64, 0x12, 0x23, 0x0a, 0x0c, 0x63, 0x61, 0x70, 0x74, 0x63, 0x68, 0x61, 0x54,
	0x6f, 0x6b, 0x65, 0x6e, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0d, 0x63, 0x61, 0x70, 0x74,
	0x63, 0x68, 0x61, 0x5f, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x12, 0x21, 0x0a, 0x0b, 0x72, 0x65, 0x64,
	0x69, 0x72, 0x65, 0x63, 0x74, 0x55, 0x72, 0x6c, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c,
	0x72, 0x65, 0x64, 0x69, 0x72, 0x65, 0x63, 0x74, 0x5f, 0x75, 0x72, 0x6c, 0x12, 0x1b, 0x0a, 0x08,
	0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x49, 0x64, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09,
	0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x5f, 0x69, 0x64, 0x12, 0x2c, 0x0a, 0x10, 0x77, 0x69, 0x74,
	0x68, 0x54, 0x65, 0x72, 0x6d, 0x73, 0x43, 0x6f, 0x6e, 0x73, 0x65, 0x6e, 0x74, 0x18, 0x06, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x12, 0x77, 0x69, 0x74, 0x68, 0x5f, 0x74, 0x65, 0x72, 0x6d, 0x73, 0x5f,
	0x63, 0x6f, 0x6e, 0x73, 0x65, 0x6e, 0x74, 0x12, 0x26, 0x0a, 0x0d, 0x77, 0x69, 0x74, 0x68, 0x50,
	0x50, 0x43, 0x6f, 0x6e, 0x73, 0x65, 0x6e, 0x74, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0f,
	0x77, 0x69, 0x74, 0x68, 0x5f, 0x70, 0x70, 0x5f, 0x63, 0x6f, 0x6e, 0x73, 0x65, 0x6e, 0x74, 0x12,
	0x23, 0x0a, 0x0c, 0x65, 0x6d, 0x61, 0x69, 0x6c, 0x43, 0x6f, 0x6e, 0x74, 0x61, 0x63, 0x74, 0x18,
	0x08, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0d, 0x65, 0x6d, 0x61, 0x69, 0x6c, 0x5f, 0x63, 0x6f, 0x6e,
	0x74, 0x61, 0x63, 0x74, 0x12, 0x1c, 0x0a, 0x09, 0x62, 0x69, 0x72, 0x74, 0x68, 0x64, 0x61, 0x74,
	0x65, 0x18, 0x09, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x62, 0x69, 0x72, 0x74, 0x68, 0x64, 0x61,
	0x74, 0x65, 0x12, 0x10, 0x0a, 0x03, 0x73, 0x65, 0x78, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x03, 0x73, 0x65, 0x78, 0x12, 0x1f, 0x0a, 0x0a, 0x74, 0x65, 0x6c, 0x43, 0x6f, 0x6e, 0x74, 0x61,
	0x63, 0x74, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x74, 0x65, 0x6c, 0x5f, 0x63, 0x6f,
	0x6e, 0x74, 0x61, 0x63, 0x74, 0x22, 0x53, 0x0a, 0x0f, 0x53, 0x75, 0x63, 0x63, 0x65, 0x73, 0x73,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x6d, 0x65, 0x73, 0x73,
	0x61, 0x67, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61,
	0x67, 0x65, 0x12, 0x26, 0x0a, 0x06, 0x72, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x0e, 0x2e, 0x73, 0x75, 0x63, 0x63, 0x65, 0x73, 0x73, 0x52, 0x65, 0x73, 0x75,
	0x6c, 0x74, 0x52, 0x06, 0x72, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x22, 0x1f, 0x0a, 0x0d, 0x73, 0x75,
	0x63, 0x63, 0x65, 0x73, 0x73, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x12, 0x0e, 0x0a, 0x02, 0x69,
	0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x22, 0x29, 0x0a, 0x11, 0x56,
	0x65, 0x72, 0x69, 0x66, 0x79, 0x55, 0x73, 0x65, 0x72, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x12, 0x14, 0x0a, 0x05, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x05, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x22, 0x2e, 0x0a, 0x12, 0x56, 0x65, 0x72, 0x69, 0x66, 0x79,
	0x55, 0x73, 0x65, 0x72, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x18, 0x0a, 0x07,
	0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x6d,
	0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x22, 0x4e, 0x0a, 0x09, 0x55, 0x73, 0x65, 0x72, 0x45, 0x76,
	0x65, 0x6e, 0x74, 0x12, 0x14, 0x0a, 0x05, 0x65, 0x76, 0x65, 0x6e, 0x74, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x05, 0x65, 0x76, 0x65, 0x6e, 0x74, 0x12, 0x2b, 0x0a, 0x0a, 0x75, 0x73, 0x65,
	0x72, 0x64, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0b, 0x2e,
	0x55, 0x73, 0x65, 0x72, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x52, 0x0a, 0x75, 0x73, 0x65, 0x72,
	0x64, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x22, 0xe7, 0x01, 0x0a, 0x09, 0x4d, 0x61, 0x69, 0x6c, 0x45,
	0x76, 0x65, 0x6e, 0x74, 0x12, 0x16, 0x0a, 0x06, 0x73, 0x65, 0x6e, 0x64, 0x65, 0x72, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x73, 0x65, 0x6e, 0x64, 0x65, 0x72, 0x12, 0x12, 0x0a, 0x04,
	0x66, 0x72, 0x6f, 0x6d, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x66, 0x72, 0x6f, 0x6d,
	0x12, 0x1a, 0x0a, 0x08, 0x72, 0x65, 0x63, 0x65, 0x69, 0x76, 0x65, 0x72, 0x18, 0x03, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x08, 0x72, 0x65, 0x63, 0x65, 0x69, 0x76, 0x65, 0x72, 0x12, 0x0e, 0x0a, 0x02,
	0x74, 0x6f, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x74, 0x6f, 0x12, 0x18, 0x0a, 0x07,
	0x73, 0x75, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x73,
	0x75, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x12, 0x12, 0x0a, 0x04, 0x6c, 0x69, 0x6e, 0x6b, 0x18, 0x06,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6c, 0x69, 0x6e, 0x6b, 0x12, 0x12, 0x0a, 0x04, 0x62, 0x6f,
	0x64, 0x79, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x62, 0x6f, 0x64, 0x79, 0x12, 0x1a,
	0x0a, 0x08, 0x74, 0x65, 0x6d, 0x70, 0x6c, 0x61, 0x74, 0x65, 0x18, 0x08, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x08, 0x74, 0x65, 0x6d, 0x70, 0x6c, 0x61, 0x74, 0x65, 0x12, 0x24, 0x0a, 0x0d, 0x65, 0x6d,
	0x61, 0x69, 0x6c, 0x63, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x65, 0x72, 0x18, 0x09, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x0d, 0x65, 0x6d, 0x61, 0x69, 0x6c, 0x63, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x65, 0x72,
	0x22, 0x4d, 0x0a, 0x07, 0x53, 0x33, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x12, 0x12, 0x0a, 0x04, 0x66,
	0x69, 0x6c, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x66, 0x69, 0x6c, 0x65, 0x12,
	0x16, 0x0a, 0x06, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x06, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x16, 0x0a, 0x06, 0x62, 0x75, 0x63, 0x6b, 0x65,
	0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x62, 0x75, 0x63, 0x6b, 0x65, 0x74, 0x22,
	0xad, 0x01, 0x0a, 0x0f, 0x50, 0x6f, 0x69, 0x6e, 0x74, 0x54, 0x6f, 0x70, 0x69, 0x63, 0x45, 0x76,
	0x65, 0x6e, 0x74, 0x12, 0x1c, 0x0a, 0x09, 0x65, 0x76, 0x65, 0x6e, 0x74, 0x54, 0x79, 0x70, 0x65,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x65, 0x76, 0x65, 0x6e, 0x74, 0x54, 0x79, 0x70,
	0x65, 0x12, 0x16, 0x0a, 0x06, 0x75, 0x73, 0x65, 0x72, 0x49, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x06, 0x75, 0x73, 0x65, 0x72, 0x49, 0x64, 0x12, 0x14, 0x0a, 0x05, 0x72, 0x65, 0x66,
	0x49, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x72, 0x65, 0x66, 0x49, 0x64, 0x12,
	0x1c, 0x0a, 0x09, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x18, 0x04, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x09, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x12, 0x30, 0x0a,
	0x04, 0x64, 0x61, 0x74, 0x61, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1c, 0x2e, 0x67, 0x6f,
	0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x53, 0x74,
	0x72, 0x69, 0x6e, 0x67, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x52, 0x04, 0x64, 0x61, 0x74, 0x61, 0x22,
	0xff, 0x07, 0x0a, 0x0a, 0x55, 0x73, 0x65, 0x72, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x12, 0x0e,
	0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x12, 0x14,
	0x0a, 0x05, 0x65, 0x6d, 0x61, 0x69, 0x6c, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x65,
	0x6d, 0x61, 0x69, 0x6c, 0x12, 0x1a, 0x0a, 0x08, 0x70, 0x61, 0x73, 0x73, 0x77, 0x6f, 0x72, 0x64,
	0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x70, 0x61, 0x73, 0x73, 0x77, 0x6f, 0x72, 0x64,
	0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04,
	0x6e, 0x61, 0x6d, 0x65, 0x12, 0x1a, 0x0a, 0x08, 0x6c, 0x61, 0x73, 0x74, 0x6e, 0x61, 0x6d, 0x65,
	0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x6c, 0x61, 0x73, 0x74, 0x6e, 0x61, 0x6d, 0x65,
	0x12, 0x1c, 0x0a, 0x09, 0x62, 0x69, 0x72, 0x74, 0x68, 0x64, 0x61, 0x74, 0x65, 0x18, 0x06, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x09, 0x62, 0x69, 0x72, 0x74, 0x68, 0x64, 0x61, 0x74, 0x65, 0x12, 0x10,
	0x0a, 0x03, 0x73, 0x65, 0x78, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x73, 0x65, 0x78,
	0x12, 0x10, 0x0a, 0x03, 0x74, 0x65, 0x6c, 0x18, 0x08, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x74,
	0x65, 0x6c, 0x12, 0x3a, 0x0a, 0x0a, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x5f, 0x61, 0x74,
	0x18, 0x09, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61,
	0x6d, 0x70, 0x52, 0x0a, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x5f, 0x61, 0x74, 0x12, 0x3a,
	0x0a, 0x0a, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x5f, 0x61, 0x74, 0x18, 0x0a, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x0a,
	0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x5f, 0x61, 0x74, 0x12, 0x21, 0x0a, 0x0b, 0x72, 0x65,
	0x64, 0x69, 0x72, 0x65, 0x63, 0x74, 0x55, 0x72, 0x6c, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x0c, 0x72, 0x65, 0x64, 0x69, 0x72, 0x65, 0x63, 0x74, 0x5f, 0x75, 0x72, 0x6c, 0x12, 0x1b, 0x0a,
	0x08, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x49, 0x44, 0x18, 0x0c, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x09, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x5f, 0x69, 0x64, 0x12, 0x1f, 0x0a, 0x0a, 0x75, 0x73,
	0x65, 0x72, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x0d, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b,
	0x75, 0x73, 0x65, 0x72, 0x5f, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x16, 0x0a, 0x06, 0x73,
	0x6f, 0x75, 0x72, 0x63, 0x65, 0x18, 0x0e, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x73, 0x6f, 0x75,
	0x72, 0x63, 0x65, 0x12, 0x1f, 0x0a, 0x0a, 0x66, 0x61, 0x63, 0x65, 0x62, 0x6f, 0x6f, 0x6b, 0x49,
	0x44, 0x18, 0x0f, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x66, 0x61, 0x63, 0x65, 0x62, 0x6f, 0x6f,
	0x6b, 0x5f, 0x69, 0x64, 0x12, 0x1b, 0x0a, 0x08, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x49, 0x44,
	0x18, 0x10, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x5f, 0x69,
	0x64, 0x12, 0x17, 0x0a, 0x06, 0x6c, 0x69, 0x6e, 0x65, 0x49, 0x44, 0x18, 0x11, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x07, 0x6c, 0x69, 0x6e, 0x65, 0x5f, 0x69, 0x64, 0x12, 0x19, 0x0a, 0x07, 0x61, 0x70,
	0x70, 0x6c, 0x65, 0x49, 0x44, 0x18, 0x12, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x61, 0x70, 0x70,
	0x6c, 0x65, 0x5f, 0x69, 0x64, 0x12, 0x1b, 0x0a, 0x08, 0x69, 0x6d, 0x61, 0x67, 0x65, 0x55, 0x52,
	0x4c, 0x18, 0x13, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x69, 0x6d, 0x61, 0x67, 0x65, 0x5f, 0x75,
	0x72, 0x6c, 0x12, 0x3e, 0x0a, 0x0f, 0x66, 0x61, 0x76, 0x6f, 0x72, 0x69, 0x74, 0x65, 0x41, 0x72,
	0x74, 0x69, 0x73, 0x74, 0x73, 0x18, 0x14, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x13, 0x2e, 0x66, 0x61,
	0x76, 0x6f, 0x72, 0x69, 0x74, 0x65, 0x41, 0x72, 0x74, 0x69, 0x73, 0x74, 0x49, 0x74, 0x65, 0x6d,
	0x52, 0x10, 0x66, 0x61, 0x76, 0x6f, 0x72, 0x69, 0x74, 0x65, 0x5f, 0x61, 0x72, 0x74, 0x69, 0x73,
	0x74, 0x73, 0x12, 0x32, 0x0a, 0x13, 0x66, 0x61, 0x76, 0x6f, 0x72, 0x69, 0x74, 0x65, 0x41, 0x72,
	0x74, 0x69, 0x73, 0x74, 0x73, 0x54, 0x79, 0x70, 0x65, 0x18, 0x15, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x15, 0x66, 0x61, 0x76, 0x6f, 0x72, 0x69, 0x74, 0x65, 0x5f, 0x61, 0x72, 0x74, 0x69, 0x73, 0x74,
	0x73, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x12, 0x35, 0x0a, 0x0b, 0x75, 0x73, 0x65, 0x72, 0x41, 0x64,
	0x64, 0x72, 0x65, 0x73, 0x73, 0x18, 0x16, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x12, 0x2e, 0x75, 0x73,
	0x65, 0x72, 0x41, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x52,
	0x0c, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x61, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x12, 0x23, 0x0a,
	0x0c, 0x65, 0x6d, 0x61, 0x69, 0x6c, 0x43, 0x6f, 0x6e, 0x74, 0x61, 0x63, 0x74, 0x18, 0x17, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x0d, 0x65, 0x6d, 0x61, 0x69, 0x6c, 0x5f, 0x63, 0x6f, 0x6e, 0x74, 0x61,
	0x63, 0x74, 0x12, 0x28, 0x0a, 0x0e, 0x6c, 0x69, 0x76, 0x65, 0x49, 0x6e, 0x54, 0x68, 0x61, 0x69,
	0x6c, 0x61, 0x6e, 0x64, 0x18, 0x18, 0x20, 0x01, 0x28, 0x05, 0x52, 0x10, 0x6c, 0x69, 0x76, 0x65,
	0x5f, 0x69, 0x6e, 0x5f, 0x74, 0x68, 0x61, 0x69, 0x6c, 0x61, 0x6e, 0x64, 0x12, 0x38, 0x0a, 0x16,
	0x70, 0x61, 0x72, 0x74, 0x6e, 0x65, 0x72, 0x52, 0x65, 0x66, 0x65, 0x72, 0x65, 0x6e, 0x63, 0x65,
	0x4e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x18, 0x19, 0x20, 0x01, 0x28, 0x09, 0x52, 0x18, 0x70, 0x61,
	0x72, 0x74, 0x6e, 0x65, 0x72, 0x5f, 0x72, 0x65, 0x66, 0x65, 0x72, 0x65, 0x6e, 0x63, 0x65, 0x5f,
	0x6e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x12, 0x1f, 0x0a, 0x0a, 0x74, 0x65, 0x6c, 0x43, 0x6f, 0x6e,
	0x74, 0x61, 0x63, 0x74, 0x18, 0x1a, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x74, 0x65, 0x6c, 0x5f,
	0x63, 0x6f, 0x6e, 0x74, 0x61, 0x63, 0x74, 0x12, 0x48, 0x0a, 0x14, 0x75, 0x73, 0x65, 0x72, 0x49,
	0x6e, 0x74, 0x65, 0x72, 0x65, 0x73, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x18,
	0x1b, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x15, 0x2e, 0x55, 0x73, 0x65, 0x72, 0x49, 0x6e, 0x74, 0x65,
	0x72, 0x65, 0x73, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x52, 0x13, 0x75, 0x73,
	0x65, 0x72, 0x73, 0x5f, 0x69, 0x6e, 0x74, 0x65, 0x72, 0x65, 0x73, 0x74, 0x5f, 0x6c, 0x69, 0x73,
	0x74, 0x12, 0x1e, 0x0a, 0x09, 0x69, 0x73, 0x4e, 0x65, 0x77, 0x55, 0x73, 0x65, 0x72, 0x18, 0x1c,
	0x20, 0x01, 0x28, 0x08, 0x52, 0x0b, 0x69, 0x73, 0x5f, 0x6e, 0x65, 0x77, 0x5f, 0x75, 0x73, 0x65,
	0x72, 0x22, 0x87, 0x04, 0x0a, 0x12, 0x66, 0x61, 0x76, 0x6f, 0x72, 0x69, 0x74, 0x65, 0x41, 0x72,
	0x74, 0x69, 0x73, 0x74, 0x49, 0x74, 0x65, 0x6d, 0x12, 0x34, 0x0a, 0x06, 0x64, 0x61, 0x72, 0x61,
	0x49, 0x44, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1b, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c,
	0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x49, 0x6e, 0x74, 0x33, 0x32,
	0x56, 0x61, 0x6c, 0x75, 0x65, 0x52, 0x07, 0x64, 0x61, 0x72, 0x61, 0x5f, 0x69, 0x64, 0x12, 0x39,
	0x0a, 0x08, 0x66, 0x75, 0x6c, 0x6c, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x1c, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62,
	0x75, 0x66, 0x2e, 0x53, 0x74, 0x72, 0x69, 0x6e, 0x67, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x52, 0x09,
	0x66, 0x75, 0x6c, 0x6c, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x39, 0x0a, 0x08, 0x6e, 0x69, 0x63,
	0x6b, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1c, 0x2e, 0x67, 0x6f,
	0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x53, 0x74,
	0x72, 0x69, 0x6e, 0x67, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x52, 0x09, 0x6e, 0x69, 0x63, 0x6b, 0x5f,
	0x6e, 0x61, 0x6d, 0x65, 0x12, 0x34, 0x0a, 0x06, 0x67, 0x65, 0x6e, 0x64, 0x65, 0x72, 0x18, 0x04,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x1c, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x53, 0x74, 0x72, 0x69, 0x6e, 0x67, 0x56, 0x61, 0x6c,
	0x75, 0x65, 0x52, 0x06, 0x67, 0x65, 0x6e, 0x64, 0x65, 0x72, 0x12, 0x3d, 0x0a, 0x0a, 0x69, 0x6d,
	0x61, 0x67, 0x65, 0x53, 0x6d, 0x61, 0x6c, 0x6c, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1c,
	0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66,
	0x2e, 0x53, 0x74, 0x72, 0x69, 0x6e, 0x67, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x52, 0x0b, 0x69, 0x6d,
	0x61, 0x67, 0x65, 0x5f, 0x73, 0x6d, 0x61, 0x6c, 0x6c, 0x12, 0x3f, 0x0a, 0x0b, 0x69, 0x6d, 0x61,
	0x67, 0x65, 0x4d, 0x65, 0x64, 0x69, 0x75, 0x6d, 0x18, 0x06, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1c,
	0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66,
	0x2e, 0x53, 0x74, 0x72, 0x69, 0x6e, 0x67, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x52, 0x0c, 0x69, 0x6d,
	0x61, 0x67, 0x65, 0x5f, 0x6d, 0x65, 0x64, 0x69, 0x75, 0x6d, 0x12, 0x3d, 0x0a, 0x0a, 0x69, 0x6d,
	0x61, 0x67, 0x65, 0x4c, 0x61, 0x72, 0x67, 0x65, 0x18, 0x07, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1c,
	0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66,
	0x2e, 0x53, 0x74, 0x72, 0x69, 0x6e, 0x67, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x52, 0x0b, 0x69, 0x6d,
	0x61, 0x67, 0x65, 0x5f, 0x6c, 0x61, 0x72, 0x67, 0x65, 0x12, 0x50, 0x0a, 0x13, 0x66, 0x61, 0x76,
	0x6f, 0x72, 0x69, 0x74, 0x65, 0x41, 0x72, 0x74, 0x69, 0x73, 0x74, 0x73, 0x54, 0x79, 0x70, 0x65,
	0x18, 0x08, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1c, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x53, 0x74, 0x72, 0x69, 0x6e, 0x67, 0x56,
	0x61, 0x6c, 0x75, 0x65, 0x52, 0x15, 0x66, 0x61, 0x76, 0x6f, 0x72, 0x69, 0x74, 0x65, 0x5f, 0x61,
	0x72, 0x74, 0x69, 0x73, 0x74, 0x73, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x22, 0xf6, 0x06, 0x0a, 0x11,
	0x75, 0x73, 0x65, 0x72, 0x41, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x44, 0x65, 0x74, 0x61, 0x69,
	0x6c, 0x12, 0x43, 0x0a, 0x0d, 0x61, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x4e, 0x75, 0x6d, 0x62,
	0x65, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1c, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c,
	0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x53, 0x74, 0x72, 0x69, 0x6e,
	0x67, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x52, 0x0e, 0x61, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x5f,
	0x6e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x12, 0x3f, 0x0a, 0x0b, 0x76, 0x69, 0x6c, 0x6c, 0x61, 0x67,
	0x65, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1c, 0x2e, 0x67, 0x6f,
	0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x53, 0x74,
	0x72, 0x69, 0x6e, 0x67, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x52, 0x0c, 0x76, 0x69, 0x6c, 0x6c, 0x61,
	0x67, 0x65, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x43, 0x0a, 0x0d, 0x76, 0x69, 0x6c, 0x6c, 0x61,
	0x67, 0x65, 0x4e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1c,
	0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66,
	0x2e, 0x53, 0x74, 0x72, 0x69, 0x6e, 0x67, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x52, 0x0e, 0x76, 0x69,
	0x6c, 0x6c, 0x61, 0x67, 0x65, 0x5f, 0x6e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x12, 0x30, 0x0a, 0x04,
	0x6c, 0x61, 0x6e, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1c, 0x2e, 0x67, 0x6f, 0x6f,
	0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x53, 0x74, 0x72,
	0x69, 0x6e, 0x67, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x52, 0x04, 0x6c, 0x61, 0x6e, 0x65, 0x12, 0x30,
	0x0a, 0x04, 0x72, 0x6f, 0x61, 0x64, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1c, 0x2e, 0x67,
	0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x53,
	0x74, 0x72, 0x69, 0x6e, 0x67, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x52, 0x04, 0x72, 0x6f, 0x61, 0x64,
	0x12, 0x3e, 0x0a, 0x0b, 0x73, 0x75, 0x62, 0x44, 0x69, 0x73, 0x74, 0x72, 0x69, 0x63, 0x74, 0x18,
	0x06, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1b, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x49, 0x6e, 0x74, 0x33, 0x32, 0x56, 0x61, 0x6c,
	0x75, 0x65, 0x52, 0x0c, 0x73, 0x75, 0x62, 0x5f, 0x64, 0x69, 0x73, 0x74, 0x72, 0x69, 0x63, 0x74,
	0x12, 0x37, 0x0a, 0x08, 0x64, 0x69, 0x73, 0x74, 0x72, 0x69, 0x63, 0x74, 0x18, 0x07, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x1b, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x62, 0x75, 0x66, 0x2e, 0x49, 0x6e, 0x74, 0x33, 0x32, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x52,
	0x08, 0x64, 0x69, 0x73, 0x74, 0x72, 0x69, 0x63, 0x74, 0x12, 0x37, 0x0a, 0x08, 0x70, 0x72, 0x6f,
	0x76, 0x69, 0x6e, 0x63, 0x65, 0x18, 0x08, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1b, 0x2e, 0x67, 0x6f,
	0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x49, 0x6e,
	0x74, 0x33, 0x32, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x52, 0x08, 0x70, 0x72, 0x6f, 0x76, 0x69, 0x6e,
	0x63, 0x65, 0x12, 0x3d, 0x0a, 0x0a, 0x70, 0x6f, 0x73, 0x74, 0x61, 0x6c, 0x43, 0x6f, 0x64, 0x65,
	0x18, 0x09, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1c, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x53, 0x74, 0x72, 0x69, 0x6e, 0x67, 0x56,
	0x61, 0x6c, 0x75, 0x65, 0x52, 0x0b, 0x70, 0x6f, 0x73, 0x74, 0x61, 0x6c, 0x5f, 0x63, 0x6f, 0x64,
	0x65, 0x12, 0x3c, 0x0a, 0x0a, 0x6f, 0x63, 0x63, 0x75, 0x70, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x18,
	0x0a, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1c, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x53, 0x74, 0x72, 0x69, 0x6e, 0x67, 0x56, 0x61,
	0x6c, 0x75, 0x65, 0x52, 0x0a, 0x6f, 0x63, 0x63, 0x75, 0x70, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12,
	0x33, 0x0a, 0x06, 0x73, 0x61, 0x6c, 0x61, 0x72, 0x79, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x1b, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75,
	0x66, 0x2e, 0x49, 0x6e, 0x74, 0x33, 0x32, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x52, 0x06, 0x73, 0x61,
	0x6c, 0x61, 0x72, 0x79, 0x12, 0x48, 0x0a, 0x0f, 0x73, 0x75, 0x62, 0x44, 0x69, 0x73, 0x74, 0x72,
	0x69, 0x63, 0x74, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x0c, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1c, 0x2e,
	0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e,
	0x53, 0x74, 0x72, 0x69, 0x6e, 0x67, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x52, 0x11, 0x73, 0x75, 0x62,
	0x5f, 0x64, 0x69, 0x73, 0x74, 0x72, 0x69, 0x63, 0x74, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x41,
	0x0a, 0x0c, 0x64, 0x69, 0x73, 0x74, 0x72, 0x69, 0x63, 0x74, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x0d,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x1c, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x53, 0x74, 0x72, 0x69, 0x6e, 0x67, 0x56, 0x61, 0x6c,
	0x75, 0x65, 0x52, 0x0d, 0x64, 0x69, 0x73, 0x74, 0x72, 0x69, 0x63, 0x74, 0x5f, 0x6e, 0x61, 0x6d,
	0x65, 0x12, 0x41, 0x0a, 0x0c, 0x70, 0x72, 0x6f, 0x76, 0x69, 0x6e, 0x63, 0x65, 0x4e, 0x61, 0x6d,
	0x65, 0x18, 0x0e, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1c, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65,
	0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x53, 0x74, 0x72, 0x69, 0x6e, 0x67,
	0x56, 0x61, 0x6c, 0x75, 0x65, 0x52, 0x0d, 0x70, 0x72, 0x6f, 0x76, 0x69, 0x6e, 0x63, 0x65, 0x5f,
	0x6e, 0x61, 0x6d, 0x65, 0x22, 0xb1, 0x03, 0x0a, 0x0d, 0x53, 0x6f, 0x63, 0x69, 0x61, 0x6c, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1f, 0x0a, 0x0a, 0x66, 0x61, 0x63, 0x65, 0x62, 0x6f,
	0x6f, 0x6b, 0x49, 0x44, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x66, 0x61, 0x63, 0x65,
	0x62, 0x6f, 0x6f, 0x6b, 0x5f, 0x69, 0x64, 0x12, 0x1b, 0x0a, 0x08, 0x67, 0x6f, 0x6f, 0x67, 0x6c,
	0x65, 0x49, 0x44, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x67, 0x6f, 0x6f, 0x67, 0x6c,
	0x65, 0x5f, 0x69, 0x64, 0x12, 0x17, 0x0a, 0x06, 0x6c, 0x69, 0x6e, 0x65, 0x49, 0x44, 0x18, 0x03,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x6c, 0x69, 0x6e, 0x65, 0x5f, 0x69, 0x64, 0x12, 0x19, 0x0a,
	0x07, 0x61, 0x70, 0x70, 0x6c, 0x65, 0x49, 0x44, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08,
	0x61, 0x70, 0x70, 0x6c, 0x65, 0x5f, 0x69, 0x64, 0x12, 0x14, 0x0a, 0x05, 0x65, 0x6d, 0x61, 0x69,
	0x6c, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x65, 0x6d, 0x61, 0x69, 0x6c, 0x12, 0x12,
	0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61,
	0x6d, 0x65, 0x12, 0x1a, 0x0a, 0x08, 0x6c, 0x61, 0x73, 0x74, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x07,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x6c, 0x61, 0x73, 0x74, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x1b,
	0x0a, 0x08, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x49, 0x44, 0x18, 0x08, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x09, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x5f, 0x69, 0x64, 0x12, 0x1b, 0x0a, 0x08, 0x69,
	0x6d, 0x61, 0x67, 0x65, 0x55, 0x52, 0x4c, 0x18, 0x09, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x69,
	0x6d, 0x61, 0x67, 0x65, 0x5f, 0x75, 0x72, 0x6c, 0x12, 0x16, 0x0a, 0x06, 0x73, 0x6f, 0x75, 0x72,
	0x63, 0x65, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65,
	0x12, 0x10, 0x0a, 0x03, 0x73, 0x65, 0x78, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x73,
	0x65, 0x78, 0x12, 0x10, 0x0a, 0x03, 0x74, 0x65, 0x6c, 0x18, 0x0c, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x03, 0x74, 0x65, 0x6c, 0x12, 0x1c, 0x0a, 0x09, 0x62, 0x69, 0x72, 0x74, 0x68, 0x64, 0x61, 0x74,
	0x65, 0x18, 0x0d, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x62, 0x69, 0x72, 0x74, 0x68, 0x64, 0x61,
	0x74, 0x65, 0x12, 0x2c, 0x0a, 0x10, 0x77, 0x69, 0x74, 0x68, 0x54, 0x65, 0x72, 0x6d, 0x73, 0x43,
	0x6f, 0x6e, 0x73, 0x65, 0x6e, 0x74, 0x18, 0x0e, 0x20, 0x01, 0x28, 0x09, 0x52, 0x12, 0x77, 0x69,
	0x74, 0x68, 0x5f, 0x74, 0x65, 0x72, 0x6d, 0x73, 0x5f, 0x63, 0x6f, 0x6e, 0x73, 0x65, 0x6e, 0x74,
	0x12, 0x26, 0x0a, 0x0d, 0x77, 0x69, 0x74, 0x68, 0x50, 0x50, 0x43, 0x6f, 0x6e, 0x73, 0x65, 0x6e,
	0x74, 0x18, 0x0f, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0f, 0x77, 0x69, 0x74, 0x68, 0x5f, 0x70, 0x70,
	0x5f, 0x63, 0x6f, 0x6e, 0x73, 0x65, 0x6e, 0x74, 0x22, 0xdd, 0x03, 0x0a, 0x0e, 0x53, 0x6f, 0x63,
	0x69, 0x61, 0x6c, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x6d,
	0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x6d, 0x65,
	0x73, 0x73, 0x61, 0x67, 0x65, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x02, 0x69, 0x64, 0x12, 0x1f, 0x0a, 0x0a, 0x66, 0x61, 0x63, 0x65, 0x62, 0x6f, 0x6f,
	0x6b, 0x49, 0x44, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x66, 0x61, 0x63, 0x65, 0x62,
	0x6f, 0x6f, 0x6b, 0x5f, 0x69, 0x64, 0x12, 0x1b, 0x0a, 0x08, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65,
	0x49, 0x44, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65,
	0x5f, 0x69, 0x64, 0x12, 0x17, 0x0a, 0x06, 0x6c, 0x69, 0x6e, 0x65, 0x49, 0x44, 0x18, 0x05, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x07, 0x6c, 0x69, 0x6e, 0x65, 0x5f, 0x69, 0x64, 0x12, 0x19, 0x0a, 0x07,
	0x61, 0x70, 0x70, 0x6c, 0x65, 0x49, 0x44, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x61,
	0x70, 0x70, 0x6c, 0x65, 0x5f, 0x69, 0x64, 0x12, 0x14, 0x0a, 0x05, 0x65, 0x6d, 0x61, 0x69, 0x6c,
	0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x65, 0x6d, 0x61, 0x69, 0x6c, 0x12, 0x12, 0x0a,
	0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x08, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d,
	0x65, 0x12, 0x1a, 0x0a, 0x08, 0x6c, 0x61, 0x73, 0x74, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x09, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x08, 0x6c, 0x61, 0x73, 0x74, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x1b, 0x0a,
	0x08, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x49, 0x44, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x09, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x5f, 0x69, 0x64, 0x12, 0x1b, 0x0a, 0x08, 0x69, 0x6d,
	0x61, 0x67, 0x65, 0x55, 0x52, 0x4c, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x69, 0x6d,
	0x61, 0x67, 0x65, 0x5f, 0x75, 0x72, 0x6c, 0x12, 0x16, 0x0a, 0x06, 0x73, 0x6f, 0x75, 0x72, 0x63,
	0x65, 0x18, 0x0c, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x12,
	0x1f, 0x0a, 0x0a, 0x75, 0x73, 0x65, 0x72, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x0d, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x0b, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73,
	0x12, 0x3a, 0x0a, 0x0a, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x5f, 0x61, 0x74, 0x18, 0x0e,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70,
	0x52, 0x0a, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x5f, 0x61, 0x74, 0x12, 0x3a, 0x0a, 0x0a,
	0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x5f, 0x61, 0x74, 0x18, 0x0f, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62,
	0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x0a, 0x75, 0x70,
	0x64, 0x61, 0x74, 0x65, 0x64, 0x5f, 0x61, 0x74, 0x22, 0xa2, 0x01, 0x0a, 0x15, 0x55, 0x70, 0x64,
	0x61, 0x74, 0x65, 0x53, 0x6f, 0x63, 0x69, 0x61, 0x6c, 0x49, 0x44, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x12, 0x17, 0x0a, 0x06, 0x75, 0x73, 0x65, 0x72, 0x49, 0x44, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x07, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x12, 0x1f, 0x0a, 0x0a, 0x66,
	0x61, 0x63, 0x65, 0x62, 0x6f, 0x6f, 0x6b, 0x49, 0x44, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x0b, 0x66, 0x61, 0x63, 0x65, 0x62, 0x6f, 0x6f, 0x6b, 0x5f, 0x69, 0x64, 0x12, 0x1b, 0x0a, 0x08,
	0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x49, 0x44, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09,
	0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x5f, 0x69, 0x64, 0x12, 0x17, 0x0a, 0x06, 0x6c, 0x69, 0x6e,
	0x65, 0x49, 0x44, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x6c, 0x69, 0x6e, 0x65, 0x5f,
	0x69, 0x64, 0x12, 0x19, 0x0a, 0x07, 0x61, 0x70, 0x70, 0x6c, 0x65, 0x49, 0x44, 0x18, 0x05, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x08, 0x61, 0x70, 0x70, 0x6c, 0x65, 0x5f, 0x69, 0x64, 0x22, 0x31, 0x0a,
	0x15, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x53, 0x6f, 0x63, 0x69, 0x61, 0x6c, 0x49, 0x44, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x73, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67,
	0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65,
	0x22, 0x3c, 0x0a, 0x1b, 0x55, 0x70, 0x6c, 0x6f, 0x61, 0x64, 0x50, 0x72, 0x6f, 0x66, 0x69, 0x6c,
	0x65, 0x50, 0x69, 0x63, 0x74, 0x75, 0x72, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12,
	0x1d, 0x0a, 0x09, 0x69, 0x6d, 0x61, 0x67, 0x65, 0x44, 0x61, 0x74, 0x61, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x0a, 0x69, 0x6d, 0x61, 0x67, 0x65, 0x5f, 0x64, 0x61, 0x74, 0x61, 0x22, 0x2c,
	0x0a, 0x11, 0x41, 0x63, 0x63, 0x65, 0x70, 0x74, 0x54, 0x65, 0x72, 0x6d, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x12, 0x17, 0x0a, 0x06, 0x75, 0x73, 0x65, 0x72, 0x49, 0x44, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x07, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x22, 0x4c, 0x0a, 0x11,
	0x43, 0x68, 0x65, 0x63, 0x6b, 0x54, 0x65, 0x72, 0x6d, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x12, 0x37, 0x0a, 0x08, 0x69, 0x73, 0x4c, 0x61, 0x74, 0x65, 0x73, 0x74, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x42, 0x6f, 0x6f, 0x6c, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x52,
	0x09, 0x69, 0x73, 0x5f, 0x6c, 0x61, 0x74, 0x65, 0x73, 0x74, 0x22, 0xce, 0x07, 0x0a, 0x0c, 0x50,
	0x44, 0x50, 0x41, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x4e, 0x0a, 0x13, 0x74,
	0x65, 0x72, 0x6d, 0x5f, 0x6c, 0x61, 0x74, 0x65, 0x73, 0x74, 0x5f, 0x76, 0x65, 0x72, 0x73, 0x69,
	0x6f, 0x6e, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1c, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c,
	0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x53, 0x74, 0x72, 0x69, 0x6e,
	0x67, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x52, 0x13, 0x74, 0x65, 0x72, 0x6d, 0x5f, 0x6c, 0x61, 0x74,
	0x65, 0x73, 0x74, 0x5f, 0x76, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x12, 0x62, 0x0a, 0x1d, 0x70,
	0x72, 0x69, 0x76, 0x61, 0x63, 0x79, 0x5f, 0x70, 0x6f, 0x6c, 0x69, 0x63, 0x79, 0x5f, 0x6c, 0x61,
	0x74, 0x65, 0x73, 0x74, 0x5f, 0x76, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x1c, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x62, 0x75, 0x66, 0x2e, 0x53, 0x74, 0x72, 0x69, 0x6e, 0x67, 0x56, 0x61, 0x6c, 0x75, 0x65,
	0x52, 0x1d, 0x70, 0x72, 0x69, 0x76, 0x61, 0x63, 0x79, 0x5f, 0x70, 0x6f, 0x6c, 0x69, 0x63, 0x79,
	0x5f, 0x6c, 0x61, 0x74, 0x65, 0x73, 0x74, 0x5f, 0x76, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x12,
	0x4a, 0x0a, 0x11, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x74, 0x65, 0x72, 0x6d, 0x5f, 0x76, 0x65, 0x72,
	0x73, 0x69, 0x6f, 0x6e, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1c, 0x2e, 0x67, 0x6f, 0x6f,
	0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x53, 0x74, 0x72,
	0x69, 0x6e, 0x67, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x52, 0x11, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x74,
	0x65, 0x72, 0x6d, 0x5f, 0x76, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x12, 0x50, 0x0a, 0x15, 0x75,
	0x73, 0x65, 0x72, 0x5f, 0x74, 0x65, 0x72, 0x6d, 0x5f, 0x61, 0x63, 0x63, 0x65, 0x70, 0x74, 0x5f,
	0x64, 0x61, 0x74, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f,
	0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d,
	0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x15, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x74, 0x65, 0x72,
	0x6d, 0x5f, 0x61, 0x63, 0x63, 0x65, 0x70, 0x74, 0x5f, 0x64, 0x61, 0x74, 0x65, 0x12, 0x5e, 0x0a,
	0x1b, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x70, 0x72, 0x69, 0x76, 0x61, 0x63, 0x79, 0x5f, 0x70, 0x6f,
	0x6c, 0x69, 0x63, 0x79, 0x5f, 0x76, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x18, 0x05, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x1c, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x62, 0x75, 0x66, 0x2e, 0x53, 0x74, 0x72, 0x69, 0x6e, 0x67, 0x56, 0x61, 0x6c, 0x75, 0x65,
	0x52, 0x1b, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x70, 0x72, 0x69, 0x76, 0x61, 0x63, 0x79, 0x5f, 0x70,
	0x6f, 0x6c, 0x69, 0x63, 0x79, 0x5f, 0x76, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x12, 0x5a, 0x0a,
	0x1a, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x70, 0x72, 0x69, 0x76, 0x61, 0x63, 0x79, 0x5f, 0x70, 0x6f,
	0x6c, 0x69, 0x63, 0x79, 0x5f, 0x61, 0x63, 0x63, 0x65, 0x70, 0x74, 0x18, 0x06, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x62, 0x75, 0x66, 0x2e, 0x42, 0x6f, 0x6f, 0x6c, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x52, 0x1a, 0x75,
	0x73, 0x65, 0x72, 0x5f, 0x70, 0x72, 0x69, 0x76, 0x61, 0x63, 0x79, 0x5f, 0x70, 0x6f, 0x6c, 0x69,
	0x63, 0x79, 0x5f, 0x61, 0x63, 0x63, 0x65, 0x70, 0x74, 0x12, 0x56, 0x0a, 0x18, 0x75, 0x73, 0x65,
	0x72, 0x5f, 0x70, 0x72, 0x69, 0x76, 0x61, 0x63, 0x79, 0x5f, 0x70, 0x6f, 0x6c, 0x69, 0x63, 0x79,
	0x5f, 0x64, 0x61, 0x74, 0x65, 0x18, 0x07, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f,
	0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69,
	0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x18, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x70, 0x72,
	0x69, 0x76, 0x61, 0x63, 0x79, 0x5f, 0x70, 0x6f, 0x6c, 0x69, 0x63, 0x79, 0x5f, 0x64, 0x61, 0x74,
	0x65, 0x12, 0x40, 0x0a, 0x0c, 0x74, 0x65, 0x72, 0x6d, 0x5f, 0x64, 0x65, 0x74, 0x61, 0x69, 0x6c,
	0x73, 0x18, 0x08, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1c, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65,
	0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x53, 0x74, 0x72, 0x69, 0x6e, 0x67,
	0x56, 0x61, 0x6c, 0x75, 0x65, 0x52, 0x0c, 0x74, 0x65, 0x72, 0x6d, 0x5f, 0x64, 0x65, 0x74, 0x61,
	0x69, 0x6c, 0x73, 0x12, 0x54, 0x0a, 0x16, 0x70, 0x72, 0x69, 0x76, 0x61, 0x63, 0x79, 0x5f, 0x70,
	0x6f, 0x6c, 0x69, 0x63, 0x79, 0x5f, 0x64, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x73, 0x18, 0x09, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x1c, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x53, 0x74, 0x72, 0x69, 0x6e, 0x67, 0x56, 0x61, 0x6c, 0x75,
	0x65, 0x52, 0x16, 0x70, 0x72, 0x69, 0x76, 0x61, 0x63, 0x79, 0x5f, 0x70, 0x6f, 0x6c, 0x69, 0x63,
	0x79, 0x5f, 0x64, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x73, 0x12, 0x54, 0x0a, 0x17, 0x74, 0x65, 0x72,
	0x6d, 0x5f, 0x6c, 0x61, 0x74, 0x65, 0x73, 0x74, 0x5f, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x5f,
	0x64, 0x61, 0x74, 0x65, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f,
	0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d,
	0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x17, 0x74, 0x65, 0x72, 0x6d, 0x5f, 0x6c, 0x61, 0x74,
	0x65, 0x73, 0x74, 0x5f, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x5f, 0x64, 0x61, 0x74, 0x65, 0x12,
	0x6a, 0x0a, 0x22, 0x70, 0x72, 0x69, 0x76, 0x61, 0x63, 0x79, 0x5f, 0x70, 0x6f, 0x6c, 0x69, 0x63,
	0x79, 0x5f, 0x6c, 0x61, 0x73, 0x74, 0x65, 0x73, 0x74, 0x5f, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65,
	0x5f, 0x64, 0x61, 0x74, 0x65, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f,
	0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69,
	0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x22, 0x70, 0x72, 0x69, 0x76, 0x61, 0x63, 0x79,
	0x5f, 0x70, 0x6f, 0x6c, 0x69, 0x63, 0x79, 0x5f, 0x6c, 0x61, 0x73, 0x74, 0x65, 0x73, 0x74, 0x5f,
	0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x5f, 0x64, 0x61, 0x74, 0x65, 0x22, 0x63, 0x0a, 0x14, 0x50,
	0x72, 0x69, 0x76, 0x61, 0x63, 0x79, 0x50, 0x6f, 0x6c, 0x69, 0x63, 0x79, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x12, 0x32, 0x0a, 0x06, 0x61, 0x63, 0x63, 0x65, 0x70, 0x74, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x42, 0x6f, 0x6f, 0x6c, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x52,
	0x06, 0x61, 0x63, 0x63, 0x65, 0x70, 0x74, 0x12, 0x17, 0x0a, 0x06, 0x75, 0x73, 0x65, 0x72, 0x49,
	0x44, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x69, 0x64,
	0x22, 0x8a, 0x01, 0x0a, 0x1c, 0x43, 0x68, 0x65, 0x63, 0x6b, 0x45, 0x6d, 0x61, 0x69, 0x6c, 0x48,
	0x61, 0x73, 0x41, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x12, 0x36, 0x0a, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x1c, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x62, 0x75, 0x66, 0x2e, 0x53, 0x74, 0x72, 0x69, 0x6e, 0x67, 0x56, 0x61, 0x6c, 0x75, 0x65,
	0x52, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x12, 0x32, 0x0a, 0x06, 0x72, 0x65, 0x73,
	0x75, 0x6c, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67,
	0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x42, 0x6f, 0x6f, 0x6c,
	0x56, 0x61, 0x6c, 0x75, 0x65, 0x52, 0x06, 0x72, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x22, 0x99, 0x01,
	0x0a, 0x20, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x43, 0x61, 0x6c, 0x65, 0x6e, 0x64, 0x61, 0x72, 0x4c,
	0x69, 0x6d, 0x69, 0x74, 0x45, 0x78, 0x63, 0x65, 0x65, 0x64, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x12, 0x36, 0x0a, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x1c, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x53, 0x74, 0x72, 0x69, 0x6e, 0x67, 0x56, 0x61, 0x6c, 0x75,
	0x65, 0x52, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x12, 0x3d, 0x0a, 0x06, 0x72, 0x65,
	0x73, 0x75, 0x6c, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x25, 0x2e, 0x45, 0x76, 0x65,
	0x6e, 0x74, 0x43, 0x61, 0x6c, 0x65, 0x6e, 0x64, 0x61, 0x72, 0x4c, 0x69, 0x6d, 0x69, 0x74, 0x45,
	0x78, 0x63, 0x65, 0x65, 0x64, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x42, 0x6f, 0x64,
	0x79, 0x52, 0x06, 0x72, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x22, 0x8f, 0x01, 0x0a, 0x24, 0x45, 0x76,
	0x65, 0x6e, 0x74, 0x43, 0x61, 0x6c, 0x65, 0x6e, 0x64, 0x61, 0x72, 0x4c, 0x69, 0x6d, 0x69, 0x74,
	0x45, 0x78, 0x63, 0x65, 0x65, 0x64, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x42, 0x6f,
	0x64, 0x79, 0x12, 0x32, 0x0a, 0x06, 0x65, 0x78, 0x63, 0x65, 0x65, 0x64, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x62, 0x75, 0x66, 0x2e, 0x42, 0x6f, 0x6f, 0x6c, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x52, 0x06,
	0x65, 0x78, 0x63, 0x65, 0x65, 0x64, 0x12, 0x33, 0x0a, 0x06, 0x61, 0x6d, 0x6f, 0x75, 0x6e, 0x74,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1b, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x49, 0x6e, 0x74, 0x33, 0x32, 0x56, 0x61,
	0x6c, 0x75, 0x65, 0x52, 0x06, 0x61, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x22, 0x39, 0x0a, 0x11, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x4f, 0x74, 0x70, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x12, 0x10, 0x0a, 0x03, 0x74, 0x65, 0x6c, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x74,
	0x65, 0x6c, 0x12, 0x12, 0x0a, 0x04, 0x74, 0x79, 0x70, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x04, 0x74, 0x79, 0x70, 0x65, 0x22, 0xcf, 0x01, 0x0a, 0x0e, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x4f, 0x74, 0x70, 0x44, 0x61, 0x74, 0x61, 0x12, 0x3a, 0x0a, 0x09, 0x72, 0x65, 0x66,
	0x65, 0x72, 0x65, 0x6e, 0x63, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1c, 0x2e, 0x67,
	0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x53,
	0x74, 0x72, 0x69, 0x6e, 0x67, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x52, 0x09, 0x72, 0x65, 0x66, 0x65,
	0x72, 0x65, 0x6e, 0x63, 0x65, 0x12, 0x44, 0x0a, 0x0e, 0x72, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x65, 0x64, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1b, 0x2e,
	0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e,
	0x49, 0x6e, 0x74, 0x33, 0x32, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x52, 0x0f, 0x72, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x65, 0x64, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x73, 0x12, 0x3b, 0x0a, 0x09, 0x63,
	0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1c,
	0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66,
	0x2e, 0x53, 0x74, 0x72, 0x69, 0x6e, 0x67, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x52, 0x0a, 0x63, 0x72,
	0x65, 0x61, 0x74, 0x65, 0x64, 0x5f, 0x61, 0x74, 0x22, 0x46, 0x0a, 0x0d, 0x56, 0x65, 0x72, 0x69,
	0x66, 0x79, 0x4f, 0x74, 0x70, 0x44, 0x61, 0x74, 0x61, 0x12, 0x35, 0x0a, 0x07, 0x69, 0x73, 0x56,
	0x61, 0x6c, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f,
	0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x42, 0x6f, 0x6f,
	0x6c, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x52, 0x08, 0x69, 0x73, 0x5f, 0x76, 0x61, 0x6c, 0x69, 0x64,
	0x22, 0x53, 0x0a, 0x12, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x4f, 0x74, 0x70, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67,
	0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65,
	0x12, 0x23, 0x0a, 0x04, 0x64, 0x61, 0x74, 0x61, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0f,
	0x2e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x4f, 0x74, 0x70, 0x44, 0x61, 0x74, 0x61, 0x52,
	0x04, 0x64, 0x61, 0x74, 0x61, 0x22, 0x68, 0x0a, 0x10, 0x56, 0x65, 0x72, 0x69, 0x66, 0x79, 0x4f,
	0x74, 0x70, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x10, 0x0a, 0x03, 0x74, 0x65, 0x6c,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x74, 0x65, 0x6c, 0x12, 0x12, 0x0a, 0x04, 0x74,
	0x79, 0x70, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x74, 0x79, 0x70, 0x65, 0x12,
	0x1c, 0x0a, 0x09, 0x72, 0x65, 0x66, 0x65, 0x72, 0x65, 0x6e, 0x63, 0x65, 0x18, 0x03, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x09, 0x72, 0x65, 0x66, 0x65, 0x72, 0x65, 0x6e, 0x63, 0x65, 0x12, 0x10, 0x0a,
	0x03, 0x6f, 0x74, 0x70, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6f, 0x74, 0x70, 0x22,
	0x55, 0x0a, 0x11, 0x56, 0x65, 0x72, 0x69, 0x66, 0x79, 0x4f, 0x74, 0x70, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x12, 0x26,
	0x0a, 0x06, 0x72, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0e,
	0x2e, 0x56, 0x65, 0x72, 0x69, 0x66, 0x79, 0x4f, 0x74, 0x70, 0x44, 0x61, 0x74, 0x61, 0x52, 0x06,
	0x72, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x22, 0x6d, 0x0a, 0x1f, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x4f, 0x74, 0x70, 0x4f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x54, 0x6f, 0x6f,
	0x6c, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x6d, 0x65, 0x73,
	0x73, 0x61, 0x67, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x6d, 0x65, 0x73, 0x73,
	0x61, 0x67, 0x65, 0x12, 0x30, 0x0a, 0x04, 0x64, 0x61, 0x74, 0x61, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x1c, 0x2e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x4f, 0x74, 0x70, 0x44, 0x61,
	0x74, 0x61, 0x4f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x54, 0x6f, 0x6f, 0x6c, 0x52,
	0x04, 0x64, 0x61, 0x74, 0x61, 0x22, 0xc6, 0x01, 0x0a, 0x1b, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x4f, 0x74, 0x70, 0x44, 0x61, 0x74, 0x61, 0x4f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x69, 0x6f,
	0x6e, 0x54, 0x6f, 0x6f, 0x6c, 0x12, 0x3a, 0x0a, 0x09, 0x72, 0x65, 0x66, 0x65, 0x72, 0x65, 0x6e,
	0x63, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1c, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c,
	0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x53, 0x74, 0x72, 0x69, 0x6e,
	0x67, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x52, 0x09, 0x72, 0x65, 0x66, 0x65, 0x72, 0x65, 0x6e, 0x63,
	0x65, 0x12, 0x2e, 0x0a, 0x03, 0x6f, 0x74, 0x70, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1c,
	0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66,
	0x2e, 0x53, 0x74, 0x72, 0x69, 0x6e, 0x67, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x52, 0x03, 0x6f, 0x74,
	0x70, 0x12, 0x3b, 0x0a, 0x09, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x18, 0x03,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x1c, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x53, 0x74, 0x72, 0x69, 0x6e, 0x67, 0x56, 0x61, 0x6c,
	0x75, 0x65, 0x52, 0x0a, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x5f, 0x61, 0x74, 0x22, 0x17,
	0x0a, 0x15, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x55, 0x73, 0x65, 0x72, 0x54, 0x65, 0x6d, 0x70,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x22, 0x32, 0x0a, 0x16, 0x44, 0x65, 0x6c, 0x65, 0x74,
	0x65, 0x55, 0x73, 0x65, 0x72, 0x54, 0x65, 0x6d, 0x70, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x12, 0x18, 0x0a, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x22, 0x3e, 0x0a, 0x16, 0x56,
	0x65, 0x72, 0x69, 0x66, 0x79, 0x50, 0x61, 0x72, 0x74, 0x6e, 0x65, 0x72, 0x49, 0x44, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x02, 0x69, 0x64, 0x12, 0x14, 0x0a, 0x05, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x22, 0x8b, 0x01, 0x0a, 0x17,
	0x56, 0x65, 0x72, 0x69, 0x66, 0x79, 0x50, 0x61, 0x72, 0x74, 0x6e, 0x65, 0x72, 0x49, 0x44, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x6d,
	0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x6d, 0x65,
	0x73, 0x73, 0x61, 0x67, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x61, 0x6c, 0x6c, 0x6f, 0x77, 0x65, 0x64,
	0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x61, 0x6c, 0x6c, 0x6f, 0x77, 0x65, 0x64, 0x12,
	0x28, 0x0a, 0x06, 0x72, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x10, 0x2e, 0x55, 0x73, 0x65, 0x72, 0x53, 0x75, 0x62, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x65,
	0x64, 0x52, 0x06, 0x72, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x22, 0x86, 0x02, 0x0a, 0x0f, 0x55, 0x73,
	0x65, 0x72, 0x53, 0x75, 0x62, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x65, 0x64, 0x12, 0x16, 0x0a,
	0x09, 0x52, 0x65, 0x66, 0x65, 0x72, 0x65, 0x6e, 0x63, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x03, 0x72, 0x65, 0x66, 0x12, 0x18, 0x0a, 0x04, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x0a, 0x66, 0x69, 0x72, 0x73, 0x74, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x12,
	0x1b, 0x0a, 0x08, 0x4c, 0x61, 0x73, 0x74, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x09, 0x6c, 0x61, 0x73, 0x74, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x14, 0x0a, 0x05,
	0x45, 0x6d, 0x61, 0x69, 0x6c, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x65, 0x6d, 0x61,
	0x69, 0x6c, 0x12, 0x16, 0x0a, 0x03, 0x54, 0x65, 0x6c, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x09, 0x6d, 0x6f, 0x62, 0x69, 0x6c, 0x65, 0x5f, 0x6e, 0x6f, 0x12, 0x1b, 0x0a, 0x06, 0x53, 0x6f,
	0x75, 0x72, 0x63, 0x65, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x72, 0x65, 0x67, 0x69,
	0x73, 0x74, 0x65, 0x72, 0x5f, 0x62, 0x79, 0x12, 0x1f, 0x0a, 0x08, 0x49, 0x6d, 0x61, 0x67, 0x65,
	0x55, 0x52, 0x4c, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0d, 0x70, 0x72, 0x6f, 0x66, 0x69,
	0x6c, 0x65, 0x5f, 0x69, 0x6d, 0x61, 0x67, 0x65, 0x12, 0x38, 0x0a, 0x16, 0x50, 0x61, 0x72, 0x74,
	0x6e, 0x65, 0x72, 0x52, 0x65, 0x66, 0x65, 0x72, 0x65, 0x6e, 0x63, 0x65, 0x4e, 0x75, 0x6d, 0x62,
	0x65, 0x72, 0x18, 0x08, 0x20, 0x01, 0x28, 0x09, 0x52, 0x18, 0x70, 0x61, 0x72, 0x74, 0x6e, 0x65,
	0x72, 0x5f, 0x72, 0x65, 0x66, 0x65, 0x72, 0x65, 0x6e, 0x63, 0x65, 0x5f, 0x6e, 0x75, 0x6d, 0x62,
	0x65, 0x72, 0x22, 0x35, 0x0a, 0x05, 0x45, 0x72, 0x72, 0x6f, 0x72, 0x12, 0x12, 0x0a, 0x04, 0x63,
	0x6f, 0x64, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x12,
	0x18, 0x0a, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x22, 0x23, 0x0a, 0x0f, 0x47, 0x65, 0x74,
	0x42, 0x79, 0x54, 0x65, 0x6c, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x10, 0x0a, 0x03,
	0x74, 0x65, 0x6c, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x74, 0x65, 0x6c, 0x22, 0x53,
	0x0a, 0x12, 0x55, 0x73, 0x65, 0x72, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x12, 0x1f, 0x0a, 0x04, 0x64, 0x61, 0x74, 0x61, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x0b, 0x2e, 0x55, 0x73, 0x65, 0x72, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x52,
	0x04, 0x64, 0x61, 0x74, 0x61, 0x12, 0x1c, 0x0a, 0x05, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x06, 0x2e, 0x45, 0x72, 0x72, 0x6f, 0x72, 0x52, 0x05, 0x65, 0x72,
	0x72, 0x6f, 0x72, 0x22, 0x5a, 0x0a, 0x14, 0x55, 0x73, 0x65, 0x72, 0x73, 0x49, 0x6e, 0x74, 0x65,
	0x72, 0x65, 0x73, 0x74, 0x52, 0x65, 0x71, 0x4c, 0x69, 0x73, 0x74, 0x12, 0x42, 0x0a, 0x11, 0x75,
	0x73, 0x65, 0x72, 0x73, 0x49, 0x6e, 0x74, 0x65, 0x72, 0x65, 0x73, 0x74, 0x4c, 0x69, 0x73, 0x74,
	0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x14, 0x2e, 0x55, 0x73, 0x65, 0x72, 0x49, 0x6e, 0x74,
	0x65, 0x72, 0x65, 0x73, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x52, 0x11, 0x75, 0x73,
	0x65, 0x72, 0x73, 0x49, 0x6e, 0x74, 0x65, 0x72, 0x65, 0x73, 0x74, 0x4c, 0x69, 0x73, 0x74, 0x22,
	0x78, 0x0a, 0x1a, 0x55, 0x73, 0x65, 0x72, 0x73, 0x49, 0x6e, 0x74, 0x65, 0x72, 0x65, 0x73, 0x74,
	0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x52, 0x65, 0x71, 0x4c, 0x69, 0x73, 0x74, 0x12, 0x5a, 0x0a,
	0x1a, 0x75, 0x73, 0x65, 0x72, 0x73, 0x49, 0x6e, 0x74, 0x65, 0x72, 0x65, 0x73, 0x74, 0x55, 0x70,
	0x64, 0x61, 0x74, 0x65, 0x52, 0x65, 0x71, 0x4c, 0x69, 0x73, 0x74, 0x18, 0x01, 0x20, 0x03, 0x28,
	0x0b, 0x32, 0x1a, 0x2e, 0x55, 0x73, 0x65, 0x72, 0x49, 0x6e, 0x74, 0x65, 0x72, 0x65, 0x73, 0x74,
	0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x52, 0x1a, 0x75,
	0x73, 0x65, 0x72, 0x73, 0x49, 0x6e, 0x74, 0x65, 0x72, 0x65, 0x73, 0x74, 0x55, 0x70, 0x64, 0x61,
	0x74, 0x65, 0x52, 0x65, 0x71, 0x4c, 0x69, 0x73, 0x74, 0x22, 0x61, 0x0a, 0x14, 0x55, 0x73, 0x65,
	0x72, 0x73, 0x49, 0x6e, 0x74, 0x65, 0x72, 0x65, 0x73, 0x74, 0x52, 0x65, 0x73, 0x4c, 0x69, 0x73,
	0x74, 0x12, 0x49, 0x0a, 0x14, 0x75, 0x73, 0x65, 0x72, 0x73, 0x49, 0x6e, 0x74, 0x65, 0x72, 0x65,
	0x73, 0x74, 0x52, 0x65, 0x73, 0x4c, 0x69, 0x73, 0x74, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32,
	0x15, 0x2e, 0x55, 0x73, 0x65, 0x72, 0x49, 0x6e, 0x74, 0x65, 0x72, 0x65, 0x73, 0x74, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x52, 0x14, 0x75, 0x73, 0x65, 0x72, 0x73, 0x49, 0x6e, 0x74,
	0x65, 0x72, 0x65, 0x73, 0x74, 0x52, 0x65, 0x73, 0x4c, 0x69, 0x73, 0x74, 0x22, 0xa0, 0x01, 0x0a,
	0x13, 0x55, 0x73, 0x65, 0x72, 0x49, 0x6e, 0x74, 0x65, 0x72, 0x65, 0x73, 0x74, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x12, 0x2c, 0x0a, 0x10, 0x74, 0x79, 0x70, 0x65, 0x55, 0x73, 0x65, 0x72,
	0x49, 0x6e, 0x74, 0x65, 0x72, 0x65, 0x73, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x12,
	0x74, 0x79, 0x70, 0x65, 0x5f, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x69, 0x6e, 0x74, 0x65, 0x72, 0x65,
	0x73, 0x74, 0x12, 0x1f, 0x0a, 0x0a, 0x63, 0x61, 0x6d, 0x70, 0x61, 0x69, 0x67, 0x6e, 0x49, 0x64,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x63, 0x61, 0x6d, 0x70, 0x61, 0x69, 0x67, 0x6e,
	0x5f, 0x69, 0x64, 0x12, 0x17, 0x0a, 0x06, 0x75, 0x73, 0x65, 0x72, 0x49, 0x64, 0x18, 0x03, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x07, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x12, 0x21, 0x0a, 0x0c,
	0x69, 0x6e, 0x74, 0x65, 0x72, 0x65, 0x73, 0x74, 0x5f, 0x69, 0x64, 0x73, 0x18, 0x04, 0x20, 0x03,
	0x28, 0x09, 0x52, 0x0b, 0x69, 0x6e, 0x74, 0x65, 0x72, 0x65, 0x73, 0x74, 0x49, 0x64, 0x73, 0x22,
	0xb6, 0x01, 0x0a, 0x19, 0x55, 0x73, 0x65, 0x72, 0x49, 0x6e, 0x74, 0x65, 0x72, 0x65, 0x73, 0x74,
	0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x0e, 0x0a,
	0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x12, 0x2c, 0x0a,
	0x10, 0x74, 0x79, 0x70, 0x65, 0x55, 0x73, 0x65, 0x72, 0x49, 0x6e, 0x74, 0x65, 0x72, 0x65, 0x73,
	0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x12, 0x74, 0x79, 0x70, 0x65, 0x5f, 0x75, 0x73,
	0x65, 0x72, 0x5f, 0x69, 0x6e, 0x74, 0x65, 0x72, 0x65, 0x73, 0x74, 0x12, 0x1f, 0x0a, 0x0a, 0x63,
	0x61, 0x6d, 0x70, 0x61, 0x69, 0x67, 0x6e, 0x49, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x0b, 0x63, 0x61, 0x6d, 0x70, 0x61, 0x69, 0x67, 0x6e, 0x5f, 0x69, 0x64, 0x12, 0x17, 0x0a, 0x06,
	0x75, 0x73, 0x65, 0x72, 0x49, 0x64, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x75, 0x73,
	0x65, 0x72, 0x5f, 0x69, 0x64, 0x12, 0x21, 0x0a, 0x0c, 0x69, 0x6e, 0x74, 0x65, 0x72, 0x65, 0x73,
	0x74, 0x5f, 0x69, 0x64, 0x73, 0x18, 0x05, 0x20, 0x03, 0x28, 0x09, 0x52, 0x0b, 0x69, 0x6e, 0x74,
	0x65, 0x72, 0x65, 0x73, 0x74, 0x49, 0x64, 0x73, 0x22, 0x20, 0x0a, 0x0c, 0x49, 0x6e, 0x74, 0x65,
	0x72, 0x65, 0x73, 0x74, 0x4c, 0x69, 0x73, 0x74, 0x12, 0x10, 0x0a, 0x03, 0x69, 0x64, 0x73, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x69, 0x64, 0x73, 0x22, 0xa3, 0x02, 0x0a, 0x14, 0x55,
	0x73, 0x65, 0x72, 0x49, 0x6e, 0x74, 0x65, 0x72, 0x65, 0x73, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x02, 0x69, 0x64, 0x12, 0x2c, 0x0a, 0x10, 0x74, 0x79, 0x70, 0x65, 0x55, 0x73, 0x65, 0x72, 0x49,
	0x6e, 0x74, 0x65, 0x72, 0x65, 0x73, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x12, 0x74,
	0x79, 0x70, 0x65, 0x5f, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x69, 0x6e, 0x74, 0x65, 0x72, 0x65, 0x73,
	0x74, 0x12, 0x1f, 0x0a, 0x0a, 0x63, 0x61, 0x6d, 0x70, 0x61, 0x69, 0x67, 0x6e, 0x49, 0x64, 0x18,
	0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x63, 0x61, 0x6d, 0x70, 0x61, 0x69, 0x67, 0x6e, 0x5f,
	0x69, 0x64, 0x12, 0x17, 0x0a, 0x06, 0x75, 0x73, 0x65, 0x72, 0x49, 0x64, 0x18, 0x04, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x07, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x12, 0x3a, 0x0a, 0x0a, 0x63,
	0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x5f, 0x61, 0x74, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75,
	0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x0a, 0x63, 0x72, 0x65,
	0x61, 0x74, 0x65, 0x64, 0x5f, 0x61, 0x74, 0x12, 0x3a, 0x0a, 0x0a, 0x75, 0x70, 0x64, 0x61, 0x74,
	0x65, 0x64, 0x5f, 0x61, 0x74, 0x18, 0x06, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f,
	0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69,
	0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x0a, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64,
	0x5f, 0x61, 0x74, 0x12, 0x1b, 0x0a, 0x05, 0x69, 0x74, 0x65, 0x6d, 0x73, 0x18, 0x07, 0x20, 0x03,
	0x28, 0x0b, 0x32, 0x05, 0x2e, 0x49, 0x74, 0x65, 0x6d, 0x52, 0x05, 0x69, 0x74, 0x65, 0x6d, 0x73,
	0x22, 0x60, 0x0a, 0x0c, 0x49, 0x6e, 0x74, 0x65, 0x72, 0x65, 0x73, 0x74, 0x49, 0x74, 0x65, 0x6d,
	0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x64,
	0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04,
	0x6e, 0x61, 0x6d, 0x65, 0x12, 0x17, 0x0a, 0x06, 0x6e, 0x61, 0x6d, 0x65, 0x45, 0x6e, 0x18, 0x03,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x6e, 0x61, 0x6d, 0x65, 0x5f, 0x65, 0x6e, 0x12, 0x13, 0x0a,
	0x04, 0x67, 0x61, 0x49, 0x64, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x67, 0x61, 0x5f,
	0x69, 0x64, 0x22, 0x37, 0x0a, 0x10, 0x49, 0x6e, 0x74, 0x65, 0x72, 0x65, 0x73, 0x74, 0x49, 0x74,
	0x65, 0x6d, 0x4c, 0x69, 0x73, 0x74, 0x12, 0x23, 0x0a, 0x05, 0x69, 0x74, 0x65, 0x6d, 0x73, 0x18,
	0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x0d, 0x2e, 0x49, 0x6e, 0x74, 0x65, 0x72, 0x65, 0x73, 0x74,
	0x49, 0x74, 0x65, 0x6d, 0x52, 0x05, 0x69, 0x74, 0x65, 0x6d, 0x73, 0x22, 0x58, 0x0a, 0x04, 0x49,
	0x74, 0x65, 0x6d, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52,
	0x02, 0x69, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x17, 0x0a, 0x07, 0x6e, 0x61, 0x6d, 0x65, 0x5f,
	0x65, 0x6e, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x6e, 0x61, 0x6d, 0x65, 0x45, 0x6e,
	0x12, 0x13, 0x0a, 0x05, 0x67, 0x61, 0x5f, 0x69, 0x64, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x04, 0x67, 0x61, 0x49, 0x64, 0x22, 0x66, 0x0a, 0x1b, 0x55, 0x73, 0x65, 0x72, 0x49, 0x6e, 0x74,
	0x65, 0x72, 0x65, 0x73, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x12, 0x29, 0x0a, 0x04, 0x64, 0x61, 0x74, 0x61, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x15, 0x2e, 0x55, 0x73, 0x65, 0x72, 0x49, 0x6e, 0x74, 0x65, 0x72, 0x65, 0x73,
	0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x52, 0x04, 0x64, 0x61, 0x74, 0x61, 0x12,
	0x1c, 0x0a, 0x05, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x06,
	0x2e, 0x45, 0x72, 0x72, 0x6f, 0x72, 0x52, 0x05, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x32, 0xe8, 0x11,
	0x0a, 0x04, 0x55, 0x73, 0x65, 0x72, 0x12, 0x30, 0x0a, 0x08, 0x52, 0x65, 0x67, 0x69, 0x73, 0x74,
	0x65, 0x72, 0x12, 0x10, 0x2e, 0x52, 0x65, 0x67, 0x69, 0x73, 0x74, 0x65, 0x72, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x1a, 0x10, 0x2e, 0x53, 0x75, 0x63, 0x63, 0x65, 0x73, 0x73, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x50, 0x0a, 0x18, 0x52, 0x65, 0x67, 0x69,
	0x73, 0x74, 0x65, 0x72, 0x57, 0x69, 0x74, 0x68, 0x4d, 0x6f, 0x62, 0x69, 0x6c, 0x65, 0x4e, 0x75,
	0x6d, 0x62, 0x65, 0x72, 0x12, 0x20, 0x2e, 0x52, 0x65, 0x67, 0x69, 0x73, 0x74, 0x65, 0x72, 0x57,
	0x69, 0x74, 0x68, 0x4d, 0x6f, 0x62, 0x69, 0x6c, 0x65, 0x4e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x10, 0x2e, 0x53, 0x75, 0x63, 0x63, 0x65, 0x73, 0x73,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x56, 0x0a, 0x1b, 0x52, 0x65,
	0x67, 0x69, 0x73, 0x74, 0x65, 0x72, 0x57, 0x69, 0x74, 0x68, 0x4d, 0x6f, 0x62, 0x69, 0x6c, 0x65,
	0x4e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x41, 0x69, 0x73, 0x12, 0x23, 0x2e, 0x52, 0x65, 0x67, 0x69,
	0x73, 0x74, 0x65, 0x72, 0x57, 0x69, 0x74, 0x68, 0x4d, 0x6f, 0x62, 0x69, 0x6c, 0x65, 0x4e, 0x75,
	0x6d, 0x62, 0x65, 0x72, 0x41, 0x69, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x10,
	0x2e, 0x53, 0x75, 0x63, 0x63, 0x65, 0x73, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x22, 0x00, 0x12, 0x27, 0x0a, 0x07, 0x50, 0x72, 0x6f, 0x66, 0x69, 0x6c, 0x65, 0x12, 0x0d, 0x2e,
	0x45, 0x6d, 0x70, 0x74, 0x79, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x0b, 0x2e, 0x55,
	0x73, 0x65, 0x72, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x22, 0x00, 0x12, 0x35, 0x0a, 0x0a, 0x56,
	0x65, 0x72, 0x69, 0x66, 0x79, 0x55, 0x73, 0x65, 0x72, 0x12, 0x12, 0x2e, 0x56, 0x65, 0x72, 0x69,
	0x66, 0x79, 0x55, 0x73, 0x65, 0x72, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x13, 0x2e,
	0x56, 0x65, 0x72, 0x69, 0x66, 0x79, 0x55, 0x73, 0x65, 0x72, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x12, 0x37, 0x0a, 0x14, 0x41, 0x75, 0x74, 0x6f, 0x52, 0x65, 0x67, 0x69, 0x73, 0x74,
	0x65, 0x72, 0x42, 0x79, 0x53, 0x6f, 0x63, 0x69, 0x61, 0x6c, 0x12, 0x0e, 0x2e, 0x53, 0x6f, 0x63,
	0x69, 0x61, 0x6c, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x0f, 0x2e, 0x53, 0x6f, 0x63,
	0x69, 0x61, 0x6c, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x40, 0x0a, 0x0e, 0x55,
	0x70, 0x64, 0x61, 0x74, 0x65, 0x53, 0x6f, 0x63, 0x69, 0x61, 0x6c, 0x49, 0x44, 0x12, 0x16, 0x2e,
	0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x53, 0x6f, 0x63, 0x69, 0x61, 0x6c, 0x49, 0x44, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x16, 0x2e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x53, 0x6f,
	0x63, 0x69, 0x61, 0x6c, 0x49, 0x44, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x73, 0x65, 0x12, 0x38, 0x0a,
	0x0d, 0x52, 0x65, 0x73, 0x65, 0x74, 0x50, 0x61, 0x73, 0x73, 0x77, 0x6f, 0x72, 0x64, 0x12, 0x15,
	0x2e, 0x52, 0x65, 0x73, 0x65, 0x74, 0x50, 0x61, 0x73, 0x73, 0x77, 0x6f, 0x72, 0x64, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x10, 0x2e, 0x53, 0x75, 0x63, 0x63, 0x65, 0x73, 0x73, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x4d, 0x0a, 0x12, 0x52, 0x65, 0x73, 0x65, 0x74,
	0x50, 0x61, 0x73, 0x73, 0x77, 0x6f, 0x72, 0x64, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x12, 0x1a, 0x2e,
	0x52, 0x65, 0x73, 0x65, 0x74, 0x50, 0x61, 0x73, 0x73, 0x77, 0x6f, 0x72, 0x64, 0x54, 0x6f, 0x6b,
	0x65, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x1b, 0x2e, 0x52, 0x65, 0x73, 0x65,
	0x74, 0x50, 0x61, 0x73, 0x73, 0x77, 0x6f, 0x72, 0x64, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x44, 0x0a, 0x13, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65,
	0x52, 0x65, 0x73, 0x65, 0x74, 0x50, 0x61, 0x73, 0x73, 0x77, 0x6f, 0x72, 0x64, 0x12, 0x1b, 0x2e,
	0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x52, 0x65, 0x73, 0x65, 0x74, 0x50, 0x61, 0x73, 0x73, 0x77,
	0x6f, 0x72, 0x64, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x10, 0x2e, 0x53, 0x75, 0x63,
	0x63, 0x65, 0x73, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x38, 0x0a, 0x0d,
	0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x50, 0x72, 0x6f, 0x66, 0x69, 0x6c, 0x65, 0x12, 0x15, 0x2e,
	0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x50, 0x72, 0x6f, 0x66, 0x69, 0x6c, 0x65, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x1a, 0x10, 0x2e, 0x53, 0x75, 0x63, 0x63, 0x65, 0x73, 0x73, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x46, 0x0a, 0x14, 0x55, 0x70, 0x6c, 0x6f, 0x61, 0x64,
	0x50, 0x72, 0x6f, 0x66, 0x69, 0x6c, 0x65, 0x50, 0x69, 0x63, 0x74, 0x75, 0x72, 0x65, 0x12, 0x1c,
	0x2e, 0x55, 0x70, 0x6c, 0x6f, 0x61, 0x64, 0x50, 0x72, 0x6f, 0x66, 0x69, 0x6c, 0x65, 0x50, 0x69,
	0x63, 0x74, 0x75, 0x72, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x10, 0x2e, 0x53,
	0x75, 0x63, 0x63, 0x65, 0x73, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x41,
	0x0a, 0x16, 0x52, 0x65, 0x73, 0x65, 0x6e, 0x64, 0x56, 0x65, 0x72, 0x69, 0x66, 0x79, 0x42, 0x79,
	0x4f, 0x6c, 0x64, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x12, 0x12, 0x2e, 0x56, 0x65, 0x72, 0x69, 0x66,
	0x79, 0x55, 0x73, 0x65, 0x72, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x13, 0x2e, 0x56,
	0x65, 0x72, 0x69, 0x66, 0x79, 0x55, 0x73, 0x65, 0x72, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x12, 0x3a, 0x0a, 0x0c, 0x52, 0x65, 0x73, 0x65, 0x6e, 0x64, 0x76, 0x65, 0x72, 0x69, 0x66,
	0x79, 0x12, 0x15, 0x2e, 0x52, 0x65, 0x73, 0x65, 0x74, 0x50, 0x61, 0x73, 0x73, 0x77, 0x6f, 0x72,
	0x64, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x13, 0x2e, 0x56, 0x65, 0x72, 0x69, 0x66,
	0x79, 0x55, 0x73, 0x65, 0x72, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x2e, 0x0a,
	0x09, 0x43, 0x68, 0x65, 0x63, 0x6b, 0x54, 0x65, 0x72, 0x6d, 0x12, 0x0d, 0x2e, 0x45, 0x6d, 0x70,
	0x74, 0x79, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x12, 0x2e, 0x43, 0x68, 0x65, 0x63,
	0x6b, 0x54, 0x65, 0x72, 0x6d, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x2d, 0x0a,
	0x0a, 0x41, 0x63, 0x63, 0x65, 0x70, 0x74, 0x54, 0x65, 0x72, 0x6d, 0x12, 0x0d, 0x2e, 0x45, 0x6d,
	0x70, 0x74, 0x79, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x10, 0x2e, 0x53, 0x75, 0x63,
	0x63, 0x65, 0x73, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x30, 0x0a, 0x0d,
	0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x0d, 0x2e,
	0x45, 0x6d, 0x70, 0x74, 0x79, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x10, 0x2e, 0x53,
	0x75, 0x63, 0x63, 0x65, 0x73, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x34,
	0x0a, 0x11, 0x54, 0x72, 0x69, 0x67, 0x67, 0x65, 0x72, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x54,
	0x65, 0x6d, 0x70, 0x12, 0x0d, 0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x1a, 0x10, 0x2e, 0x53, 0x75, 0x63, 0x63, 0x65, 0x73, 0x73, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x12, 0x27, 0x0a, 0x07, 0x47, 0x65, 0x74, 0x50, 0x64, 0x70, 0x61, 0x12,
	0x0d, 0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x0d,
	0x2e, 0x50, 0x44, 0x50, 0x41, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x3e, 0x0a,
	0x13, 0x41, 0x63, 0x63, 0x65, 0x70, 0x74, 0x50, 0x72, 0x69, 0x76, 0x61, 0x63, 0x79, 0x50, 0x6f,
	0x6c, 0x69, 0x63, 0x79, 0x12, 0x15, 0x2e, 0x50, 0x72, 0x69, 0x76, 0x61, 0x63, 0x79, 0x50, 0x6f,
	0x6c, 0x69, 0x63, 0x79, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x10, 0x2e, 0x53, 0x75,
	0x63, 0x63, 0x65, 0x73, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x44, 0x0a,
	0x14, 0x43, 0x68, 0x65, 0x63, 0x6b, 0x45, 0x6d, 0x61, 0x69, 0x6c, 0x48, 0x61, 0x73, 0x41, 0x64,
	0x64, 0x72, 0x65, 0x73, 0x73, 0x12, 0x0d, 0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x1a, 0x1d, 0x2e, 0x43, 0x68, 0x65, 0x63, 0x6b, 0x45, 0x6d, 0x61, 0x69,
	0x6c, 0x48, 0x61, 0x73, 0x41, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x12, 0x4c, 0x0a, 0x18, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x43, 0x61, 0x6c, 0x65,
	0x6e, 0x64, 0x61, 0x72, 0x4c, 0x69, 0x6d, 0x69, 0x74, 0x45, 0x78, 0x63, 0x65, 0x65, 0x64, 0x12,
	0x0d, 0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x21,
	0x2e, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x43, 0x61, 0x6c, 0x65, 0x6e, 0x64, 0x61, 0x72, 0x4c, 0x69,
	0x6d, 0x69, 0x74, 0x45, 0x78, 0x63, 0x65, 0x65, 0x64, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x12, 0x35, 0x0a, 0x0a, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x4f, 0x74, 0x70, 0x12,
	0x12, 0x2e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x4f, 0x74, 0x70, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x1a, 0x13, 0x2e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x4f, 0x74, 0x70,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x32, 0x0a, 0x09, 0x56, 0x65, 0x72, 0x69,
	0x66, 0x79, 0x4f, 0x74, 0x70, 0x12, 0x11, 0x2e, 0x56, 0x65, 0x72, 0x69, 0x66, 0x79, 0x4f, 0x74,
	0x70, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x12, 0x2e, 0x56, 0x65, 0x72, 0x69, 0x66,
	0x79, 0x4f, 0x74, 0x70, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x4f, 0x0a, 0x17,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x4f, 0x74, 0x70, 0x4f, 0x70, 0x65, 0x72, 0x61, 0x74,
	0x69, 0x6f, 0x6e, 0x54, 0x6f, 0x6f, 0x6c, 0x12, 0x12, 0x2e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x4f, 0x74, 0x70, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x20, 0x2e, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x4f, 0x74, 0x70, 0x4f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x69, 0x6f,
	0x6e, 0x54, 0x6f, 0x6f, 0x6c, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x41, 0x0a,
	0x0e, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x55, 0x73, 0x65, 0x72, 0x54, 0x65, 0x6d, 0x70, 0x12,
	0x16, 0x2e, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x55, 0x73, 0x65, 0x72, 0x54, 0x65, 0x6d, 0x70,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x17, 0x2e, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65,
	0x55, 0x73, 0x65, 0x72, 0x54, 0x65, 0x6d, 0x70, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x12, 0x31, 0x0a, 0x08, 0x47, 0x65, 0x74, 0x62, 0x79, 0x74, 0x65, 0x6c, 0x12, 0x10, 0x2e, 0x47,
	0x65, 0x74, 0x42, 0x79, 0x54, 0x65, 0x6c, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x13,
	0x2e, 0x55, 0x73, 0x65, 0x72, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x12, 0x44, 0x0a, 0x0f, 0x56, 0x65, 0x72, 0x69, 0x66, 0x79, 0x50, 0x61, 0x72,
	0x74, 0x6e, 0x65, 0x72, 0x49, 0x44, 0x12, 0x17, 0x2e, 0x56, 0x65, 0x72, 0x69, 0x66, 0x79, 0x50,
	0x61, 0x72, 0x74, 0x6e, 0x65, 0x72, 0x49, 0x44, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a,
	0x18, 0x2e, 0x56, 0x65, 0x72, 0x69, 0x66, 0x79, 0x50, 0x61, 0x72, 0x74, 0x6e, 0x65, 0x72, 0x49,
	0x44, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x42, 0x0a, 0x17, 0x52, 0x65, 0x73,
	0x65, 0x6e, 0x64, 0x56, 0x65, 0x72, 0x69, 0x66, 0x79, 0x45, 0x6d, 0x61, 0x69, 0x6c, 0x4d, 0x65,
	0x6d, 0x62, 0x65, 0x72, 0x12, 0x15, 0x2e, 0x52, 0x65, 0x73, 0x65, 0x74, 0x50, 0x61, 0x73, 0x73,
	0x77, 0x6f, 0x72, 0x64, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x10, 0x2e, 0x53, 0x75,
	0x63, 0x63, 0x65, 0x73, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x3f, 0x0a,
	0x14, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x43, 0x6f, 0x6e, 0x74, 0x61, 0x63, 0x74, 0x50, 0x72,
	0x6f, 0x66, 0x69, 0x6c, 0x65, 0x12, 0x15, 0x2e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x50, 0x72,
	0x6f, 0x66, 0x69, 0x6c, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x10, 0x2e, 0x53,
	0x75, 0x63, 0x63, 0x65, 0x73, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x48,
	0x0a, 0x12, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x55, 0x73, 0x65, 0x72, 0x49, 0x6e, 0x74, 0x65,
	0x72, 0x65, 0x73, 0x74, 0x12, 0x14, 0x2e, 0x55, 0x73, 0x65, 0x72, 0x49, 0x6e, 0x74, 0x65, 0x72,
	0x65, 0x73, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x1c, 0x2e, 0x55, 0x73, 0x65,
	0x72, 0x49, 0x6e, 0x74, 0x65, 0x72, 0x65, 0x73, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x46, 0x0a, 0x16, 0x43, 0x72, 0x65, 0x61,
	0x74, 0x65, 0x55, 0x73, 0x65, 0x72, 0x49, 0x6e, 0x74, 0x65, 0x72, 0x65, 0x73, 0x74, 0x4c, 0x69,
	0x73, 0x74, 0x12, 0x15, 0x2e, 0x55, 0x73, 0x65, 0x72, 0x73, 0x49, 0x6e, 0x74, 0x65, 0x72, 0x65,
	0x73, 0x74, 0x52, 0x65, 0x71, 0x4c, 0x69, 0x73, 0x74, 0x1a, 0x15, 0x2e, 0x55, 0x73, 0x65, 0x72,
	0x73, 0x49, 0x6e, 0x74, 0x65, 0x72, 0x65, 0x73, 0x74, 0x52, 0x65, 0x73, 0x4c, 0x69, 0x73, 0x74,
	0x12, 0x4e, 0x0a, 0x12, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x55, 0x73, 0x65, 0x72, 0x49, 0x6e,
	0x74, 0x65, 0x72, 0x65, 0x73, 0x74, 0x12, 0x1a, 0x2e, 0x55, 0x73, 0x65, 0x72, 0x49, 0x6e, 0x74,
	0x65, 0x72, 0x65, 0x73, 0x74, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x1a, 0x1c, 0x2e, 0x55, 0x73, 0x65, 0x72, 0x49, 0x6e, 0x74, 0x65, 0x72, 0x65, 0x73,
	0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x12, 0x4c, 0x0a, 0x16, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x55, 0x73, 0x65, 0x72, 0x49, 0x6e,
	0x74, 0x65, 0x72, 0x65, 0x73, 0x74, 0x4c, 0x69, 0x73, 0x74, 0x12, 0x1b, 0x2e, 0x55, 0x73, 0x65,
	0x72, 0x73, 0x49, 0x6e, 0x74, 0x65, 0x72, 0x65, 0x73, 0x74, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65,
	0x52, 0x65, 0x71, 0x4c, 0x69, 0x73, 0x74, 0x1a, 0x15, 0x2e, 0x55, 0x73, 0x65, 0x72, 0x73, 0x49,
	0x6e, 0x74, 0x65, 0x72, 0x65, 0x73, 0x74, 0x52, 0x65, 0x73, 0x4c, 0x69, 0x73, 0x74, 0x12, 0x34,
	0x0a, 0x10, 0x47, 0x65, 0x74, 0x49, 0x6e, 0x74, 0x65, 0x72, 0x65, 0x73, 0x74, 0x49, 0x74, 0x65,
	0x6d, 0x73, 0x12, 0x0d, 0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x1a, 0x11, 0x2e, 0x49, 0x6e, 0x74, 0x65, 0x72, 0x65, 0x73, 0x74, 0x49, 0x74, 0x65, 0x6d,
	0x4c, 0x69, 0x73, 0x74, 0x12, 0x32, 0x0a, 0x14, 0x54, 0x65, 0x73, 0x74, 0x50, 0x75, 0x62, 0x6c,
	0x69, 0x73, 0x68, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x54, 0x65, 0x6c, 0x12, 0x0b, 0x2e, 0x55,
	0x73, 0x65, 0x72, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x1a, 0x0d, 0x2e, 0x45, 0x6d, 0x70, 0x74,
	0x79, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x42, 0x0c, 0x5a, 0x0a, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x2f, 0x75, 0x73, 0x65, 0x72, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_proto_user_user_proto_rawDescOnce sync.Once
	file_proto_user_user_proto_rawDescData = file_proto_user_user_proto_rawDesc
)

func file_proto_user_user_proto_rawDescGZIP() []byte {
	file_proto_user_user_proto_rawDescOnce.Do(func() {
		file_proto_user_user_proto_rawDescData = protoimpl.X.CompressGZIP(file_proto_user_user_proto_rawDescData)
	})
	return file_proto_user_user_proto_rawDescData
}

var file_proto_user_user_proto_msgTypes = make([]protoimpl.MessageInfo, 59)
var file_proto_user_user_proto_goTypes = []interface{}{
	(*EmptyRequest)(nil),                         // 0: EmptyRequest
	(*UpdateProfileRequest)(nil),                 // 1: UpdateProfileRequest
	(*ResetPasswordTokenRequest)(nil),            // 2: ResetPasswordTokenRequest
	(*ResetPasswordTokenResponse)(nil),           // 3: ResetPasswordTokenResponse
	(*ResetPasswordRequest)(nil),                 // 4: ResetPasswordRequest
	(*UpdateResetPasswordRequest)(nil),           // 5: UpdateResetPasswordRequest
	(*RegisterRequest)(nil),                      // 6: RegisterRequest
	(*RegisterWithMobileNumberRequest)(nil),      // 7: RegisterWithMobileNumberRequest
	(*RegisterWithMobileNumberAisRequest)(nil),   // 8: RegisterWithMobileNumberAisRequest
	(*SuccessResponse)(nil),                      // 9: SuccessResponse
	(*SuccessResult)(nil),                        // 10: successResult
	(*VerifyUserRequest)(nil),                    // 11: VerifyUserRequest
	(*VerifyUserResponse)(nil),                   // 12: VerifyUserResponse
	(*UserEvent)(nil),                            // 13: UserEvent
	(*MailEvent)(nil),                            // 14: MailEvent
	(*S3Event)(nil),                              // 15: S3Event
	(*PointTopicEvent)(nil),                      // 16: PointTopicEvent
	(*UserDetail)(nil),                           // 17: UserDetail
	(*FavoriteArtistItem)(nil),                   // 18: favoriteArtistItem
	(*UserAddressDetail)(nil),                    // 19: userAddressDetail
	(*SocialRequest)(nil),                        // 20: SocialRequest
	(*SocialResponse)(nil),                       // 21: SocialResponse
	(*UpdateSocialIDRequest)(nil),                // 22: UpdateSocialIDRequest
	(*UpdateSocialIDRespose)(nil),                // 23: UpdateSocialIDRespose
	(*UploadProfilePictureRequest)(nil),          // 24: UploadProfilePictureRequest
	(*AcceptTermRequest)(nil),                    // 25: AcceptTermRequest
	(*CheckTermResponse)(nil),                    // 26: CheckTermResponse
	(*PDPAResponse)(nil),                         // 27: PDPAResponse
	(*PrivacyPolicyRequest)(nil),                 // 28: PrivacyPolicyRequest
	(*CheckEmailHasAddressResponse)(nil),         // 29: CheckEmailHasAddressResponse
	(*EventCalendarLimitExceedResponse)(nil),     // 30: EventCalendarLimitExceedResponse
	(*EventCalendarLimitExceedResponseBody)(nil), // 31: EventCalendarLimitExceedResponseBody
	(*RequestOtpRequest)(nil),                    // 32: RequestOtpRequest
	(*RequestOtpData)(nil),                       // 33: RequestOtpData
	(*VerifyOtpData)(nil),                        // 34: VerifyOtpData
	(*RequestOtpResponse)(nil),                   // 35: RequestOtpResponse
	(*VerifyOtpRequest)(nil),                     // 36: VerifyOtpRequest
	(*VerifyOtpResponse)(nil),                    // 37: VerifyOtpResponse
	(*RequestOtpOperationToolResponse)(nil),      // 38: RequestOtpOperationToolResponse
	(*RequestOtpDataOperationTool)(nil),          // 39: RequestOtpDataOperationTool
	(*DeleteUserTempRequest)(nil),                // 40: DeleteUserTempRequest
	(*DeleteUserTempResponse)(nil),               // 41: DeleteUserTempResponse
	(*VerifyPartnerIDRequest)(nil),               // 42: VerifyPartnerIDRequest
	(*VerifyPartnerIDResponse)(nil),              // 43: VerifyPartnerIDResponse
	(*UserSubscripted)(nil),                      // 44: UserSubscripted
	(*Error)(nil),                                // 45: Error
	(*GetByTelRequest)(nil),                      // 46: GetByTelRequest
	(*UserDetailResponse)(nil),                   // 47: UserDetailResponse
	(*UsersInterestReqList)(nil),                 // 48: UsersInterestReqList
	(*UsersInterestUpdateReqList)(nil),           // 49: UsersInterestUpdateReqList
	(*UsersInterestResList)(nil),                 // 50: UsersInterestResList
	(*UserInterestRequest)(nil),                  // 51: UserInterestRequest
	(*UserInterestUpdateRequest)(nil),            // 52: UserInterestUpdateRequest
	(*InterestList)(nil),                         // 53: InterestList
	(*UserInterestResponse)(nil),                 // 54: UserInterestResponse
	(*InterestItem)(nil),                         // 55: InterestItem
	(*InterestItemList)(nil),                     // 56: InterestItemList
	(*Item)(nil),                                 // 57: Item
	(*UserInterestRequestResponse)(nil),          // 58: UserInterestRequestResponse
	(*timestamp.Timestamp)(nil),                  // 59: google.protobuf.Timestamp
	(*wrappers.StringValue)(nil),                 // 60: google.protobuf.StringValue
	(*wrappers.Int32Value)(nil),                  // 61: google.protobuf.Int32Value
	(*wrappers.BoolValue)(nil),                   // 62: google.protobuf.BoolValue
}
var file_proto_user_user_proto_depIdxs = []int32{
	19,  // 0: UpdateProfileRequest.userAddress:type_name -> userAddressDetail
	59,  // 1: ResetPasswordTokenResponse.expiredAt:type_name -> google.protobuf.Timestamp
	10,  // 2: SuccessResponse.result:type_name -> successResult
	17,  // 3: UserEvent.userdetail:type_name -> UserDetail
	60,  // 4: PointTopicEvent.data:type_name -> google.protobuf.StringValue
	59,  // 5: UserDetail.created_at:type_name -> google.protobuf.Timestamp
	59,  // 6: UserDetail.updated_at:type_name -> google.protobuf.Timestamp
	18,  // 7: UserDetail.favoriteArtists:type_name -> favoriteArtistItem
	19,  // 8: UserDetail.userAddress:type_name -> userAddressDetail
	54,  // 9: UserDetail.userInterestResponse:type_name -> UserInterestResponse
	61,  // 10: favoriteArtistItem.daraID:type_name -> google.protobuf.Int32Value
	60,  // 11: favoriteArtistItem.fullName:type_name -> google.protobuf.StringValue
	60,  // 12: favoriteArtistItem.nickName:type_name -> google.protobuf.StringValue
	60,  // 13: favoriteArtistItem.gender:type_name -> google.protobuf.StringValue
	60,  // 14: favoriteArtistItem.imageSmall:type_name -> google.protobuf.StringValue
	60,  // 15: favoriteArtistItem.imageMedium:type_name -> google.protobuf.StringValue
	60,  // 16: favoriteArtistItem.imageLarge:type_name -> google.protobuf.StringValue
	60,  // 17: favoriteArtistItem.favoriteArtistsType:type_name -> google.protobuf.StringValue
	60,  // 18: userAddressDetail.addressNumber:type_name -> google.protobuf.StringValue
	60,  // 19: userAddressDetail.villageName:type_name -> google.protobuf.StringValue
	60,  // 20: userAddressDetail.villageNumber:type_name -> google.protobuf.StringValue
	60,  // 21: userAddressDetail.lane:type_name -> google.protobuf.StringValue
	60,  // 22: userAddressDetail.road:type_name -> google.protobuf.StringValue
	61,  // 23: userAddressDetail.subDistrict:type_name -> google.protobuf.Int32Value
	61,  // 24: userAddressDetail.district:type_name -> google.protobuf.Int32Value
	61,  // 25: userAddressDetail.province:type_name -> google.protobuf.Int32Value
	60,  // 26: userAddressDetail.postalCode:type_name -> google.protobuf.StringValue
	60,  // 27: userAddressDetail.occupation:type_name -> google.protobuf.StringValue
	61,  // 28: userAddressDetail.salary:type_name -> google.protobuf.Int32Value
	60,  // 29: userAddressDetail.subDistrictName:type_name -> google.protobuf.StringValue
	60,  // 30: userAddressDetail.districtName:type_name -> google.protobuf.StringValue
	60,  // 31: userAddressDetail.provinceName:type_name -> google.protobuf.StringValue
	59,  // 32: SocialResponse.created_at:type_name -> google.protobuf.Timestamp
	59,  // 33: SocialResponse.updated_at:type_name -> google.protobuf.Timestamp
	62,  // 34: CheckTermResponse.isLatest:type_name -> google.protobuf.BoolValue
	60,  // 35: PDPAResponse.term_latest_version:type_name -> google.protobuf.StringValue
	60,  // 36: PDPAResponse.privacy_policy_latest_version:type_name -> google.protobuf.StringValue
	60,  // 37: PDPAResponse.user_term_version:type_name -> google.protobuf.StringValue
	59,  // 38: PDPAResponse.user_term_accept_date:type_name -> google.protobuf.Timestamp
	60,  // 39: PDPAResponse.user_privacy_policy_version:type_name -> google.protobuf.StringValue
	62,  // 40: PDPAResponse.user_privacy_policy_accept:type_name -> google.protobuf.BoolValue
	59,  // 41: PDPAResponse.user_privacy_policy_date:type_name -> google.protobuf.Timestamp
	60,  // 42: PDPAResponse.term_details:type_name -> google.protobuf.StringValue
	60,  // 43: PDPAResponse.privacy_policy_details:type_name -> google.protobuf.StringValue
	59,  // 44: PDPAResponse.term_latest_update_date:type_name -> google.protobuf.Timestamp
	59,  // 45: PDPAResponse.privacy_policy_lastest_update_date:type_name -> google.protobuf.Timestamp
	62,  // 46: PrivacyPolicyRequest.accept:type_name -> google.protobuf.BoolValue
	60,  // 47: CheckEmailHasAddressResponse.message:type_name -> google.protobuf.StringValue
	62,  // 48: CheckEmailHasAddressResponse.result:type_name -> google.protobuf.BoolValue
	60,  // 49: EventCalendarLimitExceedResponse.message:type_name -> google.protobuf.StringValue
	31,  // 50: EventCalendarLimitExceedResponse.result:type_name -> EventCalendarLimitExceedResponseBody
	62,  // 51: EventCalendarLimitExceedResponseBody.exceed:type_name -> google.protobuf.BoolValue
	61,  // 52: EventCalendarLimitExceedResponseBody.amount:type_name -> google.protobuf.Int32Value
	60,  // 53: RequestOtpData.reference:type_name -> google.protobuf.StringValue
	61,  // 54: RequestOtpData.requestedTimes:type_name -> google.protobuf.Int32Value
	60,  // 55: RequestOtpData.createdAt:type_name -> google.protobuf.StringValue
	62,  // 56: VerifyOtpData.isValid:type_name -> google.protobuf.BoolValue
	33,  // 57: RequestOtpResponse.data:type_name -> RequestOtpData
	34,  // 58: VerifyOtpResponse.result:type_name -> VerifyOtpData
	39,  // 59: RequestOtpOperationToolResponse.data:type_name -> RequestOtpDataOperationTool
	60,  // 60: RequestOtpDataOperationTool.reference:type_name -> google.protobuf.StringValue
	60,  // 61: RequestOtpDataOperationTool.otp:type_name -> google.protobuf.StringValue
	60,  // 62: RequestOtpDataOperationTool.createdAt:type_name -> google.protobuf.StringValue
	44,  // 63: VerifyPartnerIDResponse.result:type_name -> UserSubscripted
	17,  // 64: UserDetailResponse.data:type_name -> UserDetail
	45,  // 65: UserDetailResponse.error:type_name -> Error
	51,  // 66: UsersInterestReqList.usersInterestList:type_name -> UserInterestRequest
	52,  // 67: UsersInterestUpdateReqList.usersInterestUpdateReqList:type_name -> UserInterestUpdateRequest
	54,  // 68: UsersInterestResList.usersInterestResList:type_name -> UserInterestResponse
	59,  // 69: UserInterestResponse.created_at:type_name -> google.protobuf.Timestamp
	59,  // 70: UserInterestResponse.updated_at:type_name -> google.protobuf.Timestamp
	57,  // 71: UserInterestResponse.items:type_name -> Item
	55,  // 72: InterestItemList.items:type_name -> InterestItem
	54,  // 73: UserInterestRequestResponse.data:type_name -> UserInterestResponse
	45,  // 74: UserInterestRequestResponse.error:type_name -> Error
	6,   // 75: User.Register:input_type -> RegisterRequest
	7,   // 76: User.RegisterWithMobileNumber:input_type -> RegisterWithMobileNumberRequest
	8,   // 77: User.RegisterWithMobileNumberAis:input_type -> RegisterWithMobileNumberAisRequest
	0,   // 78: User.Profile:input_type -> EmptyRequest
	11,  // 79: User.VerifyUser:input_type -> VerifyUserRequest
	20,  // 80: User.AutoRegisterBySocial:input_type -> SocialRequest
	22,  // 81: User.UpdateSocialID:input_type -> UpdateSocialIDRequest
	4,   // 82: User.ResetPassword:input_type -> ResetPasswordRequest
	2,   // 83: User.ResetPasswordToken:input_type -> ResetPasswordTokenRequest
	5,   // 84: User.UpdateResetPassword:input_type -> UpdateResetPasswordRequest
	1,   // 85: User.UpdateProfile:input_type -> UpdateProfileRequest
	24,  // 86: User.UploadProfilePicture:input_type -> UploadProfilePictureRequest
	11,  // 87: User.ResendVerifyByOldToken:input_type -> VerifyUserRequest
	4,   // 88: User.Resendverify:input_type -> ResetPasswordRequest
	0,   // 89: User.CheckTerm:input_type -> EmptyRequest
	0,   // 90: User.AcceptTerm:input_type -> EmptyRequest
	0,   // 91: User.DeleteAccount:input_type -> EmptyRequest
	0,   // 92: User.TriggerDeleteTemp:input_type -> EmptyRequest
	0,   // 93: User.GetPdpa:input_type -> EmptyRequest
	28,  // 94: User.AcceptPrivacyPolicy:input_type -> PrivacyPolicyRequest
	0,   // 95: User.CheckEmailHasAddress:input_type -> EmptyRequest
	0,   // 96: User.EventCalendarLimitExceed:input_type -> EmptyRequest
	32,  // 97: User.RequestOtp:input_type -> RequestOtpRequest
	36,  // 98: User.VerifyOtp:input_type -> VerifyOtpRequest
	32,  // 99: User.RequestOtpOperationTool:input_type -> RequestOtpRequest
	40,  // 100: User.DeleteUserTemp:input_type -> DeleteUserTempRequest
	46,  // 101: User.Getbytel:input_type -> GetByTelRequest
	42,  // 102: User.VerifyPartnerID:input_type -> VerifyPartnerIDRequest
	4,   // 103: User.ResendVerifyEmailMember:input_type -> ResetPasswordRequest
	1,   // 104: User.UpdateContactProfile:input_type -> UpdateProfileRequest
	51,  // 105: User.CreateUserInterest:input_type -> UserInterestRequest
	48,  // 106: User.CreateUserInterestList:input_type -> UsersInterestReqList
	52,  // 107: User.UpdateUserInterest:input_type -> UserInterestUpdateRequest
	49,  // 108: User.UpdateUserInterestList:input_type -> UsersInterestUpdateReqList
	0,   // 109: User.GetInterestItems:input_type -> EmptyRequest
	17,  // 110: User.TestPublishDeleteTel:input_type -> UserDetail
	9,   // 111: User.Register:output_type -> SuccessResponse
	9,   // 112: User.RegisterWithMobileNumber:output_type -> SuccessResponse
	9,   // 113: User.RegisterWithMobileNumberAis:output_type -> SuccessResponse
	17,  // 114: User.Profile:output_type -> UserDetail
	12,  // 115: User.VerifyUser:output_type -> VerifyUserResponse
	21,  // 116: User.AutoRegisterBySocial:output_type -> SocialResponse
	23,  // 117: User.UpdateSocialID:output_type -> UpdateSocialIDRespose
	9,   // 118: User.ResetPassword:output_type -> SuccessResponse
	3,   // 119: User.ResetPasswordToken:output_type -> ResetPasswordTokenResponse
	9,   // 120: User.UpdateResetPassword:output_type -> SuccessResponse
	9,   // 121: User.UpdateProfile:output_type -> SuccessResponse
	9,   // 122: User.UploadProfilePicture:output_type -> SuccessResponse
	12,  // 123: User.ResendVerifyByOldToken:output_type -> VerifyUserResponse
	12,  // 124: User.Resendverify:output_type -> VerifyUserResponse
	26,  // 125: User.CheckTerm:output_type -> CheckTermResponse
	9,   // 126: User.AcceptTerm:output_type -> SuccessResponse
	9,   // 127: User.DeleteAccount:output_type -> SuccessResponse
	9,   // 128: User.TriggerDeleteTemp:output_type -> SuccessResponse
	27,  // 129: User.GetPdpa:output_type -> PDPAResponse
	9,   // 130: User.AcceptPrivacyPolicy:output_type -> SuccessResponse
	29,  // 131: User.CheckEmailHasAddress:output_type -> CheckEmailHasAddressResponse
	30,  // 132: User.EventCalendarLimitExceed:output_type -> EventCalendarLimitExceedResponse
	35,  // 133: User.RequestOtp:output_type -> RequestOtpResponse
	37,  // 134: User.VerifyOtp:output_type -> VerifyOtpResponse
	38,  // 135: User.RequestOtpOperationTool:output_type -> RequestOtpOperationToolResponse
	41,  // 136: User.DeleteUserTemp:output_type -> DeleteUserTempResponse
	47,  // 137: User.Getbytel:output_type -> UserDetailResponse
	43,  // 138: User.VerifyPartnerID:output_type -> VerifyPartnerIDResponse
	9,   // 139: User.ResendVerifyEmailMember:output_type -> SuccessResponse
	9,   // 140: User.UpdateContactProfile:output_type -> SuccessResponse
	58,  // 141: User.CreateUserInterest:output_type -> UserInterestRequestResponse
	50,  // 142: User.CreateUserInterestList:output_type -> UsersInterestResList
	58,  // 143: User.UpdateUserInterest:output_type -> UserInterestRequestResponse
	50,  // 144: User.UpdateUserInterestList:output_type -> UsersInterestResList
	56,  // 145: User.GetInterestItems:output_type -> InterestItemList
	0,   // 146: User.TestPublishDeleteTel:output_type -> EmptyRequest
	111, // [111:147] is the sub-list for method output_type
	75,  // [75:111] is the sub-list for method input_type
	75,  // [75:75] is the sub-list for extension type_name
	75,  // [75:75] is the sub-list for extension extendee
	0,   // [0:75] is the sub-list for field type_name
}

func init() { file_proto_user_user_proto_init() }
func file_proto_user_user_proto_init() {
	if File_proto_user_user_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_proto_user_user_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*EmptyRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_user_user_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdateProfileRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_user_user_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ResetPasswordTokenRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_user_user_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ResetPasswordTokenResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_user_user_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ResetPasswordRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_user_user_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdateResetPasswordRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_user_user_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RegisterRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_user_user_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RegisterWithMobileNumberRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_user_user_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RegisterWithMobileNumberAisRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_user_user_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SuccessResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_user_user_proto_msgTypes[10].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SuccessResult); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_user_user_proto_msgTypes[11].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*VerifyUserRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_user_user_proto_msgTypes[12].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*VerifyUserResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_user_user_proto_msgTypes[13].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UserEvent); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_user_user_proto_msgTypes[14].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MailEvent); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_user_user_proto_msgTypes[15].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*S3Event); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_user_user_proto_msgTypes[16].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PointTopicEvent); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_user_user_proto_msgTypes[17].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UserDetail); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_user_user_proto_msgTypes[18].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*FavoriteArtistItem); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_user_user_proto_msgTypes[19].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UserAddressDetail); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_user_user_proto_msgTypes[20].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SocialRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_user_user_proto_msgTypes[21].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SocialResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_user_user_proto_msgTypes[22].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdateSocialIDRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_user_user_proto_msgTypes[23].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdateSocialIDRespose); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_user_user_proto_msgTypes[24].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UploadProfilePictureRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_user_user_proto_msgTypes[25].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AcceptTermRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_user_user_proto_msgTypes[26].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CheckTermResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_user_user_proto_msgTypes[27].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PDPAResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_user_user_proto_msgTypes[28].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PrivacyPolicyRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_user_user_proto_msgTypes[29].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CheckEmailHasAddressResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_user_user_proto_msgTypes[30].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*EventCalendarLimitExceedResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_user_user_proto_msgTypes[31].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*EventCalendarLimitExceedResponseBody); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_user_user_proto_msgTypes[32].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RequestOtpRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_user_user_proto_msgTypes[33].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RequestOtpData); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_user_user_proto_msgTypes[34].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*VerifyOtpData); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_user_user_proto_msgTypes[35].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RequestOtpResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_user_user_proto_msgTypes[36].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*VerifyOtpRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_user_user_proto_msgTypes[37].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*VerifyOtpResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_user_user_proto_msgTypes[38].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RequestOtpOperationToolResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_user_user_proto_msgTypes[39].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RequestOtpDataOperationTool); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_user_user_proto_msgTypes[40].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DeleteUserTempRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_user_user_proto_msgTypes[41].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DeleteUserTempResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_user_user_proto_msgTypes[42].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*VerifyPartnerIDRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_user_user_proto_msgTypes[43].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*VerifyPartnerIDResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_user_user_proto_msgTypes[44].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UserSubscripted); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_user_user_proto_msgTypes[45].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Error); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_user_user_proto_msgTypes[46].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetByTelRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_user_user_proto_msgTypes[47].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UserDetailResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_user_user_proto_msgTypes[48].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UsersInterestReqList); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_user_user_proto_msgTypes[49].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UsersInterestUpdateReqList); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_user_user_proto_msgTypes[50].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UsersInterestResList); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_user_user_proto_msgTypes[51].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UserInterestRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_user_user_proto_msgTypes[52].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UserInterestUpdateRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_user_user_proto_msgTypes[53].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*InterestList); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_user_user_proto_msgTypes[54].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UserInterestResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_user_user_proto_msgTypes[55].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*InterestItem); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_user_user_proto_msgTypes[56].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*InterestItemList); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_user_user_proto_msgTypes[57].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Item); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_user_user_proto_msgTypes[58].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UserInterestRequestResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_proto_user_user_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   59,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_proto_user_user_proto_goTypes,
		DependencyIndexes: file_proto_user_user_proto_depIdxs,
		MessageInfos:      file_proto_user_user_proto_msgTypes,
	}.Build()
	File_proto_user_user_proto = out.File
	file_proto_user_user_proto_rawDesc = nil
	file_proto_user_user_proto_goTypes = nil
	file_proto_user_user_proto_depIdxs = nil
}
